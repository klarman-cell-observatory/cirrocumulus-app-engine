{"version":3,"sources":["CustomError.js","SlicedVector.js","Vector.js","VectorUtil.js","dataset_filter.js","DirectAccessDataset.js","RestDataset.js","RestServerApi.js","ChartToolbar.js","formatters.js","ColorSchemeLegend.js","ChartUtil.js","LegendDrawer.js","util.js","ThreeUtil.js","ScatterChartThree.js","actions/index.js","DatasetSelector.js","reducers/index.js","AppHeader.js","DeleteDatasetDialog.js","ColorSchemeSelector.js","SizeLegend.js","DotPlotCanvas.js","kde.js","ViolinPlotOneFeature.js","ViolinPlot.js","DistributionGroup.js","DistributionPlots.js","EditDatasetDialog.js","CategoricalLegend.js","ContinuousLegend.js","MeasureFilter.js","ColorSchemeLegendWrapper.js","CanvasOverlayHd.js","OpenseadragonSvgOverlay.js","ImageChart.js","MetaEmbedding.js","EmbeddingChart.js","EmbeddingCharts.js","GalleryImage.js","GalleryCharts.js","HelpDialog.js","MoreOptionsDialog.js","PrecomputedResultsPanel.js","SaveDatasetFilterDialog.js","SaveSetDialog.js","AutocompleteVirtualized.js","PrecomputedResultsSelector.js","SideBar.js","App.js","index.js"],"names":["CustomError","Error","SlicedVector","vector","indices","this","getName","length","i","get","Vector","name","values","getVarNameType","key","index","indexOf","type","key_type","substring","getStats","dimensions","obsMeasures","varMeasures","results","forEach","v","valueToCount","Map","size","count","set","keys","Array","from","sort","natsort","counts","map","categories","valueCounts","stats","getVectors","cachedData","names","vectors","array","push","cacheValues","result","embeddings","embedding","coordinates","Object","feature","getTypeToMeasures","measures","typeToMeasures","X","obs","typeMeasures","undefined","getBasis","basis","nbins","agg","precomputed","parseInt","coordinate_columns","full_name","splitDataFilter","data_filter","var_keys","Set","obs_keys","basis_list","user_filters","filters","user_filter","isObject","ndim","add","computeDerivedStats","q","summary","groupedStats","distribution","selection","selectedIndices","getPassingFilterIndices","filter","categoryMap","tmp","j","join","value","slice","dimensionNames","dimensionName","category","categoryVector","categoryStats","entry","dimension","mean","fractionExpressed","numExpressed","min","Number","MAX_VALUE","max","NaN","combine","a","b","op","x","has","getIndices","f","passingIndices","combine_filters","filter_obj","field","keep","selected_points_basis","points","selection_keep","path","p","xKeep","val","width","yKeep","y","height","z","zKeep","depth","applyFunction","nameType","series","d","DirectAccessDataset","id","url","key2data","format","schema","endsWith","baseUrl","lastIndexOf","Promise","resolve","reject","fetch","then","r","json","key2bytes","getByteRange","response","range","headers","promises","_fetch","data","isArray","Float32Array","shape","n","all","dataFilter","concat","fetchData","idVector","getVector","ids","obj","basisKeys","mappedEmbeddings","asArray","Int8Array","fill","file","reshapeDistributionResult","distributionResult","RestDataset","local","getDataPromise","API","body","JSON","stringify","method","getIdToken","dataSend","RestServerApi","datasetId","dataset","isEdit","importDatasetResponse","isUpdate","setId","ds_id","ok","text","filterId","jobId","active","ChartToolbar","props","setDragMode","mode","onDragMode","onShowLabels","onShowAxis","onShowFog","onGallery","handleMoreOptions","onMoreOptions","setEditSelection","onEditSelection","handleSaveImageMenu","event","setState","saveImageEl","currentTarget","handleSaveImageMenuClose","handleSaveImage","onSaveImage","state","dragmode","editSelection","showLabels","showAxis","Fragment","onZoomIn","Tooltip","title","IconButton","edge","aria-label","onClick","onZoomOut","onHome","className","viewBox","transform","is3d","animating","toggleAnimation","showFog","aria-controls","aria-haspopup","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","e","React","PureComponent","numberFormat","numberFormat2f","intFormat","numberFormat0","drawColorScheme","context","colorScale","textColor","label","domain","nsteps","gradient","createLinearGradient","valueToFraction","scaleLinear","clamp","stepSize","isNaN","color","addColorStop","fillStyle","fillRect","strokeStyle","strokeRect","textBaseline","textAlign","fillText","ColorSchemeLegend","ref","createRef","backingScale","current","getContext","clearRect","scale","font","CANVAS_FONT","setTransform","redraw","prevProps","prevState","snapshot","window","devicePixelRatio","style","assign","SVG_FONT","saveImage","traceInfo","chartSize","draw","canvas","totalSize","document","createElement","C2S","continuous","legendSize","maxWidth","measureText","Math","getCategoricalLegendSize","translate","drawCategoricalLegend","svg","getSerializedSvg","blob","Blob","saveAs","toBlob","interpolators","CATEGORY_20B","CATEGORY_20C","OBS_SEARCH_TOKEN","OBS_CAT_SEARCH_TOKEN","FEATURE_SET_SEARCH_TOKEN","METAFEATURE_SEARCH_TOKEN","stripTrailingZeros","s","ending","allZeros","updateTraceColors","colors","colorMapper","rgb","formatHex","npoints","trace","RGBA_NUM_ELEMENTS","rgbScale","dst","c","g","getColors","svgNode","source","galleryNode","gallerySource","categoryToStats","query","replaceAll","querySelectorAll","node","rankIndexArray","rank","Uint32Array","indexSort","ascending","pairs","indexSortPairs","randomSeq","start","shuffle","isPointInside","point","vs","inside","xi","yi","xj","yj","arrayToSvgPath","lassoPathArray","simplify","svgPath","fixInterpolatorName","startsWith","getInterpolator","scaleChromatic","convertBinsToIndices","bins","selectedBins","addFeatureSetsToX","featureSets","uniqueX","featureSet","features","getFeatureSets","markers","featureSetIds","featureSetId","splitSearchTokens","tokens","obsCat","featureSetsAdd","metafeatures","token","console","log","smoothstep","edge0","edge1","t","min_v","max_v","mix","drawLabels","labels","positions","chartOptions","camera","pos","Vector3","darkMode","lineWidth","labelStrokeWidth","widthHalf","heightHalf","k","project","strokeText","getVisualizer","scatterPlot","visualizers","ScatterChartThree","bind","drawContext","setChartOptions","resetCamera","resetZoom","axes","scene","getObjectByName","visible","spriteVisualizer","POINT_VISUALIZER_ID","styles","fog","enabled","setInteractionMode","rectangleSelector","setSelectionMode","onToggleAnimation","orbitIsAnimating","stopOrbitAnimation","startOrbitAnimation","containerElementRef","tooltipElementRef","lastHoverIndex","forceUpdate","resize","init","updateFromCameraDef","pointSize","markerOpacity","unselectedMarkerOpacity","categoricalNames","calculatePointSize","scaleFactor","PI2","PI","outputPointSize","outNorm","atan","zoom","projectionMatrix","elements","gl_PointSize","cameraSpacePos","Vector4","object","modelViewMatrix","clone","multiplyMatrices","matrixWorldInverse","matrixWorld","pointOrder","isSelectionEmpty","positionIndex","colorIndex","isSelected","w","applyMatrix4","fogDepth","fogFactor","near","far","round","beginPath","arc","closePath","labelsPositions","getCategoryLabelsPositions","labelFontSize","getLabels","containerElement","createScatterPlot","ApplePaySession","hoverCallback","innerHTML","selectedIndex","abs","categoryObject","renamedValue","lassoCallback","onDeselect","getEmbeddingKey","onSelected","clear","boxCallback","rect","interactionMode","selectedPoints","querySelector","outline","addEventListener","preventDefault","updateScatterChart","classes","root","onCopyImage","Typography","display","paddingLeft","verticalAlign","withStyles","theme","margin","spacing","padding","position","top","left","whiteSpace","overflow","LABELS_VISUALIZER_ID","domainDifference","rangeDifference","getScaleFactor","ORTHO_CAMERA_FRUSTUM_HALF_EXTENT","aspectRatio","right","bottom","OrthographicCamera","up","updateProjectionMatrix","premultipliedAlpha","interactive","makeStyles","label3D","fontSize","ScatterPlot","selectEnabled","ScatterPlotVisualizerSprites","ScatterPlotVisualizerSvgLabels","setActiveVisualizers","obsKeys","arrayOfArrays","embeddingKey","xScale","yScale","zScale","xExtent","yExtent","zExtent","valueToCoords","ncategories","isSpatial","spatial","nobs","getRange","extent","Infinity","xRange","yRange","zRange","maxRange","makeScaleRange","base","SCATTER_PLOT_CUBE_LENGTH","labelValues","labelPositions","mid","xmedian","ymedian","zmedian","obsCatKeys","background","Color","setDimensions","setPointColors","setPointPositions","setPointScaleFactors","labelsVisualizer","labelsActive","labelKey","shadowColor","shadowStroke","setLabels","render","labelStrings","renamedCategories","authScopes","SET_EMBEDDING_LABELS","SET_DISTRIBUTION_PLOT_INTERPOLATOR","SET_CHART_OPTIONS","SET_COMBINE_DATASET_FILTERS","SET_DATASET_FILTERS","SET_PRIMARY_TRACE_KEY","SET_CHART_SIZE","SET_PRIMARY_CHART_SIZE","SET_SERVER_INFO","SET_DATASET_FILTER","ADD_DATASET","DELETE_DATASET","UPDATE_DATASET","SET_GLOBAL_FEATURE_SUMMARY","SET_SAVED_DATASET_STATE","SET_DOMAIN","SET_CATEGORICAL_COLOR","SET_CATEGORICAL_NAME","SET_MARKER_OPACITY","SET_UNSELECTED_MARKER_OPACITY","SET_SELECTION","SET_FEATURE_SUMMARY","SET_SEARCH_TOKENS","SET_SELECTED_EMBEDDING","SET_NUMBER_OF_BINS","SET_BIN_VALUES","SET_BIN_SUMMARY","SET_MESSAGE","SET_INTERPOLATOR","SET_POINT_SIZE","SET_EMAIL","SET_USER","SET_DATASET","SET_MARKERS","SET_DIALOG","MORE_OPTIONS_DIALOG","EDIT_DATASET_DIALOG","IMPORT_DATASET_DIALOG","SAVE_DATASET_FILTER_DIALOG","SAVE_FEATURE_SET_DIALOG","HELP_DIALOG","DELETE_DATASET_DIALOG","SET_DATASET_CHOICES","RESTORE_VIEW","SET_DISTRIBUTION_DATA","SET_SELECTED_DISTRIBUTION_DATA","SET_DISTRIBUTION_PLOT_OPTIONS","SET_EMBEDDING_DATA","SET_LOADING","SET_TAB","SET_LOADING_APP","isEmbeddingBinned","bin","fullName","getTraceKey","getEmbeddingJson","logout","dispatch","getState","gapi","auth2","getAuthInstance","signOut","payload","_setDataset","getDatasetFilterArray","datasetFilter","allPoints","operation","getFilterJson","combineDatasetFilters","setDistributionPlotOptions","setCombineDatasetFilters","_setCombineDatasetFilters","handleFilterUpdated","setPrimaryTraceKey","setDatasetFilter","setSelection","setFeatureSummary","_setLoading","searchTokens","item","isCurrentSelectionEmpty","chart","setSelectedDistributionData","selectedEmbeddings","api","handleSelectionResult","catch","err","handleError","finally","handleBrushFilterUpdated","convertIndicesToBins","update","_handleCategoricalNameChange","setUser","loadDefaultDatasetEmbedding","embeddingNames","embeddingNames2Priority","nameLower","toLowerCase","setSelectedEmbedding","loadDefaultDataset","datasetChoices","setDataset","restoreSavedView","savedView","colorScheme","interpolator","uiValue","_updateCharts","distributionPlotOptions","primaryTraceKey","setMessage","_loadSavedView","location","search","parse","decodeURIComponent","initLogin","loadSavedView","isSignedIn","email","currentUser","getBasicProfile","getEmail","_setEmail","serverInfo","getUserPromise","user","listDatasets","getAuthResponse","id_token","saveDataset","readers","description","updatePermissions","permissionsResponse","upsertDatasetPromise","importDatasetResult","dsUpdate","owner","updateDataset","_addDataset","setDialog","deleteDataset","deleteDatasetPromise","_deleteDataset","setEmbeddingData","setMarkers","setTab","_setLoadingApp","prior","setDatasetFilters","loadDefaultView","setLoading","savedDatasetState","selectedChoice","categoryNameResults","newDataset","datasetFilters","isDirectAccess","access","categoriesRenamePromise","getCategoryNamesPromise","filtersPromise","getFiltersPromise","schemaPromise","getSchemaPromise","_nbins","var","oldValue","original","new","onPromisesComplete","selectionResult","chartSelection","selectedIndicesOrBins","indices_or_bins","userPoints","selectionSummary","featureSummary","selectedDistributionData","updateDistributionData","newDistributionData","distributionData","dimensionKeys","splice","featureSortOrder","onError","embeddingData","globalFeatureSummary","embeddingCoordinatesToFetch","valuesToFetch","binnedEmbeddingValuesToFetch","embeddingKeys","filterJson","embeddingImagesToFetch","selectedEmbedding","attrs","group","getFileUrl","image","imagePromise","createRange","createContextualFragment","firstElementChild","div","appendChild","rules","sheet","rule","matches","selectorText","styleMap","child","toString","remove","getDatasetFilterDependencies","date","Date","distributionCategories","distributionCategoryKeys","distributionMeasuresToFetch","cachedDistributionKeys","distributionDataItem","embeddingCoordinatesToFetchKeys","datum","embeddingJson","coords","binnedEmbeddingValuesToFetchKeys","globalFeatureSummaryXCacheMiss","globalFeatureSummaryObsContinuousCacheMiss","globalFeatureSummaryDimensionsCacheMiss","allPromises","newSummary","existingFeaturePlusEmbeddingKeys","embeddingDatum","isBinned","traceType","featurePlusEmbeddingKey","featureKey","traceSummary","purity","isCategorical","traceUniqueValues","schemeCategory10","schemePaired","scaleOrdinal","isPlainObject","newValues","sum","customMin","customMax","scaleSequential","chartData","ranks","getPositions","cloneNode","groupBy","passingGroupToValues","getCategoryToStats","groupToValues","maxValue","tileSource","OpenSeadragon","ImageTileSource","buildPyramid","crossOriginPolicy","updateEmbeddingData","setDistributionData","message","status","getDatasetsPromise","choices","DatasetSelector","handleClick","searchText","handleClose","handleCloseDatasetDetails","datasetDetailsEl","selectedDataset","handleListItemDetailsClick","getDatasetPromise","handleListItemClick","onChange","handleClearSearchText","onSearchChange","target","selectedId","filteredChoices","searchTextLower","trim","choice","datasetDetailsOpen","hasMoreInfo","Popover","anchorOrigin","vertical","horizontal","transformOrigin","CircularProgress","component","linkTarget","children","Button","variant","startIcon","TextField","placeholder","fullWidth","InputProps","endAdornment","InputAdornment","List","dense","disablePadding","ListItem","alignItems","selected","button","ListItemText","primary","textOverflow","ListItemSecondaryAction","connect","DEFAULT_BIN_SUMMARY","DEFAULT_NUMBER_BINS","DEFAULT_UNSELECTED_MARKER_OPACITY","DEFAULT_INTERPOLATOR","DEFAULT_DOT_PLOT_INTERPOLATOR","DEFAULT_DIST_PLOT_OPTIONS","chartType","violinScale","violinHeight","violinWidth","violinShowBoxplot","DEFAULT_INTERPOLATOR_OBJ","DEFAULT_DOT_PLOT_INTERPOLATOR_OBJ","DEFAULT_PRIMARY_CHART_SIZE","innerWidth","innerHeight","DEFAULT_CHART_OPTIONS","combineReducers","binSummary","action","binValues","dialog","dotPlotInterpolator","stateIndex","embeddingLabels","loading","loadingApp","progress","newResults","categoryName","readonly","markers_read_only","numberOfBins","primaryChartSize","traces","tab","AntTab","minWidth","textTransform","fontWeight","typography","fontWeightRegular","marginRight","opacity","fontWeightMedium","Tab","disableRipple","AppHeader","handleTabChange","handleTab","handleEmbeddingsChange","numberOfBinsUI","handleEmbeddings","handleUserMenuClose","userMenuOpen","handleMoreMenuClose","moreMenuOpen","handleHelp","handleDialog","handleUserMenuOpen","userMenuAnchorEl","handleMoreMenuOpen","moreMenuAnchorEl","getLinkJson","_bin","chartRef","getCameraDef","jsonChartOptions","defaultChartOptions","datasetFilterJson","handleDataset","link","handleSavedDatasetState","copyLink","linkText","protocol","host","pathname","encodeURIComponent","container","activeElement","fakeElem","isRTL","documentElement","getAttribute","border","setAttribute","yPosition","pageYOffset","scrollTop","select","setSelectionRange","execCommand","fakeHandlerCallback","blur","getSelection","removeAllRanges","removeChild","removeEventListener","onDarkMode","handleChartOptions","handleLogout","handleImportDataset","handleSettings","handleDelete","handleShowDatasetDetails","hasDatasetDetails","hasSelection","showNewDataset","importer","showEditDeleteDataset","showMoreMenu","isSignedOut","clientId","AppBar","appBar","Toolbar","aria-owns","Tabs","indicatorColor","marginLeft","Divider","handleLogin","flexWrap","drawerWidth","ownProps","signIn","DeleteDatasetDialog","handleCancel","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogActions","disabled","stripInterpolate","ColorSchemeSelector","handleInterpolatorChange","handleInterpolator","Select","input","Input","multiple","divider","getScale","formControl","drawSizeLegend","steps","legendHeight","valueToX","valueToRadius","pix","radius","stroke","SizeLegend","CHIP_SIZE","getNameWidth","array2d","offsets","xTotal","DotPlotCanvas","getSize","colorScaleHeight","sizeScale","divRef","maxRadius","getBoundingClientRect","xy","clientX","clientLeft","clientY","clientTop","col","floor","row","meanFormatted","percentExpressed","append","data2d","categoryColorScales","drawCircles","diameter","ypix","xpix","frac","xpixstart","xoffsets","categoryColorScale","save","rotate","restore","maxFeatureWidth","nameWidth","subtitle","variance","diff","gaussian","sqrt","exp","createKDE","bandwidth","kernel","len","factor","drawFeature","options","drawCategories","yscale","featureIndex","xmin","xmax","ymax","density","xscale","nice","lineCap","lineJoin","categoryIndex","moveTo","lineTo","boxplotWidth","boxplotStats","q3","q1","median","upperAdjacentValue","lowerAdjacentValue","textWidth","tickFormat","ticks","tick","offset","ViolinPlotOneFeature","mousemove","onTooltip","mouseout","initialized","canvasRef","throttle","Box","borderColor","marginTop","ViolinPlot","totalHeight","medianFormatted","dummyContext","updateNames","renamedDimensions","nameMap","newName","reshapeData","categoryToFeatures","sortBy","category2mean","category2fractionExpressed","val1","val2","sorter","insensitive","getMeanAndFractionRange","fractionRange","meanRange","fraction","DistributionGroup","onMinChange","updateMin","onDistributionPlotOptions","parseFloat","onMaxChange","updateMax","onMinSizeChange","minSize","updateMinSize","onSortOrderChanged","onMaxSizeChange","sizeMax","updateMaxSize","maxSize","debounce","selectedData","meanAndFractionRange","selectedMeanAndFractionRange","found","colorMin","colorMax","allData","quantileSorted","q50","upperOutlier","lowerOutlier","x0","lo","hi","iqr","pow","nrd0","gridsize","step","maxKDE","kde","sortChoices","float","InputLabel","shrink","InputLabelProps","paddingTop","FormControl","DistributionPlots","dimension2data","dimension2selecteddata","TabPanel","other","role","hidden","EditDatasetDialog","handleSave","split","getUniqueArray","onTabChanged","tabValue","onEmailChanged","onUrlChanged","onNameChanged","onDescriptionChanged","onTitleChanged","myIndex","autoComplete","required","helperText","inputProps","maxLength","FormHelperText","Link","href","rows","rowsMax","multiline","CategoricalLegend","handlePopoverClose","contextmenuEl","handleColorChange","handleNameChange","handleColorChangeApply","categoryValue","handleNameChangeApply","handleEditColor","menu","handleEditName","handleContextmenuClose","clickEnabled","shiftKey","metaKey","handleContextmenu","stopPropagation","maxHeight","nObs","nObsSelected","categoricalFilterValues","selectedDimensionToCount","globalDimensionSummary","renamed1","renamed2","renamedCategoryValue","categoryCount","selectedCategoryCount","fractionSelected","globalTitle","categoryText","renamed","selectionTitle","cursor","onContextMenu","userSelect","ContinuousLegend","summaryNames","globalSummary","summaryName","getTable","MeasureFilter","handleOperationChanged","handleUpdate","handleValueUpdate","getFilter","handleValueChange","labelId","ColorSchemeLegendWrapper","onMinUpdate","handleDomain","onMaxUpdate","CanvasOverlayHd","viewer","_viewer","_containerWidth","_containerHeight","_canvas","onRedraw","clearBeforeRedraw","addHandler","_updateCanvas","backingScaleUpdated","clientWidth","clientHeight","viewportZoom","viewport","getZoom","world","getItemCount","getItemAt","viewportToImageZoom","vp","imageToViewportCoordinates","pixelFromPoint","webPoint","viewportPos","pointFromPixel","tiledImage","viewportPosRect","Rect","tileSourcePos","_viewportToTiledImageRectangle","getTopLeft","svgNS","OpenseadragonSvgOverlay","self","_svg","createElementNS","_node","evt","Point","rotation","getRotation","getSpotRadius","spot_diameter","ceil","drawSpots","spotRadius","setLineDash","globalAlpha","ImageChart","img","levels","context2D","zoomBy","zoomPerClick","applyConstraints","goHome","uniqueId","x2","y2","px","py","findPointIndex","drawImage","_drawOverlay","opts","destroy","ready","addOnceHandler","src","gestureSettingsMouse","dblClickToZoom","clickToZoom","autoResize","showFullPageControl","collectionMode","showNavigationControl","tileSources","_this","canvasOverlay","startCoordinates","lastBoundingBox","innerTracker","moveHandler","viewportPoint","imagePoint","viewportToImageCoordinates","setTooltip","preventDefaultAction","lassoPath","rectElement","findPointsInPolygon","findPointsInRectangle","removeAttribute","svgOverlay","elem","createViewer","zIndex","MetaEmbedding","xml","XMLSerializer","serializeToString","image64","btoa","Image","onload","updateSvg","childNodes","nodeName","nodeNamesKeep","svgChildren","d3Zoom","scaleExtent","on","call","zoomIdentity","scaleBy","EmbeddingChart","handleExpandClick","showDetails","onChartOptions","onColorChange","onDimensionFilterUpdated","onDomain","onMeasureFilterUpdated","onNameChange","onSelect","activeEmbeddingLabels","displayName","showColorScheme","onInitialized","embeddingChartSize","selectedValues","lastIndex","currentIndex","dataset_id","fancy","setCategoryNamePromise","o","emptySet","EmbeddingCharts","resizeListener","handlePrimaryChartSize","primaryTraces","primaryTrace","GalleryImage","overlayUrl","elementRef","zoomFactor","labelCanvas","toDataURL","element","drawEmbeddingImage","alt","createContainer","GalleryCharts","onChartSelected","handlePrimaryTraceKey","scrollTo","onSortEnd","galleryTraces","oldIndex","sortIndex","newIndex","handleEmbeddingData","SortableItem","sortableElement","SortableList","sortableContainer","items","distance","axis","HelpDialog","rel","MoreOptionsDialog","onLabelFontSizeUpdate","onLabelFontSize","onLabelStrokeWidth","onLabelStrokeWidthUpdate","PrecomputedResultsPanel","columns","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","hover","aria-checked","tabIndex","SaveDatasetFilterDialog","onNotesChanged","notes","savedFilter","create","savedDatasetFilter","filterValue","requestBody","sendRequest","isEqual","upsertDatasetFilterPromise","SaveSetDialog","onCategoryChanged","upsertFeatureSet","renderRow","cloneElement","OuterElementContext","createContext","OuterElementType","forwardRef","outerProps","useContext","ListboxComponent","itemData","Children","toArray","useTheme","smUp","useMediaQuery","breakpoints","noSsr","itemCount","itemSize","getChildSize","Provider","reduce","outerElementType","innerElementType","overscanCount","useStyles","paper","listbox","renderGroup","params","ListSubheader","disableGutters","noWrap","AutocompleteVirtualized","enterTokens","replace","option","showDragIndicator","show","onDragEnd","filterOptions","createFilterOptions","matchFrom","onChipClick","getOptionSelected","getChipText","getChipIcon","getChipTitle","getOptionLabel","renderOption","Autocomplete","disableListWrap","openOnFocus","filterSelectedOptions","blurOnSelect","ChipProps","autoHighlight","renderTags","getTagProps","Chip","icon","renderInput","onPaste","clipboardData","getData","onDrop","files","dataTransfer","reader","FileReader","onerror","alert","readAsText","onDragOver","onDragLeave","getOptions","memoize","uniqueOptions","PrecomputedResultsSelector","facets","allRows","pointSizeOptions","gallerySizeOptions","summaryOptions","getAnnotationOptions","item1","item2","getEmbeddingOptions","getMetafeaturesOptions","getFeatureSetOptions","Accordion","boxShadow","borderBottom","expanded","MuiAccordionPanel","AccordionPanelSummary","backgroundColor","marginBottom","minHeight","content","MuiAccordionPanelSummary","AccordionPanelDetails","MuiAccordionPanelDetails","SideBar","onMarkerOpacityChange","updateMarkerOpacity","handleMarkerOpacity","onUnselectedMarkerOpacityChange","unselectedOpacity","updateUnselectedMarkerOpacity","handleUnselectedMarkerOpacity","openDatasetFilter","handleOpenDatasetFilter","deleteDatasetFilter","handleDeleteDatasetFilter","onPointSizeChange","handlePointSize","onFeaturesChange","handleSearchTokens","onMetafeaturesChange","onObservationsIconClick","handleEmbeddingLabel","onObservationsChange","onSaveFeatureList","onEmbeddingsChange","onFeatureSetsChange","onFeatureSetClick","featureSetAnchorEl","onFeatureSetMenuClose","onViewFeatureSet","featureSetView","onCloseViewFeatureSetDialog","onDeleteFeatureSet","handleDeleteFeatureSet","onFilterChipClicked","onFeatureClick","innerText","onChartSizeChange","handleChartSize","onBinSummaryChange","handleBinSummary","handleBinValuesChange","checked","handleBinValues","handleSelectedCellsClick","downloadSelectedIds","handleDifferentialExpression","onDatasetFilterChipDeleted","removeDatasetFilter","onDatasetFilterCleared","onDatasetFilterSaved","handleCombineDatasetFilters","onChartTypeChange","onViolinScaleChange","onViolinShowBoxplot","currentDatasetFilters","datasetFilterKeys","isBrushing","splitTokens","featureOptions","metafeatureOptions","isSummarized","annotationOptions","featureSetOptions","embeddingOptions","readOnly","defaultExpanded","flexDirection","findIndex","onMetaFeatureClick","Grid","alignContent","Switch","onDelete","toolbar","FormControlLabel","control","Slider","valueLabelDisplay","htmlFor","data-key","handleExportDatasetFilters","getSelectedIdsPromise","filterKey","handleNumberOfBins","removeType","setSearchTokens","getDatasetFilterPromise","filterOperation","slashIndex","deleteDatasetFilterPromise","exportDatasetFiltersPromise","deleteFeatureSet","getJob","setTimeout","submitJob","lightTheme","createMuiTheme","darkTheme","App","handleMessageClose","galleryRef","offsetTop","palette","main","bgcolor","ThemeProvider","Drawer","drawer","drawerPaper","anchor","LinearProgress","Snackbar","ContentProps","autoHideDuration","flexShrink","mixins","flexGrow","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","startTime","getTime","loadingAppProgress","elapsed","script","load","client","scope","getElementsByTagName","getElementById"],"mappings":"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","file":"static/js/main.0b154f61.chunk.js","sourcesContent":["class CustomError extends Error {\n\n}\n\nexport default CustomError;\n","export class SlicedVector {\n    constructor(vector, indices) {\n        this.vector = vector;\n        this.indices = indices;\n    }\n\n    getName() {\n        return this.vector.getName();\n    }\n\n    size() {\n        return this.indices.length;\n    }\n\n    get(i) {\n        return this.vector.get(this.indices[i]);\n    }\n}\n","export class Vector {\n    constructor(name, values) {\n        this.name = name;\n        this.values = values;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    size() {\n        return this.values.length;\n    }\n\n    get(i) {\n        return this.values[i];\n    }\n\n    asArray() {\n        return this.values;\n    }\n\n\n}\n","import {isObject} from 'lodash';\nimport natsort from 'natsort';\n\nimport {getPassingFilterIndices} from './dataset_filter';\nimport {SlicedVector} from './SlicedVector';\nimport {Vector} from './Vector';\n\nexport function getVarNameType(key) {\n    let index = key.indexOf('/');\n    if (index === -1) {\n        return {name: key, type: 'X'};\n    } else {\n        let key_type = key.substring(0, index);\n        let name = key.substring(index + 1);\n        return {name: name, type: key_type};\n    }\n}\n\nfunction getStats(dimensions, obsMeasures, varMeasures) {\n    const results = {};\n    dimensions.forEach(v => {\n        results[v.getName()] = valueCounts(v);\n    });\n    obsMeasures.forEach(v => {\n        results[v.getName()] = stats(v);\n    });\n    varMeasures.forEach(v => {\n        results[v.getName()] = stats(v);\n    });\n    return results;\n}\n\nfunction getVectors(cachedData, names, indices = null) {\n    let vectors = [];\n    names.forEach(name => {\n        let array = cachedData[name];\n        if (array == null) {\n            throw name + \" not found\";\n        }\n        let v = new Vector(name, array);\n        if (indices != null) {\n            v = new SlicedVector(v, indices);\n        }\n        vectors.push(v);\n    });\n    return vectors;\n}\n\nexport function cacheValues(result, cachedData) {\n    if (result.embeddings != null) {\n        result.embeddings.forEach(embedding => {\n            if (embedding.coordinates && Object.keys(embedding.coordinates).length > 0) {\n                cachedData[embedding.name] = embedding.coordinates;\n            }\n            if (embedding.values) { // binned values\n                for (let feature in embedding.values) {\n                    cachedData[feature + '_' + embedding.name] = embedding.values[feature];\n                }\n            }\n        });\n    }\n    if (result.values) {\n        for (let feature in result.values) {\n            cachedData[feature] = result.values[feature];\n        }\n    }\n}\n\n\nexport function getTypeToMeasures(measures) {\n    let typeToMeasures = {X: [], obs: []};\n    for (let i = 0; i < measures.length; i++) {\n        const {name, type} = getVarNameType(measures[i]);\n        let typeMeasures = typeToMeasures[type];\n        if (typeMeasures === undefined) {\n            typeMeasures = [];\n            typeToMeasures[type] = typeMeasures;\n        }\n        typeMeasures.push(name);\n\n    }\n    return typeToMeasures;\n}\n\nexport function getBasis(basis, nbins = null, agg = null, dimensions = 2, precomputed = false) {\n    dimensions = parseInt(dimensions);\n    let coordinate_columns = [];\n    for (let i = 0; i < dimensions; i++) {\n        coordinate_columns.push(basis + '_' + i + 1);\n    }\n    let full_name = basis + '_' + dimensions;\n    if (nbins != null) {\n        full_name = full_name + '_' + nbins + '_' + agg;\n    }\n    return {\n        'name': basis, 'dimensions': dimensions, 'coordinate_columns': coordinate_columns, 'nbins': nbins,\n        'agg': agg, 'full_name': full_name, 'precomputed': precomputed\n    };\n}\n\nexport function splitDataFilter(data_filter) {\n    let var_keys = new Set();\n    let obs_keys = new Set();\n    let basis_list = [];\n    if (data_filter) {\n        let user_filters = data_filter.filters || [];\n        for (let i = 0; i < user_filters.length; i++) {\n            let user_filter = user_filters[i];\n            let key = user_filter[0];\n            if (isObject(key)) {\n                let basis = getBasis(key.basis, key.nbins, key.agg,\n                    key.ndim || 2, key.precomputed);\n                basis_list.push(basis);\n            } else {\n\n                const {name, type} = getVarNameType(key);\n\n                user_filter[0] = name;\n                if (type === 'X') {\n                    var_keys.add(name);\n                } else {\n                    obs_keys.add(name);\n                }\n            }\n        }\n    }\n    return {basis: basis_list, X: Array.from(var_keys), obs: Array.from(obs_keys)};\n//    return list(var_keys), list(obs_keys), basis_list\n}\n\n\nexport function computeDerivedStats(result, q, cachedData) {\n    if (q.stats) {\n        const dimensions = q.stats.dimensions || [];\n        const measures = q.stats.measures || [];\n        const typeToMeasures = getTypeToMeasures(measures);\n        result.summary = getStats(getVectors(cachedData, dimensions), getVectors(cachedData, typeToMeasures.obs), getVectors(cachedData, typeToMeasures.X));\n    }\n\n    if (q.groupedStats) {\n        const dimensions = q.groupedStats.dimensions || []; // array of arrays\n        const measures = q.groupedStats.measures || [];\n\n        if (dimensions.length > 0 && measures.length > 0) {\n            result.distribution = groupedStats(getVectors(cachedData, dimensions[0]), getVectors(cachedData, measures));\n        }\n    }\n\n    if (q.selection) {\n        const dimensions = q.selection.dimensions || [];\n        const measures = q.selection.measures || [];\n        const embeddings = q.selection.embeddings || [];\n        const typeToMeasures = getTypeToMeasures(measures);\n        result.selection = {};\n        let selectedIndices = getPassingFilterIndices(cachedData, q.selection.filter);\n        if (embeddings.length > 0) {\n            result.selection.coordinates = {};\n            embeddings.forEach(embedding => {\n                let basis = getBasis(embedding.basis, embedding.nbins,\n                    embedding.agg, embedding.ndim || 2, embedding.precomputed);\n                result.selection.coordinates[basis.full_name] = {'indices_or_bins': selectedIndices};\n            });\n        }\n\n        if (dimensions.length > 0 && typeToMeasures.X.length > 0) {\n            result.selection.distribution = groupedStats(getVectors(cachedData, dimensions, selectedIndices), getVectors(cachedData, measures, selectedIndices));\n        }\n        result.selection.count = selectedIndices.length;\n        result.selection.summary = getStats(getVectors(cachedData, dimensions, selectedIndices), getVectors(cachedData, typeToMeasures.obs, selectedIndices),\n            getVectors(cachedData, typeToMeasures.X, selectedIndices));\n    }\n}\n\n\nexport function valueCounts(v) {\n    let valueToCount = new Map();\n    for (let i = 0, size = v.size(); i < size; i++) {\n        const key = v.get(i);\n        let count = valueToCount.get(key) || 0;\n        valueToCount.set(key, count + 1);\n    }\n    let keys = Array.from(valueToCount.keys());\n    keys.sort(natsort());\n    let counts = keys.map(key => valueToCount.get(key));\n    return {categories: keys, counts: counts};\n}\n\n\nexport function groupedStats(dimensions, varMeasures) {\n    const categoryMap = {};\n    const ndim = dimensions.length;\n    const size = dimensions[0].size();\n    const tmp = [];\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < ndim; j++) {\n            tmp[j] = dimensions[j].get(i);\n        }\n        const key = tmp.join(', ');\n        let value = categoryMap[key];\n        if (value === undefined) {\n            value = {key: tmp.slice(), indices: []};\n            categoryMap[key] = value;\n        }\n        value.indices.push(i);\n    }\n    let categories = Object.keys(categoryMap);\n    const dimensionNames = [];\n    for (let j = 0; j < ndim; j++) {\n        dimensionNames[j] = dimensions[j].getName();\n    }\n    const dimensionName = dimensionNames.join('-');\n    // each entry {dimension:dimensionName, name:category, feature:'', mean:0, fractionExpressed:xx}\n    let result = [];\n    categories.forEach(category => {\n        const value = categoryMap[category];\n        varMeasures.forEach((v) => {\n\n            // let otherIndices = [];\n            // categories.forEach(otherCategory => {\n            //     if (category !== otherCategory) {\n            //         otherIndices = otherIndices.concat(categoryToIndices[otherCategory]);\n            //     }\n            // });\n            // const restVector = new SlicedVector(v, otherIndices);\n            // const restStats = stats(restVector);\n            // results.values[index].restMean.push(restStats.mean);\n            // results.values[index].restFractionExpressed.push(restStats.numExpressed / restVector.size());\n            const categoryVector = new SlicedVector(v, value.indices);\n            const categoryStats = stats(categoryVector);\n            // results.values[index].mean.push(categoryStats.mean);\n            // results.values[index].fractionExpressed.push(categoryStats.numExpressed / categoryVector.size());\n            const entry = {\n                dimension: dimensionName,\n                dimensions: dimensionNames,\n                categories: value.key,\n                feature: v.getName(),\n                mean: categoryStats.mean,\n                fractionExpressed: categoryStats.numExpressed / categoryVector.size(),\n                vector: categoryVector\n            };\n\n            result.push(entry);\n        });\n    });\n    return result;\n\n}\n\nexport function variance(v, mean) {\n    const size = v.size();\n    if (size <= 1) {\n        return NaN;\n    }\n    let ss = 0;\n    for (let j = 0; j < size; j++) {\n        let x = v.get(j);\n        let diff = x - mean;\n        diff = diff * diff;\n        ss += diff;\n    }\n    let n = size - 1;\n    if (n < 1) {\n        n = 1;\n    }\n    return ss / n;\n}\n\nexport function stats(v) {\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    let mean = 0;\n    let numExpressed = 0;\n    if (v.size() === 0) {\n        return {\n            'min': Number.NaN, 'max': Number.NaN, 'sum': Number.NaN, 'mean': Number.NaN, 'numExpressed': Number.NaN,\n        };\n    }\n    for (let i = 0, size = v.size(); i < size; i++) {\n        const value = v.get(i);\n        min = value < min ? value : min;\n        max = value > max ? value : max;\n        mean += value;\n        if (value !== 0) {\n            numExpressed++;\n        }\n    }\n    let sum = mean;\n    mean = mean / v.size();\n    return {\n        'min': min, 'max': max, 'sum': sum, 'mean': mean, 'numExpressed': numExpressed,\n    };\n}\n\n\n\n","import {isObject} from 'lodash';\n\nimport {getBasis, getVarNameType} from './VectorUtil';\n\nfunction combine(a, b, op) {\n    return op === 'or' ? new Set([...a, ...b]) : new Set(\n        [...a].filter(x => b.has(x)));\n}\n\nfunction getIndices(array, f) {\n    let result = new Set();\n    for (let i = 0, size = array.length; i < size; i++) {\n        if (f(array[i])) {\n            result.add(i);\n        }\n    }\n    return result;\n}\n\nexport function getPassingFilterIndices(cachedData, data_filter) {\n    let passingIndices = null;\n    if (data_filter) {\n        let user_filters = data_filter.filters || [];\n        let combine_filters = data_filter.combine || 'and';\n        for (let i = 0; i < user_filters.length; i++) {\n            let filter_obj = user_filters[i];\n            let field = filter_obj[0];\n            let op = filter_obj[1];\n            let value = filter_obj[2];\n            let keep = null;\n\n            if (isObject(field)) { // selection box or lasso\n                let selected_points_basis = getBasis(field['basis'], field.nbins,\n                    field.agg, field.ndim || 2, field.precomputed);\n                let coordinate_columns = selected_points_basis.coordinate_columns;\n                if (value.points) { // list of points\n                    // let p = new Set(value.points);\n                    let field = selected_points_basis['nbins'] ? selected_points_basis['full_name'] : 'index';\n                    if (field == 'index') {\n                        keep = new Set(value.points);\n                    } else { // binning\n                        throw 'Not implemented';\n                    }\n                    // keep = getIndices(cachedData[field], (val) => p.has(val));\n                } else {\n                    let selection_keep;\n                    let path = value.path;\n                    for (let j = 0; j < path.length; j++) {\n                        let p = path[j];\n                        let xKeep = getIndices(cachedData[coordinate_columns[0]], (val) => val >= p.x && val <= p.x + p.width);\n                        let yKeep = getIndices(cachedData[coordinate_columns[1]], (val) => val >= p.y && val <= p.y + p.height);\n                        selection_keep = combine(xKeep, yKeep, 'and');\n                        if (p.z) {  // 3d\n                            let zKeep = getIndices(cachedData[coordinate_columns[2]], (val) => val >= p.z && val <= p.z + p.depth);\n                            selection_keep = combine(selection_keep, zKeep, 'and');\n                        }\n                    }\n                    keep = keep ? combine(selection_keep, keep, combine_filters) : selection_keep;\n                }\n            } else {\n                const nameType = getVarNameType(field);\n                let series = cachedData[nameType.name];\n                let applyFunction;\n                if (op === 'in') {\n                    value = new Set(value);\n                    applyFunction = (d) => value.has(d);\n                } else if (op === '>') {\n                    applyFunction = (d) => d > value;\n                } else if (op === '=') {\n                    applyFunction = (d) => d === value;\n                } else if (op === '<') {\n                    applyFunction = (d) => d < value;\n                } else if (op === '!=') {\n                    applyFunction = (d) => d !== value;\n                } else if (op === '>=') {\n                    applyFunction = (d) => d >= value;\n                } else if (op === '<=') {\n                    applyFunction = (d) => d <= value;\n                } else {\n                    throw('Unknown filter: ' + op);\n                }\n                keep = getIndices(series, applyFunction);\n            }\n\n\n            if (passingIndices) {\n                passingIndices = combine(passingIndices, keep, combine_filters);\n            } else {\n                passingIndices = keep;\n            }\n        }\n    }\n\n    return passingIndices != null ? Array.from(passingIndices) : null;\n}\n","import {isArray} from 'lodash';\nimport {getPassingFilterIndices} from './dataset_filter';\nimport {SlicedVector} from './SlicedVector';\nimport {Vector} from './Vector';\nimport {cacheValues, computeDerivedStats, getBasis, getTypeToMeasures, splitDataFilter} from './VectorUtil';\n\n\nexport class DirectAccessDataset {\n\n    init(id, url) {\n        this.id = id;\n        this.key2data = {};\n        this.format = \"json\";\n        this.schema = null;\n        if (this.url.endsWith(\".jsonl\") || this.url.endsWith(\".jsonl.gz\")) {\n            this.format = \"jsonl\";\n        }\n        if (this.format === 'json' && !url.endsWith('.json') && !url.endsWith('.json.gz')) {\n            url = url + 'schema.json';\n        }\n        this.url = url;\n        this.baseUrl = this.url.substring(0, this.url.lastIndexOf('/') + 1);\n        if (this.format === 'jsonl') {\n            return new Promise((resolve, reject) => {\n                fetch(url + '.idx.json').then(r => r.json()).then(result => {\n                    this.key2bytes = result.index;\n                }).then(() => {\n                    fetch(url, this.getByteRange('schema')).then(response => {\n                        return response.json();\n                    }).then(result => {\n                        this.schema = result[\"schema\"];\n                        resolve();\n                    });\n                });\n            });\n        } else {\n            return new Promise((resolve, reject) => {\n                fetch(url).then(r => r.json()).then(result => {\n                    this.schema = result;\n                    resolve();\n                });\n            });\n        }\n    }\n\n    getByteRange(key) {\n        let range = this.key2bytes[key];\n        if (!range) {\n            throw key + ' not found';\n        }\n        return {headers: {'Range': 'bytes=' + range[0] + '-' + range[1]}};\n    }\n\n    _fetch(key) {\n        return this.format === 'json' ? fetch(this.baseUrl + key + '.json').then(r => r.json()) : fetch(this.url, this.getByteRange(key)).then(r => r.json());\n    }\n\n    fetchData(keys) {\n        let promises = [];\n        keys.forEach(key => {\n            if (this.key2data[key] == null && key !== '__count') {\n                let p = this._fetch(key).then(data => {\n                    if (isArray(data)) { // continuous value\n                        this.key2data[key] = data;\n                    } else {\n                        if (data.index) {  // sparse\n                            let values = new Float32Array(this.schema.shape[0]);\n                            for (let i = 0, n = data.index.length; i < n; i++) {\n                                values[data.index[i]] = data.value[i];\n                            }\n                            this.key2data[key] = values;\n                        } else {\n                            this.key2data[key] = data; // object for coordinates\n                        }\n                    }\n\n                });\n                promises.push(p);\n            }\n        });\n        return new Promise(resolve => {\n            Promise.all(promises).then(() => resolve());\n        });\n\n\n    }\n\n    getSelectedIdsPromise(q) {\n        const dataFilter = q.filter;\n        const {basis, X, obs} = splitDataFilter(dataFilter);\n        let keys = [];\n        basis.forEach(embedding => {\n            keys.push(embedding.name);\n        });\n        keys.push('index');\n\n        keys = keys.concat(X).concat(obs);\n        return new Promise(resolve => {\n            this.fetchData(keys).then(() => {\n                let indices = getPassingFilterIndices(this.key2data, dataFilter);\n                let idVector = this.getVector('index', indices);\n                let ids = [];\n                for (let i = 0, n = idVector.size(); i < n; i++) {\n                    ids.push(idVector.get(i));\n                }\n                resolve({ids: ids});\n            });\n        });\n    }\n\n    getDataPromise(q, cachedData) {\n        let dimensions = [];\n        let measures = [];\n        let queryKeys = ['stats', 'groupedStats', 'embedding', 'selection', 'values'];\n        const results = {};\n        queryKeys.forEach(key => {\n            if (key in q) {\n                let obj = q[key];\n                if (!isArray(obj)) {\n                    obj = [obj];\n                }\n                obj.forEach(value => {\n                    if (value.dimensions) {\n                        dimensions = dimensions.concat(value.dimensions);\n                    }\n                    if (value.measures) {\n                        measures = measures.concat(value.measures);\n                    }\n                });\n            }\n        });\n\n        const typeToMeasures = getTypeToMeasures(measures);\n        let basisKeys = new Set();\n\n        if (q.selection) { // get any embeddings\n            const dataFilter = q.selection.filter;\n            const {basis, X, obs} = splitDataFilter(dataFilter);\n\n            dimensions = dimensions.concat(obs);\n            measures = measures.concat(X);\n            const embeddings = q.selection.embeddings || [];\n            let mappedEmbeddings = [];\n            embeddings.forEach(embedding => {\n                let basis = getBasis(embedding.basis, embedding.nbins, embedding.agg,\n                    embedding.ndim || 2, embedding.precomputed);\n                basisKeys.add(basis.name);\n                mappedEmbeddings.push(basis);\n            });\n            q.selection.embeddings = mappedEmbeddings;\n            basis.forEach(embedding => {\n                basisKeys.add(embedding.name);\n            });\n\n        }\n        if (q.embedding) {\n            q.embedding.forEach(embedding => {\n                let basis = getBasis(embedding.basis, embedding.nbins, embedding.agg,\n                    embedding.ndim || 2, embedding.precomputed);\n                basisKeys.add(basis.name);\n                embedding.basis = basis;\n            });\n        }\n\n        return new Promise(resolve => {\n\n            this.fetchData(dimensions.concat(typeToMeasures.obs).concat(typeToMeasures.X).concat(Array.from(basisKeys))).then(() => {\n\n                if (q.embedding) {\n                    results.embeddings = [];\n                    q.embedding.forEach(embedding => {\n                        let coordinates = this.getVector(embedding.basis.name).asArray();\n                        results.embeddings.push({name: embedding.basis.full_name, coordinates: coordinates});\n                    });\n                }\n                if (q.values) {\n                    let dimensions = q.values.dimensions || [];\n                    let measures = q.values.measures || [];\n                    const typeToMeasures = getTypeToMeasures(measures);\n                    let values = {};\n                    dimensions.concat(typeToMeasures.obs).concat(typeToMeasures.X).forEach(key => {\n                        if (key === '__count') {\n                            values[key] = new Int8Array(this.schema.shape[0]);\n                            values[key].fill(1);\n                        } else {\n                            values[key] = this.getVector(key).asArray();\n                        }\n                    });\n                    results.values = values;\n                }\n                cacheValues(results, cachedData);\n                computeDerivedStats(results, q, cachedData);\n                resolve(results);\n            });\n        });\n    }\n\n    getSchemaPromise() {\n        return Promise.resolve(this.schema);\n    }\n\n    getVector(key, indices = null) {\n        let array = this.key2data[key];\n        let v = new Vector(key, array);\n        if (indices != null) {\n            v = new SlicedVector(v, indices);\n        }\n        return v;\n    }\n\n    getFileUrl(file) {\n        return this.baseUrl + file;\n    }\n\n    getVectors(keys, indices = null) {\n        let result = [];\n        keys.forEach(key => {\n            let v = this.getVector(key, indices);\n            result.push(v);\n        });\n        return result;\n    }\n\n\n}\n\n\n\n\n","import {API, getIdToken} from './actions';\nimport {getPassingFilterIndices} from './dataset_filter';\nimport {cacheValues, computeDerivedStats} from './VectorUtil';\n\nfunction reshapeDistributionResult(distribution) {\n    const results = [];\n    distribution.forEach(distributionResult => {\n        const categories = distributionResult.categories;\n        const dimension = distributionResult.name;\n        for (let i = 0; i < distributionResult.values.length; i++) {\n            results.push({\n                dimension: dimension,\n                name: categories[i],\n                feature: distributionResult.values[i].name,\n                mean: distributionResult.values[i].mean,\n                fractionExpressed: distributionResult.values[i].fractionExpressed\n            });\n        }\n    });\n    return results;\n}\n\nexport class RestDataset {\n\n    /**\n     *\n     * @param id Dataset id\n     * param url Dataset URL\n     * @param local Whether stats should be computed locally or by the server\n     * @returns {Promise<void>}\n     */\n    init(id, url, local = true) {\n        this.id = id;\n        this.local = local;\n        return Promise.resolve();\n    }\n\n    getSelectedIdsPromise(q, cachedData) {\n        q.id = this.id;\n        if (this.local) {\n            if (cachedData['index'] == null) {\n                return this.getDataPromise({values: {dimensions: ['index']}}, cachedData).then(() => {\n                    const selectedIndices = getPassingFilterIndices(cachedData, q.filter);\n                    const ids = [];\n                    const index = cachedData['index'];\n                    for (let i = 0, n = selectedIndices.length; i < n; i++) {\n                        ids.push(index[selectedIndices[i]]);\n                    }\n                    return {ids: ids};\n                });\n            }\n        } else {\n            return fetch(API + '/selected_ids',\n                {\n                    body: JSON.stringify(q),\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + getIdToken()},\n                }).then(result => result.json());\n        }\n    }\n\n    getFileUrl(file) {\n        return API + '/file?id=' + this.id + '&file=' + file + '&access_token=' + getIdToken();\n    }\n\n    getDataPromise(data, cachedData) {\n        data.id = this.id;\n        let dataSend = data;\n        const local = this.local;\n\n        if (this.local) {\n            dataSend = {};\n            //  ['stats', 'groupedStats', 'embedding', 'selection', 'values'];\n            if (data.embedding || data.values) {\n                dataSend.id = this.id;\n                dataSend.embedding = data.embedding;\n                dataSend.values = data.values;\n            }\n        }\n        let body = JSON.stringify(dataSend);\n        let p = body !== '{}' ? fetch(API + '/data',\n            {\n                body: body,\n                method: 'POST',\n                headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + getIdToken()},\n            }).then(r => r.json()).then(result => {\n            // convert sparse to dense\n\n            // if (result.values) {\n            //     for (let key in result.values) {\n            //         let data = result.values[key];\n            //         if (data.index) {  // sparse\n            //             let values = new Float32Array(xxx);\n            //             for (let i = 0, n = data.index.length; i < n; i++) {\n            //                 values[data.index[i]] = data.value[i];\n            //             }\n            //             result.values[key] = values;\n            //         }\n            //     }\n            // }\n            cacheValues(result, cachedData);\n            return result;\n        }) : Promise.resolve({});\n        return p.then(result => {\n            if (local) {\n                computeDerivedStats(result, data, cachedData);\n            } else {\n                if (result.distribution) {\n                    result.distribution = reshapeDistributionResult(result.distribution);\n                }\n                if (result.selection && result.selection.distribution) {\n                    result.selection.distribution = reshapeDistributionResult(result.selection.distribution);\n                }\n            }\n            return result;\n        });\n    }\n\n    getSchemaPromise() {\n        return fetch(API + '/schema?id=' + this.id, {headers: {'Authorization': 'Bearer ' + getIdToken()}}).then(response => {\n            return response.json();\n        });\n    }\n}\n\n\n\n\n\n","// general server stuff\n\nimport {API, getIdToken} from './actions';\n\nexport class RestServerApi {\n\n    getUserPromise() {\n        return fetch(API + '/user', {\n            headers: {\n                'Authorization': 'Bearer ' + getIdToken(),\n                'Content-Type': 'application/json'\n            }\n        }).then(result => result.json());\n    }\n\n\n    getDatasetsPromise() {\n        return fetch(API + '/datasets', {headers: {'Authorization': 'Bearer ' + getIdToken()}})\n            .then(response => {\n                return response.json();\n            });\n    }\n\n    deleteDatasetPromise(datasetId) {\n        return fetch(API + '/dataset',\n            {\n                body: JSON.stringify(\n                    {id: datasetId}),\n                method: 'DELETE',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            });\n    }\n\n    upsertDatasetPromise(datasetId, dataset) {\n        let isEdit = datasetId != null;\n        if (datasetId != null) {\n            dataset.id = datasetId;\n        }\n        return fetch(API + '/dataset',\n            {\n                body: JSON.stringify(dataset),\n                method: isEdit ? 'PUT' : 'POST',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(importDatasetResponse => importDatasetResponse.json());\n    }\n\n\n    getDatasetPromise(datasetId) {\n        return fetch(API + '/dataset?id=' + datasetId,\n            {\n                method: 'GET',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(result => result.json());\n    }\n\n\n// categories and filters\n    setCategoryNamePromise(data) {\n        return fetch(API + '/category_name',\n            {\n                body: JSON.stringify(data),\n                method: 'PUT',\n                headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + getIdToken()},\n            });\n    }\n\n    upsertDatasetFilterPromise(data, isUpdate) {\n        return fetch(API + '/filter',\n            {\n                body: JSON.stringify(data),\n                method: isUpdate ? 'PUT' : 'POST',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(response => response.json());\n    }\n\n    upsertFeatureSet(data, isUpdate) {\n        return fetch(API + '/feature_set',\n            {\n                body: JSON.stringify(data),\n                method: isUpdate ? 'PUT' : 'POST',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(response => response.json());\n    }\n\n    deleteFeatureSet(setId, datasetId) {\n        return fetch(API + '/feature_set',\n            {\n                body: JSON.stringify({id: setId, ds_id: datasetId}),\n                method: 'DELETE',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            });\n    }\n\n\n    exportDatasetFiltersPromise(datasetId) {\n        return fetch(API + '/export_filters?id=' + datasetId, {\n            headers: {'Authorization': 'Bearer ' + getIdToken()},\n        }).then(result => {\n            if (!result.ok) {\n                return null;\n            }\n            return result.text();\n        });\n    }\n\n    deleteDatasetFilterPromise(filterId, datasetId) {\n        return fetch(API + '/filter',\n            {\n                body: JSON.stringify({id: filterId, ds_id: datasetId}),\n                method: 'DELETE',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            });\n    }\n\n    getDatasetFilterPromise(filterId, datasetId) {\n        return fetch(API + '/filter?id=' + filterId + '&ds_id=' + datasetId,\n            {\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(response => response.json());\n    }\n\n    getCategoryNamesPromise(datasetId) {\n        return fetch(API + '/category_name?id=' + datasetId,\n            {\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(result => result.json());\n    }\n\n    getFiltersPromise(datasetId) {\n        return fetch(API + '/filters?id=' + datasetId,\n            {\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(result => result.json());\n    }\n\n    submitJob(datasetId) {\n        const data = {id: datasetId};\n        return fetch(API + '/submit_job',\n            {\n                body: JSON.stringify(data),\n                method: 'POST',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(response => response.json());\n    }\n\n    getJob(jobId) {\n        return fetch(API + '/job?id=' + jobId,\n            {\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(result => result.json());\n    }\n\n}\n","import {Tooltip} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport BorderInnerIcon from '@material-ui/icons/BorderInner';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport ExposureIcon from '@material-ui/icons/Exposure';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\nimport PhotoSizeSelectSmallIcon from '@material-ui/icons/PhotoSizeSelectSmall';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport React from 'react';\n\nconst active = 'cirro-active';\n\n\n//\"zoom\" | \"pan\" | \"select\" | \"lasso\" | \"orbit\" | \"turntable\"\nclass ChartToolbar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {saveImageEl: null};\n    }\n\n    setDragMode = (mode) => {\n        this.props.onDragMode(mode);\n    };\n\n    onShowLabels = () => {\n        this.props.onShowLabels();\n    };\n\n    onShowAxis = () => {\n        this.props.onShowAxis();\n    };\n\n\n    onShowFog = () => {\n        this.props.onShowFog();\n    };\n\n\n    onGallery = () => {\n        this.props.onGallery();\n    };\n\n    handleMoreOptions = () => {\n        this.props.onMoreOptions();\n    };\n\n    setEditSelection = () => {\n        this.props.onEditSelection();\n    };\n    handleSaveImageMenu = (event) => {\n        this.setState({saveImageEl: event.currentTarget});\n    };\n    handleSaveImageMenuClose = (event) => {\n        this.setState({saveImageEl: null});\n    };\n\n    handleSaveImage = (format) => {\n        this.setState({saveImageEl: null});\n        this.props.onSaveImage(format);\n    };\n\n    render() {\n\n        const {dragmode, editSelection, showLabels, showAxis} = this.props;\n        const {saveImageEl} = this.state;\n        return (<React.Fragment>\n\n            {this.props.onZoomIn && <Tooltip title={\"Zoom In\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Zoom In\" onClick={this.props.onZoomIn}>\n                    <ZoomInIcon/>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onZoomOut && <Tooltip title={\"Zoom Out\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Zoom In\" onClick={this.props.onZoomOut}>\n                    <ZoomOutIcon/>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onHome && <Tooltip title={\"Home\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Home\" onClick={this.props.onHome}>\n                    <HomeIcon/>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onDragMode && <Tooltip title={\"Lasso Select\"}>\n                <IconButton edge={false} size={'small'} className={dragmode === 'lasso' ? active : ''}\n                            aria-label=\"Lasso Select\" onClick={() => this.setDragMode('lasso')}>\n                    <svg className={\"MuiSvgIcon-root\"} width=\"24\" height=\"21\" viewBox=\"0 0 1031 1000\">\n                        <path\n                            d=\"m1018 538c-36 207-290 336-568 286-277-48-473-256-436-463 10-57 36-108 76-151-13-66 11-137 68-183 34-28 75-41 114-42l-55-70 0 0c-2-1-3-2-4-3-10-14-8-34 5-45 14-11 34-8 45 4 1 1 2 3 2 5l0 0 113 140c16 11 31 24 45 40 4 3 6 7 8 11 48-3 100 0 151 9 278 48 473 255 436 462z m-624-379c-80 14-149 48-197 96 42 42 109 47 156 9 33-26 47-66 41-105z m-187-74c-19 16-33 37-39 60 50-32 109-55 174-68-42-25-95-24-135 8z m360 75c-34-7-69-9-102-8 8 62-16 128-68 170-73 59-175 54-244-5-9 20-16 40-20 61-28 159 121 317 333 354s407-60 434-217c28-159-121-318-333-355z\"\n                            transform=\"matrix(1 0 0 -1 0 850)\"></path>\n\n                    </svg>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onDragMode && <Tooltip title={\"Box Select\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Box Select\" onClick={() => this.setDragMode('select')}>\n                    <PhotoSizeSelectSmallIcon className={dragmode === 'select' ? active : ''}/>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onEditSelection && <Tooltip title={\"Append to selection\"}>\n                <IconButton edge={false} size={'small'} aria-label=\"Append to selection\"\n                            onClick={this.setEditSelection}>\n                    <ExposureIcon className={editSelection ? active : ''}/>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.is3d && <Tooltip title={this.props.animating ? 'Pause' : 'Animate'}>\n                <IconButton edge={false} size={'small'}\n                            aria-label={this.props.animating ? 'Pause' : 'Animate'}\n                            onClick={this.props.toggleAnimation}>\n                    {!this.props.animating && <PlayArrowIcon/>}\n                    {this.props.animating && <PauseIcon/>}\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onDragMode && <Tooltip title={\"Pan\"}>\n                <IconButton edge={false} size={'small'} className={dragmode === 'pan' ? active : ''}\n                            aria-label=\"Pan\" onClick={() => this.setDragMode('pan')}>\n                    <svg className={\"MuiSvgIcon-root\"} viewBox=\"0 0 1000 1000\" height=\"16\" width=\"16\">\n                        <path\n                            d=\"m1000 350l-187 188 0-125-250 0 0 250 125 0-188 187-187-187 125 0 0-250-250 0 0 125-188-188 186-187 0 125 252 0 0-250-125 0 187-188 188 188-125 0 0 250 250 0 0-126 187 188z\"\n                            transform=\"matrix(1 0 0 -1 0 850)\"></path>\n                    </svg>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onShowLabels && <Tooltip title={\"Show Categorical Labels\"}>\n                <IconButton edge={false} size={'small'} className={showLabels ? active : ''}\n                            aria-label=\"Show Labels\" onClick={() => this.onShowLabels()}>\n                    <FontDownloadIcon/>\n                </IconButton>\n            </Tooltip>}\n\n\n            {this.props.is3d && this.props.onShowAxis && <Tooltip title={\"Show Axis\"}>\n                <IconButton edge={false} size={'small'} className={showAxis ? active : ''}\n                            aria-label=\"Show Axis\" onClick={() => this.onShowAxis()}>\n                    <BorderInnerIcon/>\n                </IconButton>\n            </Tooltip>}\n\n\n            {this.props.is3d && this.props.onShowFog && <Tooltip title={\"Show Fog\"}>\n                <IconButton edge={false} size={'small'} className={this.props.showFog ? active : ''}\n                            aria-label=\"Show Fog\" onClick={() => this.onShowFog()}>\n                    <CloudQueueIcon/>\n                </IconButton>\n            </Tooltip>}\n\n\n            {/*<Tooltip title={\"Zoom\"}>*/}\n            {/*    <IconButton className={dragmode === 'zoom' ? active : ''}*/}\n            {/*                aria-label=\"Zoom\" onClick={() => this.setDragMode('zoom')}>*/}\n            {/*        <svg viewBox=\"0 0 1000 1000\" height=\"16\" width=\"16\">*/}\n            {/*            <path*/}\n            {/*                d=\"m1000-25l-250 251c40 63 63 138 63 218 0 224-182 406-407 406-224 0-406-182-406-406s183-406 407-406c80 0 155 22 218 62l250-250 125 125z m-812 250l0 438 437 0 0-438-437 0z m62 375l313 0 0-312-313 0 0 312z\"*/}\n            {/*                transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n            {/*        </svg>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n            {/*<IconButton className={dragmode === ChartToolbar.MODE_ZOOM_OUT ? active : ''}*/}\n            {/*            aria-label=\"Zoom Out\" onClick={this.onZoomOut}>*/}\n            {/*    <svg viewBox=\"0 0 875 1000\" height=\"16\" width=\"16\">*/}\n            {/*        <path d=\"m0 788l0-876 875 0 0 876-875 0z m688-500l-500 0 0 125 500 0 0-125z\"*/}\n            {/*              transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n            {/*    </svg>*/}\n            {/*</IconButton>*/}\n\n            <Tooltip title={\"Save Image\"}>\n                <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false} size={'small'}\n                            aria-label=\"Save Image\" onClick={this.handleSaveImageMenu}>\n                    <PhotoCameraIcon/>\n                </IconButton>\n            </Tooltip>\n\n            <Menu\n                id=\"save-image-menu\"\n                anchorEl={saveImageEl}\n                keepMounted\n                open={Boolean(saveImageEl)}\n                onClose={this.handleSaveImageMenuClose}\n            >\n                <MenuItem onClick={e => this.handleSaveImage('png')}>PNG</MenuItem>\n                <MenuItem onClick={e => this.handleSaveImage('svg')}>SVG</MenuItem>\n\n            </Menu>\n\n\n            {this.props.onMoreOptions && <Tooltip title={\"More Options\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"More Options\" onClick={this.handleMoreOptions}>\n                    <SettingsIcon/>\n                </IconButton>\n            </Tooltip>}\n\n\n            <Tooltip title={\"Scroll To Gallery\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Scroll To Gallery\" onClick={this.onGallery}>\n                    <PhotoLibraryIcon/>\n                </IconButton>\n            </Tooltip>\n            {/*<Tooltip title={\"Copy Image\"}>*/}\n            {/*    <IconButton edge={false} size={'small'} aria-label=\"Copy Image\" onClick={this.props.onCopyImage}>*/}\n            {/*        <FileCopyIcon/>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n\n            {/*<Tooltip title={*/}\n            {/*    <React.Fragment>*/}\n            {/*        <h6>3D controls</h6>*/}\n            {/*        <b>Rotate</b> Mouse left click.*/}\n            {/*        <b>Pan</b> Mouse right click.*/}\n            {/*        <b>Zoom</b> Mouse wheel.*/}\n            {/*        Holding <b>ctrl</b> reverses the mouse clicks.*/}\n            {/*        <h6>2D controls</h6>*/}\n            {/*        <b>Pan</b> Mouse left click.*/}\n            {/*        <b>Zoom</b> Mouse wheel.*/}\n            {/*    </React.Fragment>*/}\n            {/*}>*/}\n            {/*    <IconButton edge={false} size={'small'} aria-label=\"Help\">*/}\n            {/*        <HelpIcon/>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n            {/*<Tooltip title={\"Reset\"}>*/}\n            {/*    <IconButton aria-label=\"Reset\" onClick={this.props.onHome}>*/}\n            {/*        <svg viewBox=\"0 0 928.6 1000\" height=\"16\" width=\"16\">*/}\n            {/*            <path*/}\n            {/*                d=\"m786 296v-267q0-15-11-26t-25-10h-214v214h-143v-214h-214q-15 0-25 10t-11 26v267q0 1 0 2t0 2l321 264 321-264q1-1 1-4z m124 39l-34-41q-5-5-12-6h-2q-7 0-12 3l-386 322-386-322q-7-4-13-4-7 2-12 7l-35 41q-4 5-3 13t6 12l401 334q18 15 42 15t43-15l136-114v109q0 8 5 13t13 5h107q8 0 13-5t5-13v-227l122-102q5-5 6-12t-4-13z\"*/}\n            {/*                transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n\n            {/*        </svg>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n        </React.Fragment>);\n    }\n}\n\n\nexport default ChartToolbar;\n","import {format} from 'd3-format';\n\nexport const numberFormat = format('.1f');\nexport const numberFormat2f = format('.2f');\nexport const intFormat = format(',');\nexport const numberFormat0 = format('.0f');\n","import {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport {CANVAS_FONT} from './ChartUtil';\nimport {numberFormat} from './formatters';\n\nexport function drawColorScheme(context, colorScale, textColor = 'black', label = true, width = 150, height = 12) {\n    let domain = colorScale.domain();\n    if (domain[0] === domain[1]) {\n        return;\n    }\n\n    const nsteps = 10;\n    let gradient = context.createLinearGradient(0, 0, width, height);\n    let valueToFraction = scaleLinear().range([0, 1]).domain(domain).clamp(true);\n\n    let value = domain[0];\n    let stepSize = (domain[1] - domain[0]) / nsteps;\n    for (let i = 0; i < nsteps; i++) {\n        if (i === (nsteps - 1)) {\n            value = domain[1];\n        }\n        let f = valueToFraction(value);\n        if (!isNaN(f)) {\n            let color = colorScale(value);\n            gradient.addColorStop(f, color);\n        }\n        value += stepSize;\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    context.strokeStyle = 'LightGrey';\n    context.strokeRect(0, 0, width, height);\n    if (label) {\n\n        context.textBaseline = 'top';\n        context.fillStyle = textColor;\n\n        context.textAlign = 'left';\n        context.fillText(numberFormat(domain[0]), 0, height + 2);\n        context.textAlign = 'right';\n        context.fillText(numberFormat(domain[1]), width, height + 2);\n    }\n}\n\nclass ColorSchemeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.backingScale = 1;\n    }\n\n    redraw() {\n        let backingScale = this.backingScale;\n        let node = this.ref.current;\n        const context = node.getContext('2d');\n        const height = this.props.height;\n        const width = this.props.width;\n        const textColor = this.props.textColor || 'black';\n        context\n            .clearRect(0, 0, width * backingScale, height * backingScale);\n        context.scale(backingScale, backingScale);\n\n        const colorScale = this.props.scale;\n        if (colorScale == null) {\n            return;\n        }\n\n        context.font = CANVAS_FONT;\n        drawColorScheme(context, colorScale, textColor, this.props.label, width, height);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    render() {\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            this.backingScale = window.devicePixelRatio;\n        }\n\n        let height = this.props.height;\n        let width = this.props.width;\n        let style = {width: width, height: height};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n        return (\n            <canvas width={width * this.backingScale} height={height * this.backingScale} ref={this.ref}\n                    style={style}></canvas>\n        );\n\n    }\n}\n\nexport default ColorSchemeLegend;\n\n","import C2S from 'canvas2svg';\nimport {drawColorScheme} from './ColorSchemeLegend';\nimport {drawCategoricalLegend, getCategoricalLegendSize} from './LegendDrawer';\n\nexport const CANVAS_FONT = '12px Roboto Condensed,Helvetica,Arial,sans-serif';\nexport const SVG_FONT = '12px Helvetica,Arial,sans-serif';\n\nexport function saveImage(traceInfo, chartSize, draw, format) {\n\n    let context;\n    let canvas = null;\n    const totalSize = {width: chartSize.width, height: chartSize.height};\n    let name = traceInfo.name;\n    if (name === '__count') {\n        name = 'count';\n    }\n    if (format !== 'svg') {\n        canvas = document.createElement('canvas');\n        canvas.width = 100;\n        canvas.height = 100;\n        context = canvas.getContext('2d');\n    } else {\n        context = new C2S(100, 100);\n    }\n    if (!traceInfo.continuous) {\n        const legendSize = getCategoricalLegendSize(context, name, traceInfo.colorScale.domain());\n        totalSize.width += legendSize.width;\n        totalSize.height = Math.max(legendSize.height, chartSize.height);\n    } else {\n        totalSize.height += 150;\n\n    }\n    if (format === 'svg') {\n        context = new window.C2S(totalSize.width, totalSize.height);\n    } else {\n        canvas.width = totalSize.width * window.devicePixelRatio;\n        canvas.height = totalSize.height * window.devicePixelRatio;\n        context = canvas.getContext('2d');\n        context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, totalSize.width, totalSize.height);\n    }\n\n    draw(context, chartSize, format);\n\n    if (!traceInfo.continuous) {\n        context.translate(chartSize.width, 2);\n        drawCategoricalLegend(context, traceInfo.colorScale, name, traceInfo.colorScale.domain());\n    } else {\n        context.translate(chartSize.width / 2 - 75, chartSize.height + 2);\n        drawColorScheme(context, traceInfo.colorScale);\n    }\n\n    if (format === 'svg') {\n        let svg = context.getSerializedSvg();\n        // let prefix = [];\n        // prefix.push('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n');\n        // prefix.push('<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"' +\n        //     ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n        // svg = prefix.join('') + svg;\n        let blob = new Blob([svg], {\n            type: 'text/plain;charset=utf-8'\n        });\n        window.saveAs(blob, name + '.svg');\n    } else {\n        canvas.toBlob(blob => {\n            window.saveAs(blob, name + '.png', true);\n        });\n    }\n\n}\n","export function getCategoricalLegendSize(context, name, categories) {\n    context.font = '14px Helvetica';\n    let maxWidth = context.measureText(name).width;\n    categories.forEach(value => maxWidth = Math.max(maxWidth, context.measureText(value).width));\n    return {width: maxWidth + 14, height: categories.length * 12 + 4};\n}\n\nexport function drawCategoricalLegend(context, scale, name, categories) {\n\n    context.font = '14px Helvetica';\n    context.textAlign = 'left';\n    context.textBaseline = 'bottom';\n    const height = 12;\n    for (let i = 0; i < categories.length; i++) {\n        const category = categories[i];\n        context.fillStyle = scale(category);\n        context.fillRect(0, i * height, 10, 10);\n        context.fillStyle = 'black';\n        context.fillText('' + category, 12, i * height + height);\n    }\n}\n\n\n","import {shuffle} from 'd3-array';\nimport {color} from 'd3-color';\nimport {scaleLinear} from 'd3-scale';\nimport * as scaleChromatic from 'd3-scale-chromatic';\nimport simplify from 'simplify-js';\nimport {getColors} from './ThreeUtil';\n\nexport const interpolators = {};\ninterpolators['Diverging'] = [\n    'interpolateBrBG',\n    'interpolatePRGn',\n    'interpolatePiYG',\n    'interpolatePuOr',\n    'interpolateRdBu',\n    'interpolateRdGy',\n    'interpolateRdYlBu',\n    'interpolateRdYlGn',\n    'interpolateSpectral'];\n\ninterpolators['Sequential (Single Hue)'] = [\n    'interpolateBlues',\n    'interpolateGreens',\n    'interpolateGreys',\n    'interpolateOranges',\n    'interpolatePurples',\n    'interpolateReds'];\n\ninterpolators['Sequential (Multi-Hue)'] = [\n    'interpolateViridis',\n    'interpolateInferno',\n    'interpolateMagma',\n    'interpolatePlasma',\n    'interpolateWarm',\n    'interpolateCool',\n    'interpolateCubehelixDefault',\n    'interpolateBuGn',\n    'interpolateBuPu',\n    'interpolateGnBu',\n    'interpolateOrRd',\n    'interpolatePuBuGn',\n    'interpolatePuBu',\n    'interpolatePuRd',\n    'interpolateRdPu',\n    'interpolateYlGnBu',\n    'interpolateYlGn',\n    'interpolateYlOrBr',\n    'interpolateYlOrRd'];\n\ninterpolators['Cyclical'] = ['interpolateRainbow', 'interpolateSinebow'];\n\n\n// const TWENTY_COLORS = [\n//     '#1f77b4', '#aec7e8', '#ff7f0e',\n//     '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd',\n//     '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f',\n//     '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\nexport const CATEGORY_20B = [\n    '#393b79', '#5254a3', '#6b6ecf',\n    '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31',\n    '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b',\n    '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\nexport const CATEGORY_20C = [\n    '#3182bd', '#6baed6', '#9ecae1',\n    '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354',\n    '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\n    '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n\nexport const OBS_SEARCH_TOKEN = 'obs';\nexport const OBS_CAT_SEARCH_TOKEN = 'obsCat';\nexport const X_SEARCH_TOKEN = 'X';\nexport const FEATURE_SET_SEARCH_TOKEN = 'featureSet';\nexport const METAFEATURE_SEARCH_TOKEN = 'metafeature';\nexport const FEATURE_SET_SEARCH_TOKEN_ADD = 'featureSetAdd';\n\nexport function stripTrailingZeros(s) {\n    let index = s.lastIndexOf('.');\n    let ending = s.substring(index + 1);\n    let allZeros = true;\n    for (let i = 0, n = ending.length; i < n; i++) {\n        if (ending[i] !== '0') {\n            allZeros = false;\n            break;\n        }\n    }\n    if (allZeros) {\n        s = s.substring(0, s.lastIndexOf('.'));\n    }\n    return s;\n}\n/**\n *\n * @param array. Array of format,data\n */\nexport function setClipboardData(clipboardData) {\n    const container = document.activeElement;\n    const isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n    const fakeElem = document.createElement('div');\n    fakeElem.contentEditable = true;\n\n    // Prevent zooming on iOS\n    fakeElem.style.fontSize = '12pt';\n    // Reset box model\n\n    fakeElem.style.border = '0';\n    fakeElem.style.padding = '0';\n    fakeElem.style.margin = '0';\n    // Move element out of screen horizontally\n    fakeElem.style.position = 'absolute';\n    fakeElem.style[isRTL ? 'right' : 'left'] = '-999999px';\n    // Move element to the same position vertically\n    fakeElem.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n    fakeElem.setAttribute('readonly', '');\n    //fakeElem.innerHTML = html;\n    const copyListener = (e) => {\n\n        clipboardData.forEach(function (elem) {\n            e.clipboardData.setData(elem.format, elem.data);\n        });\n\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        fakeElem.removeEventListener('copy', copyListener);\n    };\n    fakeElem.addEventListener('copy', copyListener);\n\n    container.appendChild(fakeElem);\n\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(fakeElem);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    const fakeHandlerCallback = (event) => {\n        container.removeChild(fakeElem);\n        container.removeEventListener('click', fakeHandlerCallback);\n    };\n    document.execCommand('copy');\n    container.addEventListener('click', fakeHandlerCallback);\n};\n\nexport function updateTraceColors(traceInfo) {\n    if (traceInfo.type === 'image') {\n        let colors = [];\n        let colorScale = traceInfo.colorScale;\n        const colorMapper = rgb => rgb.formatHex();\n        for (let i = 0, n = traceInfo.npoints; i < n; i++) {\n            let rgb = color(colorScale(traceInfo.values[i]));\n            colors.push(colorMapper(rgb));\n        }\n        traceInfo.colors = colors;\n    } else if (traceInfo.type === 'scatter') {\n        traceInfo.colors = getColors(traceInfo);\n    } else if (traceInfo.type === 'meta_image') {\n        let colorScale = traceInfo.colorScale;\n        const svgNode = traceInfo.source;\n        const galleryNode = traceInfo.gallerySource;\n        const categoryToStats = traceInfo.categoryToStats;\n        if (categoryToStats) {\n            for (const category in categoryToStats) {\n                const stats = categoryToStats[category];\n                const query = category.replaceAll(' ', '_'); // FIXME\n\n                svgNode.querySelectorAll('[id=\"' + query + '\"]').forEach(node => {\n                    node.style.fill = colorScale(stats.value);\n                });\n\n                galleryNode.querySelectorAll('[id=\"' + query + '\"]').forEach(node => {\n                    node.style.fill = colorScale(stats.value);\n                });\n            }\n        }\n    }\n}\n\n\n/**\n * Computes the rank using the given index array. The index array can be\n * obtained from the indexSort method. Does not handle ties.\n *\n */\nexport function rankIndexArray(index) {\n    const n = index.length;\n    const rank = new Uint32Array(n);\n    for (let j = 0; j < n; j++) {\n        rank[index[j]] = j + 1;\n    }\n    return rank;\n};\n\nexport function indexSort(array, ascending) {\n    const pairs = [];\n    for (let i = 0, length = array.length; i < length; i++) {\n        pairs.push({\n            value: array[i],\n            index: i\n        });\n    }\n    return indexSortPairs(pairs, ascending);\n};\n\nfunction indexSortPairs(array, ascending) {\n    if (ascending) {\n        array.sort(function (a, b) {\n            return (a.value < b.value ? -1 : (a.value === b.value ? (a.index < b.index ? -1 : 1) : 1));\n        });\n    } else {\n        array.sort(function (a, b) {\n            return (a.value < b.value ? 1 : (a.value === b.value ? (a.index < b.index ? 1 : -1) : -1));\n        });\n    }\n    const indices = new Uint32Array(array.length);\n    for (let i = 0, n = array.length; i < n; i++) {\n        indices[i] = array[i].index;\n    }\n    return indices;\n};\n\nexport function randomSeq(n, start = 0) {\n    const indices = new Uint32Array(n);\n    for (let i = 0; i < n; i++, start++) {\n        indices[i] = start;\n    }\n    shuffle(indices);\n    return indices;\n}\n\n/**\n * Computes the False Discovery Rate using the BH procedure.\n *\n * @param nominalPValues\n *            Array of nominal p-values.\n */\nexport function fdr(nominalPValues) {\n    const size = nominalPValues.length;\n    const pValueIndices = indexSort(nominalPValues, true);\n    const ranks = rankIndexArray(pValueIndices);\n\n    // check for ties\n    for (let i = pValueIndices.length - 1; i > 0; i--) {\n        const bigPValue = nominalPValues[pValueIndices[i]];\n        const smallPValue = nominalPValues[pValueIndices[i - 1]];\n        if (bigPValue === smallPValue) {\n            ranks[pValueIndices[i - 1]] = ranks[pValueIndices[i]];\n        }\n    }\n\n    const fdr = new Float32Array(size);\n    for (let i = 0; i < size; i++) {\n        const rank = ranks[i];\n        const p = nominalPValues[i];\n        fdr[i] = (p * size) / rank;\n    }\n\n    // ensure fdr is monotonically decreasing\n    const pIndices = indexSort(nominalPValues, false);\n    for (let i = 0; i < pIndices.length - 1; i++) {\n        const highIndex = pIndices[i];\n        const lowIndex = pIndices[i + 1];\n        fdr[lowIndex] = Math.min(fdr[lowIndex], fdr[highIndex]);\n    }\n    for (let i = 0; i < size; i++) {\n        fdr[i] = Math.min(fdr[i], 1);\n    }\n    return fdr;\n};\n\nexport function isPointInside(point, vs) {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n    const x = point.x, y = point.y;\n\n    let inside = false;\n    for (let i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        const xi = vs[i].x, yi = vs[i].y;\n        const xj = vs[j].x, yj = vs[j].y;\n\n        const intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n\n    return inside;\n}\n\n\nexport function arrayToSvgPath(lassoPathArray) {\n    if (lassoPathArray.length > 1) {\n        lassoPathArray = simplify(lassoPathArray);\n    }\n    let svgPath = 'M ' + lassoPathArray[0].x + ' ' + lassoPathArray[0].y;\n    for (let i = 1; i < lassoPathArray.length; i++) {\n        svgPath += ' L ' + lassoPathArray[i].x + ' ' + lassoPathArray[i].y;\n    }\n    svgPath += ' Z';\n    return svgPath;\n}\n\nexport function getRgbScale() {\n    return scaleLinear().domain([0, 255]).range([0, 1]);\n}\n\nexport function fixInterpolatorName(name) {\n    if (!name.startsWith(\"interpolate\")) {\n        name = \"interpolate\" + name;\n    }\n    return name;\n}\n\nexport function getInterpolator(name) {\n    return scaleChromatic[fixInterpolatorName(name)];\n}\n\nexport function convertIndicesToBins(points, bins) {\n    let selectedBins = [];\n    for (let i = 0, n = points.length; i < n; i++) {\n        selectedBins.push(bins[points[i]]);\n    }\n    return selectedBins;\n}\n\nexport function convertBinsToIndices(bins, selectedBins) {\n    let points = [];\n    selectedBins = new Set(selectedBins);\n    for (let i = 0, n = bins.length; i < n; i++) {\n        if (selectedBins.has(bins[i])) {\n            points.push(i);\n        }\n    }\n\n    return points;\n}\n\n// add to X, maintaining insertion order\nexport function addFeatureSetsToX(featureSets, X) {\n    const uniqueX = new Set(X);\n    featureSets.forEach(featureSet => {\n        let features = featureSet.features;\n        if (features) {\n            features.forEach(feature => {\n                if (!uniqueX.has(feature)) {\n                    X.push(feature);\n                    uniqueX.add(feature);\n                }\n            });\n        }\n\n    });\n}\n\nexport function getFeatureSets(markers, featureSetIds) {\n    let featureSets = [];\n    featureSetIds.forEach(featureSetId => {\n        for (let i = 0; i < markers.length; i++) {\n            if (markers[i].id === featureSetId) {\n                featureSets.push(markers[i]);\n                break;\n            }\n        }\n    });\n    return featureSets;\n}\n\nexport function splitSearchTokens(tokens) {\n    let X = [];\n    let obs = [];\n    let obsCat = [];\n    let featureSets = [];\n    let featureSetsAdd = [];\n    let metafeatures = [];\n    tokens.forEach(token => {\n        if (token.type === X_SEARCH_TOKEN) {\n            X.push(token.value);\n        } else if (token.type === OBS_SEARCH_TOKEN) {\n            obs.push(token.value);\n        } else if (token.type === OBS_CAT_SEARCH_TOKEN) {\n            obsCat.push(token.value);\n        } else if (token.type === FEATURE_SET_SEARCH_TOKEN) {\n            featureSets.push(token.value);\n        } else if (token.type === METAFEATURE_SEARCH_TOKEN) {\n            metafeatures.push(token.value);\n        } else if (token.type === FEATURE_SET_SEARCH_TOKEN_ADD) {\n            featureSetsAdd.push(token.value);\n        } else {\n            console.log('Unknown type: ' + token);\n        }\n    });\n    return {X: X, obs: obs, obsCat: obsCat, featureSets: featureSets, metafeatures: metafeatures, featureSetsAdd: []};\n}\n","import {color} from 'd3-color';\nimport {makeStyles, ScatterPlot, ScatterPlotVisualizerSprites, ScatterPlotVisualizerSvgLabels} from 'scatter-gl';\nimport {Color, OrthographicCamera, Vector3} from 'three';\nimport {getEmbeddingKey} from './actions';\nimport {getVisualizer} from './ScatterChartThree';\nimport {getRgbScale, indexSort, randomSeq, rankIndexArray} from './util';\n\nexport const POINT_VISUALIZER_ID = 'SPRITES';\nconst SCATTER_PLOT_CUBE_LENGTH = 2;\nexport const LABELS_VISUALIZER_ID = 'SVG_LABELS';\n\nfunction scaleLinear(value, domain, range) {\n    const domainDifference = domain[1] - domain[0];\n    const rangeDifference = range[1] - range[0];\n\n    const percentDomain = (value - domain[0]) / domainDifference;\n    return percentDomain * rangeDifference + range[0];\n}\n\n\nexport function getScaleFactor(size) {\n    const ORTHO_CAMERA_FRUSTUM_HALF_EXTENT = 1.2;\n    const aspectRatio = size.width / size.height;\n    let left = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let right = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let bottom = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let top = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    // Scale up the larger of (w, h) to match the aspect ratio.\n    if (aspectRatio > 1) {\n        left *= aspectRatio;\n        right *= aspectRatio;\n    } else {\n        top /= aspectRatio;\n        bottom /= aspectRatio;\n    }\n    let camera = new OrthographicCamera(\n        left,\n        right,\n        top,\n        bottom,\n        -1000,\n        1000\n    );\n    camera.up = new Vector3(0, 0, 1);\n\n    camera.updateProjectionMatrix();\n    return camera.projectionMatrix.elements[0];\n}\n\nexport function createScatterPlot(containerElement, premultipliedAlpha, labels, interactive = true) {\n    const styles = makeStyles();\n    styles.label3D.fontSize = 40;\n\n    const scatterPlot = new ScatterPlot(containerElement, {\n        camera: {},\n        selectEnabled: false,\n        styles: styles,\n        interactive: interactive\n\n    }, premultipliedAlpha); // toDataUrl images are flipped on Safari when premultipliedAlpha is false\n    let visualizers = [new ScatterPlotVisualizerSprites(styles)];\n    if (labels) {\n        // visualizers.push(new ScatterPlotVisualizerCanvasLabels(containerElement, styles));\n        visualizers.push(new ScatterPlotVisualizerSvgLabels(containerElement, styles));\n    }\n    scatterPlot.setActiveVisualizers(visualizers);\n    return scatterPlot;\n}\n\nexport function getColors(trace) {\n    const RGBA_NUM_ELEMENTS = 4;\n    const rgbScale = getRgbScale();\n\n    let dst = 0;\n    let colorScale = trace.colorScale;\n    const n = trace.x.length;\n    const colors = new Float32Array(n * RGBA_NUM_ELEMENTS);\n\n    for (let i = 0; i < n; ++i) {\n        let c = color(colorScale(trace.values[i]));\n        colors[dst++] = rgbScale(c.r);\n        colors[dst++] = rgbScale(c.g);\n        colors[dst++] = rgbScale(c.b);\n        colors[dst++] = 1;\n    }\n    return colors;\n}\n\nexport function getPositions(trace) {\n\n    let xExtent = [Infinity, -Infinity];\n    let yExtent = [Infinity, -Infinity];\n    let zExtent = [Infinity, -Infinity];\n    const npoints = trace.x.length;\n    const is3d = trace.z != null;\n    let ranks;\n    if (!is3d) {\n        ranks = !trace.isCategorical ? rankIndexArray(indexSort(trace.values, true)) : randomSeq(trace.values.length, 1);\n        // ranks go from 1 to values.length. Higher rank means higher value.\n        zExtent[0] = 0;\n        zExtent[1] = 1;\n    }\n    // Determine max and min of each axis of our data.\n    for (let i = 0; i < npoints; i++) {\n        const x = trace.x[i];\n        if (x < xExtent[0]) {\n            xExtent[0] = x;\n        }\n        if (x > xExtent[1]) {\n            xExtent[1] = x;\n        }\n\n        const y = trace.y[i];\n        if (y < yExtent[0]) {\n            yExtent[0] = y;\n        }\n        if (y > yExtent[1]) {\n            yExtent[1] = y;\n        }\n        if (is3d) {\n            const z = trace.z[i];\n            if (z < zExtent[0]) {\n                zExtent[0] = z;\n            }\n            if (z > zExtent[1]) {\n                zExtent[1] = z;\n            }\n        }\n    }\n\n    const getRange = (extent) => Math.abs(extent[1] - extent[0]);\n    const xRange = getRange(xExtent);\n    const yRange = getRange(yExtent);\n    const zRange = getRange(zExtent);\n    const maxRange = Math.max(xRange, yRange, zRange);\n    const halfCube = SCATTER_PLOT_CUBE_LENGTH / 2;\n    const makeScaleRange = (range, base) => [\n        -base * (range / maxRange),\n        base * (range / maxRange),\n    ];\n    const xScale = makeScaleRange(xRange, halfCube);\n    const yScale = makeScaleRange(yRange, halfCube);\n    const zScale = makeScaleRange(zRange, halfCube);\n\n    const positions = new Float32Array(npoints * 3);\n    let dst = 0;\n\n    for (let i = 0; i < npoints; i++) {\n\n        positions[dst++] = scaleLinear(trace.x[i], xExtent, xScale);\n        positions[dst++] = scaleLinear(trace.y[i], yExtent, yScale);\n        positions[dst++] = scaleLinear(is3d ? trace.z[i] : ranks[i] / (ranks.length + 1), zExtent, zScale);\n    }\n    return positions;\n\n}\n\nexport function getCategoryLabelsPositions(embedding, obsKeys, cachedData) {\n    let arrayOfArrays = [];\n    obsKeys.forEach(key => {\n        const value = cachedData[key];\n        arrayOfArrays.push(value);\n    });\n    const embeddingKey = getEmbeddingKey(embedding);\n    const coordinates = cachedData[embeddingKey];\n    if (coordinates == null) {\n        throw 'Coordinates not found for ' + embedding.name;\n    }\n    const x = coordinates[embedding.name + '_1'];\n    const y = coordinates[embedding.name + '_2'];\n    const z = coordinates[embedding.name + '_3'];\n    const is3d = z != null;\n    const valueToCoords = {};\n    let ncategories = 0;\n    const isSpatial = embedding.spatial != null;\n    const npoints = x.length;\n    const nobs = obsKeys.length;\n    for (let i = 0; i < npoints; i++) {\n        let values = [];\n        for (let j = 0; j < nobs; j++) {\n            values.push(arrayOfArrays[j][i]);\n        }\n\n        const key = values.join(',');\n        let p = valueToCoords[key];\n        if (p === undefined) {\n            p = {x: [], y: [], z: [], array: values};\n            valueToCoords[key] = p;\n            ncategories++;\n        }\n        p.count++;\n        p.x.push(x[i]);\n        p.y.push(y[i]);\n        if (is3d) {\n            p.z.push(z[i]);\n        }\n    }\n\n    let xScale, yScale, zScale, xExtent, yExtent, zExtent;\n    if (!isSpatial) {\n        const getRange = (extent) => Math.abs(extent[1] - extent[0]);\n        xExtent = [Infinity, -Infinity];\n        yExtent = [Infinity, -Infinity];\n        zExtent = is3d ? [Infinity, -Infinity] : [0, 1];\n        // Determine max and min of each axis of our data.\n        for (let i = 0; i < npoints; i++) {\n            let value = x[i];\n            if (value < xExtent[0]) {\n                xExtent[0] = value;\n            }\n            if (value > xExtent[1]) {\n                xExtent[1] = value;\n            }\n\n            value = y[i];\n            if (value < yExtent[0]) {\n                yExtent[0] = value;\n            }\n            if (value > yExtent[1]) {\n                yExtent[1] = value;\n            }\n            if (is3d) {\n                value = z[i];\n                if (value < zExtent[0]) {\n                    zExtent[0] = value;\n                }\n                if (value > zExtent[1]) {\n                    zExtent[1] = value;\n                }\n            }\n        }\n        const xRange = getRange(xExtent);\n        const yRange = getRange(yExtent);\n        const zRange = getRange(zExtent);\n        const maxRange = Math.max(xRange, yRange, zRange);\n        const halfCube = SCATTER_PLOT_CUBE_LENGTH / 2;\n        const makeScaleRange = (range, base) => [\n            -base * (range / maxRange),\n            base * (range / maxRange),\n        ];\n        xScale = makeScaleRange(xRange, halfCube);\n        yScale = makeScaleRange(yRange, halfCube);\n        zScale = makeScaleRange(zRange, halfCube);\n    }\n\n    let labelValues = [];\n    let labelPositions = new Float32Array(ncategories * 3);\n    let positionIndex = 0;\n    for (let key in valueToCoords) {\n        let p = valueToCoords[key];\n        labelValues.push(p.array);\n        p.x.sort((a, b) => a - b);\n        p.y.sort((a, b) => a - b);\n        p.z.sort((a, b) => a - b);\n        const mid = p.x.length / 2;\n\n        let xmedian = mid % 1 ? p.x[mid - 0.5] : (p.x[mid - 1] + p.x[mid]) / 2;\n        let ymedian = mid % 1 ? p.y[mid - 0.5] : (p.y[mid - 1] + p.y[mid]) / 2;\n        let zmedian = mid % 1 ? p.z[mid - 0.5] : (p.z[mid - 1] + p.z[mid]) / 2;\n\n        if (!isSpatial) {\n            xmedian = scaleLinear(xmedian, xExtent, xScale);\n            ymedian = scaleLinear(ymedian, yExtent, yScale);\n            zmedian = scaleLinear(zmedian, zExtent, zScale);\n        }\n        labelPositions[positionIndex] = xmedian;\n        labelPositions[positionIndex + 1] = ymedian;\n        labelPositions[positionIndex + 2] = is3d ? zmedian : 0;\n        positionIndex += 3;\n    }\n\n    return {labels: labelValues, positions: labelPositions};\n}\n\nexport function updateScatterChart(scatterPlot, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, pointSize, categoricalNames = {}, chartOptions, obsCatKeys, cachedData) {\n    const colors = traceInfo.colors;\n    let positions = traceInfo.positions;\n\n    const npoints = traceInfo.npoints;\n    const isSelectionEmpty = selection.size === 0;\n\n    for (let i = 0, j = 3, k = 2; i < npoints; i++, j += 4, k += 3) {\n        const isSelected = isSelectionEmpty || selection.has(i);\n        colors[j] = isSelected ? markerOpacity : unselectedMarkerOpacity;\n    }\n    scatterPlot.scene.background = chartOptions.darkMode ? new Color(\"rgb(0, 0, 0)\") : null;\n    scatterPlot.setDimensions(traceInfo.dimensions);\n    let spriteVisualizer = getVisualizer(scatterPlot, POINT_VISUALIZER_ID);\n    spriteVisualizer.styles.fog.enabled = chartOptions.showFog;\n    const axes = scatterPlot.scene.getObjectByName('axes');\n    if (axes) {\n        axes.visible = chartOptions.showAxis;\n    }\n    scatterPlot.setPointColors(colors);\n    scatterPlot.setPointPositions(positions);\n\n    // const {scaleDefault, scaleSelected, scaleHover} = scatterPlot.styles.point;\n\n    const scale = new Float32Array(traceInfo.npoints);\n    scale.fill(pointSize);\n    scatterPlot.setPointScaleFactors(scale);\n\n    const showLabels = obsCatKeys.length > 0;\n    const labelsVisualizer = getVisualizer(scatterPlot, LABELS_VISUALIZER_ID);\n    if (labelsVisualizer) {\n        labelsVisualizer.labelsActive = showLabels;\n        if (showLabels) {\n            const labelKey = getEmbeddingKey(traceInfo.embedding) + '_' + obsCatKeys.join(',');\n            let labelsPositions = cachedData[labelKey];\n            if (labelsPositions == null) {\n                labelsPositions = getCategoryLabelsPositions(traceInfo.embedding, obsCatKeys, cachedData);\n                cachedData[labelKey] = labelsPositions;\n            }\n            labelsVisualizer.fillStyle = chartOptions.darkMode ? 'white' : 'black';\n            labelsVisualizer.shadowColor = chartOptions.darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n            labelsVisualizer.shadowStroke = chartOptions.labelStrokeWidth;\n            labelsVisualizer.font = 'bold ' + chartOptions.labelFontSize + 'px Roboto Condensed';\n            const labels = getLabels(obsCatKeys, labelsPositions.labels, categoricalNames);\n            labelsVisualizer.setLabels(labels, labelsPositions.positions);\n        }\n    }\n\n    scatterPlot.render();\n}\n\nexport function getLabels(obsCat, labels, categoricalNames) {\n    let labelStrings = [];\n    let renamedCategories = [];\n    obsCat.forEach(key => renamedCategories.push(categoricalNames[key] || {}));\n    for (let i = 0; i < labels.length; i++) {\n        let array = labels[i];\n        let value = [];\n        for (let j = 0; j < array.length; j++) {\n            let renamedValue = renamedCategories[j][array[j]];\n            value.push(renamedValue != null ? renamedValue : array[j]);\n        }\n        labelStrings.push(value.join(','));\n    }\n    return labelStrings;\n}\n","import {Typography} from '@material-ui/core';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {scaleLinear} from 'd3-scale';\nimport {bind} from 'lodash';\nimport React from 'react';\nimport {Vector3, Vector4} from 'three';\nimport {getEmbeddingKey} from './actions';\nimport ChartToolbar from './ChartToolbar';\nimport {saveImage} from './ChartUtil';\nimport {numberFormat2f} from './formatters';\nimport {\n    createScatterPlot,\n    getCategoryLabelsPositions,\n    getLabels,\n    POINT_VISUALIZER_ID,\n    updateScatterChart\n} from './ThreeUtil';\nimport {indexSort, isPointInside} from './util';\n\nfunction clamp(x, min_v, max_v) {\n    return Math.min(Math.max(x, min_v), max_v);\n}\n\nfunction smoothstep(edge0, edge1, x) {\n    const t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n    return t * t * (3 - 2 * t);\n};\n\nfunction mix(x, y, a) {\n    return x * (1.0 - a) + y * a;\n}\n\nexport function drawLabels(context, labels, positions, chartOptions, chartSize, camera) {\n    const pos = new Vector3();\n    context.fillStyle = chartOptions.darkMode ? 'white' : 'black';\n    context.strokeStyle = chartOptions.darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n    context.lineWidth = chartOptions.labelStrokeWidth;\n    context.textAlign = 'center';\n    context.textBaseline = \"middle\";\n    const width = chartSize.width;\n    const height = chartSize.height;\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    for (let i = 0, k = 0; i < labels.length; i++, k += 3) {\n        pos.x = positions[k];\n        pos.y = positions[k + 1];\n        pos.z = positions[k + 2];\n        pos.project(camera);\n        pos.x = (pos.x * widthHalf) + widthHalf;\n        pos.y = -(pos.y * heightHalf) + heightHalf;\n\n        context.strokeText(labels[i], pos.x, pos.y);\n        context.fillText(labels[i], pos.x, pos.y);\n    }\n}\n\nexport function getVisualizer(scatterPlot, id) {\n    for (let i = 0; i < scatterPlot.visualizers.length; i++) {\n        if (scatterPlot.visualizers[i].id === id) {\n            return scatterPlot.visualizers[i];\n        }\n    }\n}\n\nconst styles = theme => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(.4),\n        },\n        '& > .MuiIconButton-root': {\n            padding: 0,\n        },\n        '& > .cirro-active': {\n            fill: 'rgb(220, 0, 78)',\n            color: 'rgb(220, 0, 78)',\n        },\n        '& > .cirro-inactive': {\n            fill: 'rgba(0, 0, 0, 0.26)',\n            color: 'rgba(0, 0, 0, 0.26)'\n        },\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        display: 'inline-block',\n        verticalAlign: 'top',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    }\n});\n\nclass ScatterChartThree extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.containerElementRef = React.createRef();\n        this.tooltipElementRef = React.createRef();\n        this.scatterPlot = null;\n        this.lastHoverIndex = -1;\n        this.state = {forceUpdate: false};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.chartSize !== this.props.chartSize) {\n            this.scatterPlot.resize();\n        }\n        this.init();\n        this.draw();\n    }\n\n    componentDidMount() {\n        this.init();\n        this.draw(); // TODO fix 2x draw\n        this.draw();\n        if (this.props.chartOptions.camera) {\n            this.scatterPlot.updateFromCameraDef(this.props.chartOptions.camera);\n            this.props.chartOptions.camera = null;\n            this.draw();\n        }\n    }\n\n\n    componentWillUnmount() {\n        // if (this.scatterGL != null) {\n        //     this.scatterGL.dispose();\n        // }\n    }\n\n\n    calculatePointSize(traceInfo) {\n        const n = traceInfo.npoints;\n        const SCALE = 200;\n        const LOG_BASE = 8;\n        const DIVISOR = 1.5;\n        // Scale point size inverse-logarithmically to the number of points.\n        const pointSize = SCALE / Math.log(n) / Math.log(LOG_BASE);\n        return traceInfo.dimensions === 3 ? pointSize : pointSize / DIVISOR;\n    }\n\n    drawContext(context, chartSize, format) {\n        const {\n            obsCat,\n            cachedData,\n            traceInfo,\n            markerOpacity,\n            unselectedMarkerOpacity,\n            selection,\n            categoricalNames,\n            chartOptions\n        } = this.props;\n        const pointSize = this.calculatePointSize(traceInfo);\n        const scaleFactor = this.props.pointSize;\n        const PI2 = 2 * Math.PI;\n        const colors = traceInfo.colors;\n        const positions = traceInfo.positions;\n        const camera = this.scatterPlot.camera;\n        const width = chartSize.width;\n        const height = chartSize.height;\n        if (chartOptions.darkMode) {\n            context.fillStyle = 'black';\n            context.fillRect(0, 0, width, height);\n        }\n        const widthHalf = width / 2;\n        const heightHalf = height / 2;\n        const colorScale = scaleLinear().domain([0, 1]).range([0, 255]);\n        const npoints = traceInfo.npoints;\n        const is3d = traceInfo.dimensions === 3;\n        let outputPointSize;\n        let fog = this.scatterPlot.scene.fog;\n        let spriteVisualizer = getVisualizer(this.scatterPlot, POINT_VISUALIZER_ID);\n\n        if (!is3d) {\n            const PI = 3.1415926535897932384626433832795;\n            const minScale = 0.1;  // minimum scaling factor\n            const outSpeed = 2.0;  // shrink speed when zooming out\n            const outNorm = (1. - minScale) / Math.atan(outSpeed);\n            const maxScale = 15.0;  // maximum scaling factor\n            const inSpeed = 0.02;  // enlarge speed when zooming in\n            const zoomOffset = 0.3;  // offset zoom pivot\n            let zoom = camera.projectionMatrix.elements[0] + zoomOffset;  // zoom pivot\n            let scale = zoom < 1. ? 1. + outNorm * Math.atan(outSpeed * (zoom - 1.)) :\n                1. + 2. / PI * (maxScale - 1.) * Math.atan(inSpeed * (zoom - 1.));\n            outputPointSize = pointSize * scale;\n        }\n        let gl_PointSize = (outputPointSize * scaleFactor) / 4;\n        const pos = new Vector3();\n        let cameraSpacePos = new Vector4();\n        let object = spriteVisualizer.points;\n        let modelViewMatrix = object.modelViewMatrix.clone();\n        modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n        const showFog = chartOptions.showFog;\n        const isSelectionEmpty = selection.size === 0;\n        let pointOrder;\n        if (is3d) {\n            pointOrder = new Uint32Array(npoints);\n            for (let i = 0; i < npoints; i++) {\n                pointOrder[i] = i;\n            }\n        } else {\n            const z = new Float32Array(npoints);\n            for (let i = 0; i < npoints; i++) {\n                z[i] = positions[i * 3 + 2];\n            }\n            pointOrder = indexSort(z, true);\n        }\n        for (let j = 0; j < npoints; j++) {\n            const index = pointOrder[j];\n            const positionIndex = index * 3;\n            const colorIndex = index * 4;\n            const isSelected = isSelectionEmpty || selection.has(index);\n            pos.x = positions[positionIndex];\n            pos.y = positions[positionIndex + 1];\n            pos.z = positions[positionIndex + 2];\n            pos.project(camera);\n\n            let r = colors[colorIndex];\n            let g = colors[colorIndex + 1];\n            let b = colors[colorIndex + 2];\n            let a = isSelected ? markerOpacity : unselectedMarkerOpacity;\n            if (is3d) {\n                cameraSpacePos.x = positions[positionIndex];\n                cameraSpacePos.y = positions[positionIndex + 1];\n                cameraSpacePos.z = positions[positionIndex + 2];\n                cameraSpacePos.w = 1;\n                cameraSpacePos.applyMatrix4(modelViewMatrix);\n                outputPointSize = -pointSize / cameraSpacePos.z;\n                gl_PointSize = (outputPointSize * scaleFactor) / 4;\n                if (showFog) {\n                    const fogDepth = pointSize / outputPointSize * 1.2;\n                    const fogFactor = smoothstep(fog.near, fog.far, fogDepth);\n                    r = mix(r, fog.color.r, fogFactor);\n                    g = mix(g, fog.color.g, fogFactor);\n                    b = mix(b, fog.color.b, fogFactor);\n                }\n            }\n            pos.x = (pos.x * widthHalf) + widthHalf;\n            pos.y = -(pos.y * heightHalf) + heightHalf;\n\n            r = Math.round(colorScale(r));\n            g = Math.round(colorScale(g));\n            b = Math.round(colorScale(b));\n\n            context.fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n            context.beginPath();\n            context.arc(pos.x, pos.y, gl_PointSize, 0, PI2);\n            context.closePath();\n            context.fill();\n        }\n        if (obsCat.length > 0) {\n            const labelsPositions = getCategoryLabelsPositions(traceInfo.embedding, obsCat, cachedData);\n            let font = format === 'svg' ? 'serif' : 'Roboto Condensed';\n            context.font = 'bold ' + chartOptions.labelFontSize + 'px ' + font;\n            drawLabels(context, getLabels(obsCat, labelsPositions.labels, categoricalNames), labelsPositions.positions, chartOptions, chartSize, camera);\n        }\n    }\n\n    // onCopyImage = (event) => {\n    //     const size = this.chartSize;\n    //     const canvas = document.createElement('canvas');\n    //     canvas.width = size.width; // * window.devicePixelRatio;\n    //     canvas.height = size.height; // * window.devicePixelRatio;\n    //     const context = canvas.getContext('2d');\n    //     this.drawContext(context, this.chartSize);\n    //     const url = canvas.toDataURL();\n    //     setClipboardData([{\n    //         format: 'image/png',\n    //         data: '<img src=\"' + url + '\">'\n    //     }]);\n    // };\n\n\n    onSaveImage = (format) => {\n        const {traceInfo, chartSize} = this.props;\n        saveImage(traceInfo, chartSize, bind(this.drawContext, this), format);\n    };\n\n\n    onEditSelection = () => {\n        this.props.chartOptions.editSelection = !this.props.chartOptions.editSelection;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    resetCamera = () => {\n        this.scatterPlot.resetZoom();\n    };\n\n\n    onShowAxis = () => {\n        const axes = this.scatterPlot.scene.getObjectByName('axes');\n        this.props.chartOptions.showAxis = !this.props.chartOptions.showAxis;\n        if (axes) {\n            axes.visible = this.props.chartOptions.showAxis;\n        }\n\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n    onShowFog = () => {\n        let spriteVisualizer = getVisualizer(this.scatterPlot, POINT_VISUALIZER_ID);\n        this.props.chartOptions.showFog = !this.props.chartOptions.showFog;\n        spriteVisualizer.styles.fog.enabled = this.props.chartOptions.showFog;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    onDragMode = (mode) => {\n\n        if (mode === 'pan') {\n            this.scatterPlot.setInteractionMode('PAN');\n        } else if (mode === 'select') {\n            this.scatterPlot.setInteractionMode('SELECT');\n            this.scatterPlot.rectangleSelector.setSelectionMode('BOX');\n        } else if (mode === 'lasso') {\n            this.scatterPlot.rectangleSelector.setSelectionMode('LASSO');\n            this.scatterPlot.setInteractionMode('SELECT');\n        }\n        this.props.chartOptions.dragmode = mode;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n    onToggleAnimation = () => {\n        if (this.scatterPlot.orbitIsAnimating()) {\n            this.scatterPlot.stopOrbitAnimation();\n            this.props.chartOptions.animating = false;\n        } else {\n            this.scatterPlot.startOrbitAnimation();\n            this.props.chartOptions.animating = true;\n        }\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    init() {\n        if (this.scatterPlot == null) {\n            const containerElement = this.containerElementRef.current;\n            this.scatterPlot = createScatterPlot(containerElement, window.ApplePaySession, true);\n            if (this.props.chartOptions.dragmode === 'pan') {\n                this.scatterPlot.setInteractionMode('PAN');\n            } else if (this.props.chartOptions.dragmode === 'select') {\n                this.scatterPlot.setInteractionMode('SELECT');\n                this.scatterPlot.rectangleSelector.setSelectionMode('BOX');\n            } else if (this.props.chartOptions.dragmode === 'lasso') {\n                this.scatterPlot.setInteractionMode('SELECT');\n                this.scatterPlot.rectangleSelector.setSelectionMode('LASSO');\n\n            }\n            const axes = this.scatterPlot.scene.getObjectByName('axes');\n            if (axes) {\n                axes.visible = this.props.chartOptions.showAxis;\n            }\n            let spriteVisualizer = getVisualizer(this.scatterPlot, POINT_VISUALIZER_ID);\n            spriteVisualizer.styles.fog.enabled = this.props.chartOptions.showFog;\n            this.scatterPlot.hoverCallback = (point) => {\n                if (point == null) {\n                    this.tooltipElementRef.current.innerHTML = ' ';\n                } else {\n                    const traceInfo = this.props.traceInfo;\n                    const positions = traceInfo.positions;\n                    const camera = this.scatterPlot.camera;\n                    const widthHalf = this.props.chartSize.width / 2;\n                    const heightHalf = this.props.chartSize.height / 2;\n                    const pos = new Vector3();\n                    let selectedIndex = -1;\n                    const tolerance = 2;\n                    if (this.lastHoverIndex !== -1) {\n                        pos.x = positions[this.lastHoverIndex * 3];\n                        pos.y = positions[this.lastHoverIndex * 3 + 1];\n                        pos.z = positions[this.lastHoverIndex * 3 + 2];\n                        pos.project(camera);\n                        pos.x = (pos.x * widthHalf) + widthHalf;\n                        pos.y = -(pos.y * heightHalf) + heightHalf;\n                        if (Math.abs(pos.x - point.x) <= tolerance && Math.abs(pos.y - point.y) <= tolerance) {\n                            selectedIndex = this.lastHoverIndex;\n                        }\n                    }\n\n                    if (selectedIndex === -1) {\n                        for (let i = 0, j = 0, k = 0; i < traceInfo.npoints; i++, j += 4, k += 3) {\n                            pos.x = positions[k];\n                            pos.y = positions[k + 1];\n                            pos.z = positions[k + 2];\n                            pos.project(camera);\n                            pos.x = (pos.x * widthHalf) + widthHalf;\n                            pos.y = -(pos.y * heightHalf) + heightHalf;\n                            if (Math.abs(pos.x - point.x) <= tolerance && Math.abs(pos.y - point.y) <= tolerance) {\n                                selectedIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    this.lastHoverIndex = selectedIndex;\n                    if (selectedIndex !== -1) {\n                        let value = traceInfo.values[selectedIndex];\n                        let categoryObject = this.props.categoricalNames[traceInfo.name];\n                        if (categoryObject) {\n                            let renamedValue = categoryObject[value];\n                            if (renamedValue != null) {\n                                value = renamedValue;\n                            }\n                        }\n\n                        if (typeof value === 'number') {\n                            value = numberFormat2f(value);\n                            if (value.endsWith('.00')) {\n                                value = value.substring(0, value.lastIndexOf('.'));\n                            }\n                        }\n                        this.tooltipElementRef.current.innerHTML = '' + value;\n                    } else {\n                        this.tooltipElementRef.current.innerHTML = ' ';\n                    }\n\n                }\n\n            };\n            this.scatterPlot.lassoCallback = (points) => {\n                const traceInfo = this.props.traceInfo;\n                const positions = traceInfo.positions;\n                const camera = this.scatterPlot.camera;\n                const widthHalf = this.props.chartSize.width / 2;\n                const heightHalf = this.props.chartSize.height / 2;\n                const pos = new Vector3();\n                const selectedIndices = [];\n\n                for (let i = 0, j = 0, k = 0; i < traceInfo.npoints; i++, j += 4, k += 3) {\n                    pos.x = positions[k];\n                    pos.y = positions[k + 1];\n                    pos.z = positions[k + 2];\n                    pos.project(camera);\n                    pos.x = (pos.x * widthHalf) + widthHalf;\n                    pos.y = -(pos.y * heightHalf) + heightHalf;\n                    if (isPointInside(pos, points)) {\n                        selectedIndices.push(i);\n                    }\n                }\n\n                if (selectedIndices.length === 0) {\n                    this.props.onDeselect({name: getEmbeddingKey(traceInfo.embedding)});\n                } else {\n                    this.props.onSelected({\n                        name: getEmbeddingKey(traceInfo.embedding),\n                        clear: !this.props.chartOptions.editSelection,\n                        value: {basis: traceInfo.embedding, points: selectedIndices}\n                    });\n                }\n            };\n            this.scatterPlot.boxCallback = (rect) => {\n                if (this.scatterPlot.interactionMode === 'PAN') {\n                    return;\n                }\n                const traceInfo = this.props.traceInfo;\n                const positions = traceInfo.positions;\n                const camera = this.scatterPlot.camera;\n                const widthHalf = this.props.chartSize.width / 2;\n                const heightHalf = this.props.chartSize.height / 2;\n                const pos = new Vector3();\n                const selectedPoints = [];\n\n                for (let i = 0, j = 0, k = 0; i < traceInfo.npoints; i++, j += 4, k += 3) {\n                    pos.x = positions[k];\n                    pos.y = positions[k + 1];\n                    pos.z = positions[k + 2];\n                    pos.project(camera);\n                    pos.x = (pos.x * widthHalf) + widthHalf;\n                    pos.y = -(pos.y * heightHalf) + heightHalf;\n                    if (pos.x >= rect.x && pos.x <= (rect.x + rect.width) && pos.y >= rect.y && pos.y <= (rect.y + rect.height)) {\n                        selectedPoints.push(i);\n                    }\n                }\n\n                if (selectedPoints.length === 0) {\n                    this.props.onDeselect({name: getEmbeddingKey(traceInfo.embedding)});\n                } else {\n                    this.props.onSelected({\n                        name: getEmbeddingKey(traceInfo.embedding),\n                        clear: !this.props.chartOptions.editSelection,\n                        value: {basis: traceInfo.embedding, points: selectedPoints}\n                    });\n                }\n            };\n            const canvas = this.containerElementRef.current.querySelector('canvas');\n            canvas.style.outline = '0px';\n            const webglcontextlost = (e) => {\n                console.log('lost webgl context');\n                e.preventDefault();\n                this.scatterPlot = null;\n            };\n            const webglcontextrestored = (e) => {\n                console.log('restored webgl context');\n                e.preventDefault();\n                this.setState({forceUpdate: !this.state.forceUpdate});\n            };\n            canvas.addEventListener('webglcontextlost', webglcontextlost);\n            canvas.addEventListener('webglcontextrestored', webglcontextrestored);\n        }\n\n    }\n\n\n    draw() {\n        const {\n            obsCat,\n            cachedData,\n            traceInfo,\n            markerOpacity,\n            unselectedMarkerOpacity,\n            selection,\n            pointSize,\n            chartOptions,\n            categoricalNames\n        } = this.props;\n        updateScatterChart(this.scatterPlot, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, pointSize,\n            categoricalNames, chartOptions, obsCat, cachedData);\n    }\n\n\n    render() {\n        return <React.Fragment>\n            <div className={this.props.classes.root}>\n                <ChartToolbar\n                    dragmode={this.props.chartOptions.dragmode}\n                    editSelection={this.props.chartOptions.editSelection}\n                    onGallery={this.props.onGallery}\n                    animating={this.props.chartOptions.animating}\n                    showFog={this.props.chartOptions.showFog}\n                    onShowFog={this.onShowFog}\n                    is3d={this.props.traceInfo && this.props.traceInfo.z != null}\n                    toggleAnimation={this.onToggleAnimation}\n                    onSaveImage={this.onSaveImage}\n                    onDragMode={this.onDragMode}\n                    onCopyImage={this.onCopyImage}\n                    onEditSelection={this.onEditSelection}\n                    onShowAxis={this.onShowAxis}\n                    onHome={this.resetCamera}\n                    showAxis={this.props.chartOptions.showAxis}\n                >\n                </ChartToolbar>\n                <Typography color=\"textPrimary\" ref={this.tooltipElementRef} style={{\n                    display: 'inline-block',\n                    paddingLeft: 5,\n                    verticalAlign: 'top'\n                }}>&nbsp;</Typography>\n            </div>\n\n            <div style={{\n                display: 'inline-block',\n                width: this.props.chartSize.width,\n                height: this.props.chartSize.height\n            }}\n                 ref={this.containerElementRef}>\n            </div>\n        </React.Fragment>;\n    }\n}\n\nexport default withStyles(styles)(ScatterChartThree);\n\n\n","import {scaleOrdinal, scaleSequential} from 'd3-scale';\nimport {schemeCategory10, schemePaired} from 'd3-scale-chromatic';\nimport {saveAs} from 'file-saver';\nimport {isEqual} from 'lodash';\nimport OpenSeadragon from 'openseadragon';\nimport isPlainObject from 'react-redux/lib/utils/isPlainObject';\nimport CustomError from '../CustomError';\nimport {getPassingFilterIndices} from '../dataset_filter';\nimport {DirectAccessDataset} from '../DirectAccessDataset';\nimport {RestDataset} from '../RestDataset';\nimport {RestServerApi} from '../RestServerApi';\n\n\nimport {getPositions} from '../ThreeUtil';\n\nimport {\n    addFeatureSetsToX,\n    CATEGORY_20B,\n    CATEGORY_20C,\n    convertBinsToIndices,\n    convertIndicesToBins,\n    getFeatureSets,\n    getInterpolator,\n    indexSort,\n    OBS_CAT_SEARCH_TOKEN,\n    OBS_SEARCH_TOKEN,\n    randomSeq,\n    splitSearchTokens,\n    updateTraceColors\n} from '../util';\n\n// export const API = 'http://localhost:5000/api';\nexport const API = 'api';\n\nconst authScopes = [\n    'email',\n    // 'profile',\n    // 'https://www.googleapis.com/auth/userinfo.profile',\n    // 'https://www.googleapis.com/auth/contacts.readonly',\n    // 'https://www.googleapis.com/auth/devstorage.full_control',\n];\nexport const SET_EMBEDDING_LABELS = 'SET_EMBEDDING_LABELS';\nexport const SET_DISTRIBUTION_PLOT_INTERPOLATOR = 'SET_DISTRIBUTION_PLOT_INTERPOLATOR';\nexport const SET_CHART_OPTIONS = 'SET_CHART_OPTIONS';\nexport const SET_COMBINE_DATASET_FILTERS = 'SET_COMBINE_DATASET_FILTERS';\nexport const SET_DATASET_FILTERS = 'SET_DATASET_FILTERS'; // saved dataset filters\nexport const SET_UNSELECTED_MARKER_SIZE = 'SET_UNSELECTED_MARKER_SIZE';\n\nexport const SET_PRIMARY_TRACE_KEY = 'SET_PRIMARY_TRACE_KEY';\nexport const SET_CHART_SIZE = 'SET_CHART_SIZE';\nexport const SET_PRIMARY_CHART_SIZE = 'SET_PRIMARY_CHART_SIZE';\nexport const SET_SERVER_INFO = \"SET_SERVER_INFO\";\nexport const SET_DATASET_FILTER = 'SET_DATASET_FILTER';\nexport const ADD_DATASET = 'ADD_DATASET';\nexport const DELETE_DATASET = 'DELETE_DATASET';\nexport const UPDATE_DATASET = 'UPDATE_DATASET';\nexport const SET_GLOBAL_FEATURE_SUMMARY = 'SET_GLOBAL_FEATURE_SUMMARY';\nexport const SET_SAVED_DATASET_STATE = 'SET_SAVED_DATASET_STATE';\n\nexport const SET_DOMAIN = 'SET_DOMAIN';\nexport const SET_CATEGORICAL_COLOR = 'SET_CATEGORICAL_COLOR';\nexport const SET_CATEGORICAL_NAME = 'SET_CATEGORICAL_NAME';\nexport const SET_MARKER_SIZE = 'SET_MARKER_SIZE';\nexport const SET_MARKER_OPACITY = 'SET_MARKER_OPACITY';\n\nexport const SET_EMBEDDING_CHART_SIZE = \"SET_EMBEDDING_CHART_SIZE\";\n\nexport const SET_UNSELECTED_MARKER_OPACITY = 'SET_UNSELECTED_MARKER_OPACITY';\n\n// update chart\n\nexport const SET_SELECTION = 'SET_SELECTION';\nexport const SET_FEATURE_SUMMARY = 'SET_FEATURE_SUMMARY';\nexport const SET_SAVED_DATASET_FILTER = 'SET_SAVED_DATASET_FILTER';\nexport const SET_SEARCH_TOKENS = 'SET_SEARCH_TOKENS';\n\nexport const SET_SELECTED_EMBEDDING = 'SET_SELECTED_EMBEDDING';\nexport const SET_NUMBER_OF_BINS = 'SET_NUMBER_OF_BINS';\nexport const SET_BIN_VALUES = 'SET_BIN_VALUES';\nexport const SET_BIN_SUMMARY = 'SET_BIN_SUMMARY';\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const SET_INTERPOLATOR = 'SET_INTERPOLATOR';\nexport const SET_POINT_SIZE = 'SET_POINT_SIZE';\n\n// update ui\nexport const SET_EMAIL = 'SET_EMAIL';\nexport const SET_USER = 'SET_USER';\nexport const SET_DATASET = 'SET_DATASET';\nexport const SET_MARKERS = 'SET_MARKERS';\nexport const SET_DIALOG = 'SET_DIALOG';\n\nexport const MORE_OPTIONS_DIALOG = 'MORE_OPTIONS_DIALOG';\nexport const EDIT_DATASET_DIALOG = 'EDIT_DATASET_DIALOG';\nexport const IMPORT_DATASET_DIALOG = 'IMPORT_DATASET_DIALOG';\nexport const SAVE_DATASET_FILTER_DIALOG = 'SAVE_DATASET_FILTER_DIALOG';\nexport const SAVE_FEATURE_SET_DIALOG = 'SAVE_FEATURE_SET_DIALOG';\nexport const HELP_DIALOG = 'HELP_DIALOG';\nexport const DELETE_DATASET_DIALOG = 'DELETE_DATASET_DIALOG';\n\nexport const SET_DATASET_CHOICES = 'SET_DATASET_CHOICES';\nexport const RESTORE_VIEW = 'RESTORE_VIEW';\n\nexport const SET_DISTRIBUTION_DATA = 'SET_DISTRIBUTION_DATA';\nexport const SET_SELECTED_DISTRIBUTION_DATA = 'SET_SELECTED_DISTRIBUTION_DATA';\n\nexport const SET_DISTRIBUTION_PLOT_OPTIONS = 'SET_DISTRIBUTION_PLOT_OPTIONS';\nexport const SET_EMBEDDING_DATA = 'SET_EMBEDDING_DATA';\n\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_TAB = 'SET_TAB';\n\nexport const SET_LOADING_APP = 'LOADING_APP';\nexport const SET_CACHED_DATA = 'SET_CACHED_DATA';\n\n\nfunction isEmbeddingBinned(embedding) {\n    return embedding.bin || embedding.precomputed;\n}\n\nexport function getEmbeddingKey(embedding) {\n    let fullName = embedding.name;\n    if (embedding.dimensions) {\n        fullName += '_' + embedding.dimensions;\n    }\n    if (embedding.bin || embedding.precomputed) {\n        fullName += '_' + embedding.nbins + '_' + embedding.agg;\n    }\n    return fullName;\n}\n\nexport function getTraceKey(traceInfo) {\n    return traceInfo.name + '_' + getEmbeddingKey(traceInfo.embedding);\n}\n\nfunction getEmbeddingJson(embedding) {\n    let value = {basis: embedding.name, ndim: embedding.dimensions};\n    if (embedding.precomputed) {\n        value.precomputed = true;\n    }\n    if (embedding.bin) {\n        value.nbins = embedding.nbins;\n        value.agg = embedding.agg;\n    }\n\n    return value;\n}\n\n\nfunction getUser() {\n    return function (dispatch, getState) {\n        getState().serverInfo.api.getUserPromise().then(user => dispatch(setUser(user)));\n    };\n}\n\nexport function initGapi() {\n    return function (dispatch, getState) {\n        dispatch(_setLoadingApp({loading: true, progress: 0}));\n        const startTime = new Date().getTime();\n        const approximateColdBootTime = 32;\n\n        function loadingAppProgress() {\n            if (getState().loadingApp.loading) {\n                let elapsed = (new Date().getTime() - startTime) / 1000;\n                let p = Math.min(100, 100 * (elapsed / approximateColdBootTime));\n                dispatch(_setLoadingApp({loading: true, progress: p}));\n                if (p < 100) {\n                    window.setTimeout(loadingAppProgress, 300);\n                }\n            }\n        }\n\n        window.setTimeout(loadingAppProgress, 500);\n\n        return fetch(API + '/server').then(result => result.json()).then(serverInfo => {\n            serverInfo.api = new RestServerApi();\n            if (serverInfo.clientId == null) {\n                serverInfo.clientId = '';\n            }\n            if (serverInfo.fancy == null) {\n                serverInfo.fancy = true;\n            }\n            dispatch(setServerInfo(serverInfo));\n            if (serverInfo.clientId === '') { // no login required\n\n\n                dispatch(_setLoadingApp({loading: false}));\n                dispatch(_setEmail(serverInfo.mode === 'server' ? '' : null));\n                if (serverInfo.mode === 'server') {\n                    dispatch(setUser({importer: true}));\n                }\n                dispatch(listDatasets()).then(() => {\n                    dispatch(_loadSavedView());\n                });\n\n\n            } else {\n                console.log((new Date().getTime() - startTime) / 1000 + \" startup time\");\n                let script = document.createElement('script');\n                script.type = 'text/javascript';\n                script.src = 'https://apis.google.com/js/api.js';\n                script.onload = (e) => {\n                    window.gapi.load('client:auth2', () => {\n                        window.gapi.client.init({\n                            clientId: serverInfo.clientId,\n                            scope: authScopes.join(' '),\n                        }).then(() => {\n                            dispatch(_setLoadingApp({loading: false, progress: 0}));\n                            dispatch(initLogin(true));\n                        });\n                    });\n                };\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        }).catch(err => {\n            console.log(err);\n            dispatch(_setLoadingApp({loading: false, progress: 0}));\n            handleError(dispatch, 'Unable to load app. Please try again.');\n        });\n    };\n}\n\nexport function logout() {\n    return function (dispatch, getState) {\n        window.gapi.auth2.getAuthInstance().signOut().then(() => {\n            dispatch({type: SET_EMAIL, payload: null});\n            dispatch(_setDataset(null));\n        });\n    };\n}\n\nexport function login() {\n    return function (dispatch, getState) {\n        window.gapi.auth2.getAuthInstance().signIn().then(e => {\n            dispatch(initLogin());\n        });\n    };\n}\n\nexport function openDatasetFilter(filterId) {\n    return function (dispatch, getState) {\n\n        dispatch(_setLoading(true));\n\n        getState().serverInfo.api.getDatasetFilterPromise(filterId, getState().dataset.id)\n            .then(result => {\n                result.id = filterId;\n                let filterValue = JSON.parse(result.value);\n                let datasetFilter = {};\n\n                filterValue.filters.forEach(item => {\n                    let filterOperation = item[1];\n                    let field = item[0];\n                    let slashIndex = field.indexOf('/');\n                    if (slashIndex !== -1) {\n                        field = field.substring(slashIndex + 1);\n                    }\n                    if (filterOperation === 'in') {\n                        datasetFilter[field] = item[2];\n                    } else {\n                        datasetFilter[field] = {operation: item[1], value: item[2]};\n                    }\n                });\n                dispatch(setDatasetFilter(datasetFilter));\n                dispatch(handleFilterUpdated());\n\n\n            }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve filter. Please try again.');\n        });\n    };\n}\n\nexport function deleteDatasetFilter(filterId) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteDatasetFilterPromise(filterId, getState().dataset.id)\n            .then(() => {\n                let datasetFilters = getState().datasetFilters;\n                for (let i = 0; i < datasetFilters.length; i++) {\n                    if (datasetFilters[i].id === filterId) {\n                        datasetFilters.splice(i, 1);\n                        break;\n                    }\n                }\n\n                dispatch(setDatasetFilters(datasetFilters.slice()));\n                dispatch(setMessage('Filter deleted'));\n\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete filter. Please try again.');\n        });\n    };\n}\n\n\nexport function submitJob() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        let jobId;\n        let timeout = 30 * 1000;\n\n        function getJob() {\n            getState().serverInfo.api.getJob(jobId)\n                .then(result => {\n                    if (result.status === 'complete') {\n                        console.log(result);\n                        //dispatch(_setJobResult(result));\n                    } else if (result.status === 'error') {\n                        handleError(dispatch, new CustomError('Unable to complete job. Please try again.'));\n                    } else {\n                        window.setTimeout(getJob, timeout);\n                    }\n                }).catch(err => {\n                handleError(dispatch, err, 'Unable to get job. Please try again.');\n            });\n        }\n\n        getState().serverInfo.api.submitJob(getState().dataset.id)\n            .then(result => {\n                dispatch(setMessage('Job submitted'));\n                jobId = result.id;\n                window.setTimeout(getJob, timeout);\n            }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to submit job. Please try again.');\n        });\n    };\n}\n\nexport function deleteFeatureSet(id) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteFeatureSet(id, getState().dataset.id)\n            .then(result => {\n\n                let markers = getState().markers;\n                for (let i = 0; i < markers.length; i++) {\n                    if (markers[i].id === id) {\n                        markers.splice(i, 1);\n                        // remove from searchTokens\n                        break;\n                    }\n                }\n                dispatch(setMarkers(markers.slice()));\n                dispatch(setMessage('Set deleted'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete set. Please try again.');\n        });\n    };\n}\n\nexport function saveFeatureSet(payload) {\n    return function (dispatch, getState) {\n        const state = getState();\n        const searchTokens = state.searchTokens;\n        const splitTokens = splitSearchTokens(searchTokens);\n        let features = splitTokens.X;\n        const requestBody = {\n            ds_id: state.dataset.id,\n            name: payload.name,\n            features: features,\n            category: payload.category\n        };\n\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.upsertFeatureSet(requestBody, false)\n            .then(result => {\n\n                let markers = getState().markers;\n                markers.push({\n                    category: payload.category,\n                    name: payload.name,\n                    features: features,\n                    id: result.id\n                });\n                dispatch(setMarkers(markers.slice()));\n                dispatch(setMessage('Set saved'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to save set. Please try again.');\n        });\n    };\n}\n\nexport function saveDatasetFilter(payload) {\n    return function (dispatch, getState) {\n        const state = getState();\n        let filterValue = getFilterJson(state, true);\n\n        let requestBody = {ds_id: state.dataset.id};\n        if (payload.filterId != null) {\n            requestBody.id = payload.filterId;\n        }\n        let savedDatasetFilter = {};\n\n        let sendRequest = false;\n        if (payload.name !== savedDatasetFilter.name) {\n            requestBody.name = payload.name;\n            sendRequest = true;\n        }\n        if (payload.notes !== savedDatasetFilter.notes) {\n            requestBody.notes = payload.notes;\n            sendRequest = true;\n        }\n        if (!isEqual(filterValue, savedDatasetFilter.value)) {\n            requestBody.value = filterValue;\n            sendRequest = true;\n        }\n        if (!sendRequest) {\n            dispatch(setDialog(null));\n            return;\n        }\n        for (let key in requestBody) {\n            savedDatasetFilter[key] = requestBody[key];\n        }\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.upsertDatasetFilterPromise(requestBody, payload.filterId != null)\n            .then(result => {\n                requestBody.id = result.id;\n                let datasetFilters = getState().datasetFilters;\n                if (payload.filterId != null) {\n                    for (let i = 0; i < datasetFilters.length; i++) {\n                        if (datasetFilters[i].id === result.id) {\n                            datasetFilters[i] = requestBody;\n                            break;\n                        }\n                    }\n                } else {\n                    datasetFilters.push(requestBody);\n                }\n                dispatch(setDatasetFilters(datasetFilters.slice()));\n                dispatch(setMessage('Filter saved'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to save filter. Please try again.');\n        });\n    };\n}\n\nexport function removeDatasetFilter(filterKey) {\n    return function (dispatch, getState) {\n        if (filterKey == null) {\n            // clear all\n            dispatch(setDatasetFilter({}));\n        } else {\n            let datasetFilter = getState().datasetFilter;\n            if (filterKey === 'selection') {\n                for (let key in datasetFilter) {\n                    if (datasetFilter[key].basis != null) {\n                        delete datasetFilter[key];\n                    }\n                }\n            } else {\n                delete datasetFilter[filterKey];\n            }\n            dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n        }\n        dispatch(handleFilterUpdated());\n    };\n}\n\nfunction getDatasetFilterDependencies(datasetFilter) {\n    let features = new Set();\n    let basis = new Set();\n    for (let key in datasetFilter) {\n        // basis, path for brush filter\n        const value = datasetFilter[key];\n        if (window.Array.isArray(value)) {\n            features.add(key);\n        } else if (value.basis != null) {\n            basis.add(value.basis);\n        } else {\n            if (value.operation !== '' && !isNaN(value.value) && value.value != null) {\n                features.add(key);\n            }\n        }\n    }\n    return {features: features, basis: basis};\n}\n\nexport function getDatasetFilterArray(datasetFilter) {\n    let filters = [];\n    for (let key in datasetFilter) {\n        // basis, path for brush filter\n        const value = datasetFilter[key];\n        let f = null;\n        if (window.Array.isArray(value)) {\n            f = [key, 'in', value];\n        } else if (value.basis != null) {\n            let points = value.points;\n            if (points.length > 1) { // take \"or\"\n                let allPoints = new Set();\n                points.forEach(p => p.forEach(i => allPoints.add(i)));\n                points = Array.from(allPoints);\n            } else {\n                points = points[0];\n            }\n            f = [getEmbeddingJson(value.basis), 'in', {points: points}];\n        } else {\n            if (value.operation !== '' && !isNaN(value.value) && value.value != null) {\n                f = [key, value.operation, value.value];\n            }\n        }\n\n        if (f != null) {\n            filters.push(f);\n        }\n    }\n    return filters;\n}\n\n\nfunction getFilterJson(state) {\n    let filters = getDatasetFilterArray(state.datasetFilter);\n    if (filters.length > 0) {\n        const obs = state.dataset.obs;\n        const obsCat = state.dataset.obsCat;\n        for (let i = 0; i < filters.length; i++) {\n            // add obs/ prefix\n            if (obsCat.indexOf(filters[i][0]) !== -1 || obs.indexOf(filters[i][0]) !== -1) {\n                filters[i][0] = 'obs/' + filters[i][0];\n            }\n        }\n        return {filters: filters, combine: state.combineDatasetFilters};\n    }\n}\n\n\nexport function downloadSelectedIds() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        const state = getState();\n        let filter = getFilterJson(state, true);\n\n        state.dataset.api.getSelectedIdsPromise({\n            filter: filter\n        }, state.cachedData).then(result => {\n            const blob = new Blob([result.ids.join('\\n')], {type: \"text/plain;charset=utf-8\"});\n            saveAs(blob, \"selection.txt\");\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\nexport function exportDatasetFilters() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.exportDatasetFiltersPromise(getState().dataset.id).then(result => {\n            if (result == null) {\n                handleError(dispatch, 'Unable to export filters');\n                return;\n            }\n            const blob = new Blob([result], {type: \"text/plain;charset=utf-8\"});\n            saveAs(blob, \"filters.csv\");\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\n\nexport function setDistributionPlotOptions(payload) {\n    return {type: SET_DISTRIBUTION_PLOT_OPTIONS, payload: payload};\n}\n\nexport function setChartOptions(payload) {\n    return {type: SET_CHART_OPTIONS, payload: payload};\n}\n\n\nfunction _setCombineDatasetFilters(payload) {\n    return {type: SET_COMBINE_DATASET_FILTERS, payload: payload};\n}\n\nexport function setCombineDatasetFilters(payload) {\n    return function (dispatch, getState) {\n        dispatch(_setCombineDatasetFilters(payload));\n        dispatch(handleFilterUpdated());\n    };\n}\n\nexport function setChartSize(payload) {\n    return {type: SET_CHART_SIZE, payload: payload};\n}\n\n\nexport function setPrimaryChartSize(payload) {\n    return {type: SET_PRIMARY_CHART_SIZE, payload: payload};\n}\n\nexport function setPrimaryTraceKey(payload) {\n    return {type: SET_PRIMARY_TRACE_KEY, payload: payload};\n}\n\nfunction setGlobalFeatureSummary(payload) {\n    return {type: SET_GLOBAL_FEATURE_SUMMARY, payload: payload};\n}\n\nfunction setDatasetFilter(payload) {\n    return {type: SET_DATASET_FILTER, payload: payload};\n}\n\nfunction setSelection(payload) {\n    return {type: SET_SELECTION, payload: payload};\n}\n\nfunction setFeatureSummary(payload) {\n    return {type: SET_FEATURE_SUMMARY, payload: payload};\n}\n\n\nfunction handleFilterUpdated() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        // whenever filter is updated, we need to get selection statistics\n        const state = getState();\n\n        const searchTokens = splitSearchTokens(state.searchTokens);\n        let filter = getFilterJson(state);\n        addFeatureSetsToX(getFeatureSets(state.markers, searchTokens.featureSets), searchTokens.X);\n\n        let q = {\n            selection: {\n                measures: searchTokens.X.concat(searchTokens.obs.map(item => 'obs/' + item)),\n                dimensions: searchTokens.obsCat\n            }\n        };\n\n        if (filter) {\n            q.selection.filter = filter;\n        }\n        const isCurrentSelectionEmpty = state.selection.chart == null || Object.keys(state.selection.chart).length === 0;\n\n        if (filter == null) {\n            if (!isCurrentSelectionEmpty) {\n                dispatch(setSelection({chart: {}}));\n            }\n            dispatch(setSelectedDistributionData([]));\n            dispatch(setFeatureSummary({}));\n            dispatch(_setLoading(false));\n            return;\n        }\n        let selectedEmbeddings = state.embeddings;\n        q.selection.embeddings = selectedEmbeddings.map(e => {\n            return getEmbeddingJson(e);\n        });\n        const cachedData = state.cachedData;\n        getState().dataset.api.getDataPromise(q, cachedData).then(result => {\n            dispatch(handleSelectionResult(result.selection, true));\n        }).catch(err => {\n            handleError(dispatch, err);\n        }).finally(() => dispatch(_setLoading(false)));\n    };\n}\n\n\nexport function handleBrushFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        const name = payload.name; // full basis name\n        const value = payload.value;  // value has basis and points\n        const clear = payload.clear;\n        let datasetFilter = getState().datasetFilter;\n        if (value && isEmbeddingBinned(value.basis)) {\n            const bins = getState().cachedData[getEmbeddingKey(value.basis)].bins;\n            value.points = convertIndicesToBins(value.points, bins);\n        }\n        let update = true;\n        if (value == null) { // remove\n            update = datasetFilter[name] != null;\n            delete datasetFilter[name];\n        } else {\n            if (clear) {\n                datasetFilter[name] = {basis: value.basis, points: [value.points]};\n            } else {\n                const prior = datasetFilter[name];\n                if (prior != null) {\n                    datasetFilter[name].points.push(value.points);\n                } else {\n                    datasetFilter[name] = {basis: value.basis, points: [value.points]};\n                }\n            }\n        }\n        if (update) {\n            dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n            dispatch(handleFilterUpdated());\n        }\n    };\n}\n\n\nexport function handleMeasureFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        const name = payload.name;\n        const operation = payload.operation;\n        const value = payload.value;\n        let update = payload.update;\n\n        let datasetFilter = getState().datasetFilter;\n        let filter = datasetFilter[name];\n\n        if (filter == null) {\n            filter = {operation: '>', value: NaN};\n            datasetFilter[name] = filter;\n        }\n        if (update) {\n            if (value != null) {\n                update = (!isNaN(value) ? value !== filter.value : isNaN(value) !== isNaN(filter.value));\n            }\n            if (operation != null) {\n                update = update || (operation !== filter.operation && !isNaN(filter.value));\n            }\n        }\n        if (operation != null) {\n            filter.operation = operation;\n        }\n        if (value != null) {\n            filter.value = value;\n        }\n\n        dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n        if (update) {\n            dispatch(handleFilterUpdated());\n        }\n    };\n}\n\nexport function handleColorChange(payload) {\n    return {type: SET_CATEGORICAL_COLOR, payload: payload};\n}\n\nexport function handleDomainChange(payload) {\n    return {type: SET_DOMAIN, payload: payload};\n}\n\nfunction _handleCategoricalNameChange(payload) {\n    return {type: SET_CATEGORICAL_NAME, payload: payload};\n\n}\n\nexport function handleCategoricalNameChange(payload) {\n    return function (dispatch, getState) {\n        const dataset_id = getState().dataset.id;\n        const p = getState().serverInfo.fancy ? getState().serverInfo.api.setCategoryNamePromise({\n            c: payload.name,\n            o: payload.oldValue,\n            n: payload.value,\n            id: dataset_id\n        }) : Promise.resolve();\n        p.then(() => dispatch(_handleCategoricalNameChange(payload)));\n    };\n}\n\nexport function handleDimensionFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        let name = payload.name;\n        let value = payload.value;\n        let shiftKey = payload.shiftKey;\n        let metaKey = payload.metaKey;\n        let datasetFilter = getState().datasetFilter;\n        let embeddingData = getState().embeddingData;\n        let categories;\n        for (let i = 0; i < embeddingData.length; i++) {\n            if (embeddingData[i].name === name) {\n                categories = embeddingData[i].colorScale.domain();\n                break;\n            }\n        }\n        let selectedValues = datasetFilter[name];\n        if (selectedValues == null) {\n            selectedValues = [];\n            datasetFilter[name] = selectedValues;\n        }\n\n        if (shiftKey && selectedValues.length > 0) {\n            // add last click to current\n            let lastIndex = categories.indexOf(selectedValues[selectedValues.length - 1]);\n            let currentIndex = categories.indexOf(value);\n            // put clicked category at end of array\n            if (currentIndex > lastIndex) {\n                for (let i = lastIndex; i <= currentIndex; i++) {\n                    let index = selectedValues.indexOf(value);\n                    if (index !== -1) {\n                        selectedValues.splice(index, 1);\n                    }\n                    selectedValues.push(categories[i]);\n                }\n            } else {\n                for (let i = lastIndex; i >= currentIndex; i--) {\n                    let index = selectedValues.indexOf(value);\n                    if (index !== -1) {\n                        selectedValues.splice(index, 1);\n                    }\n                    selectedValues.push(categories[i]);\n                }\n            }\n        } else {\n            let selectedIndex = selectedValues.indexOf(value);\n            if (!metaKey) { // clear and toggle current\n                selectedValues = [];\n                datasetFilter[name] = selectedValues;\n            }\n            if (selectedIndex !== -1) { // exists, remove\n                selectedValues.splice(selectedIndex, 1);\n                if (selectedValues.length === 0) {\n                    delete datasetFilter[name];\n                }\n            } else {\n                selectedValues.push(value);\n            }\n        }\n        dispatch(setDatasetFilter(datasetFilter));\n        dispatch(handleFilterUpdated());\n    };\n}\n\n\nexport function restoreView(payload) {\n    return {type: RESTORE_VIEW, payload: payload};\n}\n\n\nexport function setPointSize(payload) {\n    return {type: SET_POINT_SIZE, payload: payload};\n}\n\nexport function setMarkerSize(payload) {\n    return {type: SET_MARKER_SIZE, payload: payload};\n}\n\n\nexport function setUser(payload) {\n    return {type: SET_USER, payload: payload};\n}\n\n\nexport function setServerInfo(payload) {\n    return {type: SET_SERVER_INFO, payload: payload};\n}\n\nfunction loadDefaultDatasetEmbedding() {\n    return function (dispatch, getState) {\n        const dataset = getState().dataset;\n        const embeddingNames = dataset.embeddings.map(e => e.name);\n        let names = ['tissue_hires', 'fle', 'umap', 'tsne'];\n        let embeddingNames2Priority = {};\n        embeddingNames.forEach(name => {\n            const nameLower = name.toLowerCase();\n            for (let i = 0; i < names.length; i++) {\n                if (nameLower.indexOf(names[i]) !== -1) {\n                    embeddingNames2Priority[name] = i;\n                    break;\n                }\n            }\n        });\n        embeddingNames.sort((a, b) => {\n            a = embeddingNames2Priority[a] || Number.MAX_VALUE;\n            b = embeddingNames2Priority[b] || Number.MAX_VALUE;\n            return a - b;\n        });\n\n        if (embeddingNames.length > 0) {\n            dispatch(setSelectedEmbedding([dataset.embeddings[dataset.embeddings.map(e => e.name).indexOf(embeddingNames[0])]]));\n        }\n    };\n}\n\nfunction loadDefaultDataset() {\n    return function (dispatch, getState) {\n        if (getState().dataset == null && getState().datasetChoices.length === 1) {\n            dispatch(setDataset(getState().datasetChoices[0].id));\n        }\n    };\n}\n\nfunction restoreSavedView(savedView) {\n    return function (dispatch, getState) {\n        if (savedView.colorScheme != null) {\n            let interpolator = getInterpolator(savedView.colorScheme);\n            if (interpolator != null) {\n                savedView.colorScheme = {\n                    name: savedView.colorScheme,\n                    value: interpolator,\n                };\n            }\n        }\n\n        if (savedView.datasetFilter != null) {\n            for (let key in savedView.datasetFilter) {\n                let value = savedView.datasetFilter[key];\n                if (!window.Array.isArray(value)) {\n                    value.uiValue = value.value;\n                }\n            }\n        } else {\n            savedView.datasetFilter = {};\n        }\n\n        dispatch(_setLoading(true));\n        let datasetPromise;\n        if (savedView.dataset != null) {\n            datasetPromise = dispatch(setDataset(savedView.dataset, false, false));\n        } else {\n            datasetPromise = Promise.resolve();\n        }\n        datasetPromise\n            .then(() => {\n                let dataset = getState().dataset;\n                if (savedView.embeddings) {\n                    let names = dataset.embeddings.map(e => getEmbeddingKey(e));\n                    let embeddings = [];\n                    savedView.embeddings.forEach(embedding => {\n                        let index = names.indexOf(getEmbeddingKey(embedding));\n                        if (index !== -1) {\n                            embeddings.push(dataset.embeddings[index]);\n                        }\n                    });\n                    savedView.embeddings = embeddings;\n                    if (savedView.camera != null) {\n                        savedView.chartOptions.camera = savedView.camera;\n                    }\n                }\n            })\n            .then(() => dispatch(setDatasetFilter(savedView.datasetFilter)))\n            .then(() => dispatch(restoreView(savedView)))\n            .then(() => dispatch(_updateCharts()))\n            .then(() => dispatch(handleFilterUpdated()))\n            .then(() => {\n                if (savedView.distributionPlotOptions != null) {\n                    dispatch(setDistributionPlotOptions(savedView.distributionPlotOptions));\n                }\n                let primaryTraceKey = savedView.primaryTraceKey;\n                if (primaryTraceKey == null && savedView.embeddings && savedView.embeddings.length > 0 && savedView.q != null && savedView.q.length > 0) {\n                    primaryTraceKey = savedView.q[0] + '_' + getEmbeddingKey(savedView.embeddings[0]);\n                }\n                if (primaryTraceKey != null) {\n                    dispatch(setPrimaryTraceKey(primaryTraceKey));\n                }\n            })\n            .finally(() => dispatch(_setLoading(false)))\n            .catch(err => {\n                console.log(err);\n                dispatch(setMessage('Unable to restore saved view.'));\n                dispatch(loadDefaultDataset());\n            });\n    };\n}\n\nfunction _loadSavedView() {\n    return function (dispatch, getState) {\n        let savedView = {dataset: null};\n        let q = window.location.search.substring(3);\n        if (q.length > 0) {\n            try {\n                savedView = JSON.parse(window.decodeURIComponent(q));\n            } catch (err) {\n                return dispatch(setMessage('Unable to restore saved view.'));\n            }\n        }\n\n        if (savedView.dataset != null) {\n            dispatch(restoreSavedView(savedView));\n        } else {\n            dispatch(loadDefaultDataset());\n        }\n    };\n}\n\nexport function initLogin(loadSavedView) {\n    return function (dispatch, getState) {\n        let isSignedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n        if (isSignedIn) {\n            let googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n            let email = googleUser.getBasicProfile().getEmail();\n            dispatch(_setEmail(email));\n            dispatch(getUser());\n            dispatch(listDatasets()).then(() => {\n                if (loadSavedView) {\n                    dispatch(_loadSavedView());\n                }\n            });\n\n        }\n    };\n}\n\nexport function getAccessToken() {\n    return window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n}\n\nexport function getIdToken() {\n    return typeof window.gapi !== 'undefined' ? window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token : '';\n}\n\nexport function saveDataset(payload) {\n    return function (dispatch, getState) {\n\n        const name = payload.name;\n        const url = payload.url;\n\n        if (name === '' || url === '') {\n            return;\n        }\n        const readers = payload.readers;\n        const description = payload.description;\n        const title = payload.title;\n        // let bucket = url.substring('gs://'.length);\n        // let slash = bucket.indexOf('/');\n        // let object = encodeURIComponent(bucket.substring(slash + 1));\n        // bucket = encodeURIComponent(bucket.substring(0, slash));\n\n        dispatch(_setLoading(true));\n        const isEdit = payload.dataset != null;\n        const serverInfo = getState().serverInfo;\n        const updatePermissions = !isEdit || url !== payload.dataset.url;\n        // if (updatePermissions) {\n\n        // updateDatasetPermissionPromise = fetch(\n        //     'https://www.googleapis.com/storage/v1/b/' + bucket + '/o/' + object,\n        //     {\n        //         body: JSON.stringify({\n        //             'acl': [{\n        //                 'entity': 'user-' + serverEmail,\n        //                 'role': 'READER'\n        //             }]\n        //         }),\n        //         method: 'PATCH',\n        //         headers: {'Authorization': 'Bearer ' + getAccessToken(), 'Content-Type': 'application/json'},\n        //     });\n\n        // } else {\n        let updateDatasetPermissionPromise = Promise.resolve({ok: true});\n\n        // }\n        updateDatasetPermissionPromise.then(permissionsResponse => {\n\n            // if (!permissionsResponse.ok) {\n            //     dispatch(setMessage('Unable to set dataset read permissions. Please ensure that you are the dataset owner or manually add ' + serverEmail + ' as a reader.'));\n            // }\n        }).then(() => getState().serverInfo.api.upsertDatasetPromise(payload.dataset ? payload.dataset.id : null,\n            {\n                name: name,\n                readers: readers,\n                description: description,\n                title: title,\n                url: url\n            })).then(importDatasetResult => {\n            const dsUpdate = {\n                name: name,\n                id: importDatasetResult.id,\n                title: title,\n                url: url,\n                readers: readers,\n                description: description,\n                owner: true\n            };\n            if (isEdit) {\n                dispatch(updateDataset(dsUpdate));\n                dispatch(setMessage('Dataset updated'));\n            } else {\n                dispatch(_addDataset(dsUpdate));\n                if (serverInfo.email) {\n                    dispatch(setMessage(updatePermissions ? 'Please ensure that ' + serverInfo.email + ' is a \"Storage Object Viewer\"' : 'Dataset created'));\n                }\n            }\n\n        }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\nexport function deleteDataset(payload) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteDatasetPromise(payload.dataset.id).then(() => {\n            dispatch(_setDataset(null));\n            dispatch(_deleteDataset({id: payload.dataset.id}));\n            dispatch(setDialog(null));\n\n            dispatch(setMessage('Dataset deleted'));\n        }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete dataset. Please try again.');\n        });\n    };\n}\n\nfunction _addDataset(payload) {\n    return {type: ADD_DATASET, payload: payload};\n}\n\nfunction _deleteDataset(payload) {\n    return {type: DELETE_DATASET, payload: payload};\n}\n\nexport function updateDataset(payload) {\n    return {type: UPDATE_DATASET, payload: payload};\n}\n\nexport function setMessage(payload) {\n    return {type: SET_MESSAGE, payload: payload};\n}\n\nexport function setInterpolator(payload) {\n    return {type: SET_INTERPOLATOR, payload: payload};\n}\n\nexport function setDistributionPlotInterpolator(payload) {\n    return {type: SET_DISTRIBUTION_PLOT_INTERPOLATOR, payload: payload};\n}\n\nexport function setEmbeddingData(payload) {\n    return {type: SET_EMBEDDING_DATA, payload: payload};\n}\n\nexport function setDialog(payload) {\n    return {type: SET_DIALOG, payload: payload};\n}\n\nexport function setMarkers(payload) {\n    return {type: SET_MARKERS, payload: payload};\n}\n\nfunction _setDatasetChoices(payload) {\n    return {type: SET_DATASET_CHOICES, payload: payload};\n}\n\nfunction _setLoading(payload) {\n    return {type: SET_LOADING, payload: payload};\n}\n\nexport function setTab(payload) {\n    return {type: SET_TAB, payload: payload};\n}\n\nfunction _setLoadingApp(payload) {\n    return {type: SET_LOADING_APP, payload: payload};\n}\n\nfunction _setDataset(payload) {\n    return {type: SET_DATASET, payload: payload};\n}\n\n\nexport function setMarkerOpacity(payload) {\n    return {type: SET_MARKER_OPACITY, payload: payload};\n}\n\nexport function setUnselectedMarkerOpacity(payload) {\n    return {type: SET_UNSELECTED_MARKER_OPACITY, payload: payload};\n}\n\nexport function toggleEmbeddingLabel(payload) {\n    return function (dispatch, getState) {\n        let embeddingLabels = getState().embeddingLabels;\n        const index = embeddingLabels.indexOf(payload);\n        if (index === -1) {\n            embeddingLabels.push(payload);\n        } else {\n            embeddingLabels.splice(index, 1);\n        }\n        return dispatch({type: SET_EMBEDDING_LABELS, payload: embeddingLabels.slice()});\n    };\n\n}\n\nfunction setDistributionData(payload) {\n    return {type: SET_DISTRIBUTION_DATA, payload: payload};\n}\n\nfunction setSelectedDistributionData(payload) {\n    return {type: SET_SELECTED_DISTRIBUTION_DATA, payload: payload};\n}\n\n\nfunction _setEmail(payload) {\n    return {type: SET_EMAIL, payload: payload};\n}\n\n\n/**\n *\n * @param value\n * @param type one of X, obs, featureSet\n */\nexport function setSearchTokens(value, type) {\n    return function (dispatch, getState) {\n        const state = getState();\n        let searchTokens = state.searchTokens;\n        // keep all other types\n        let removeType = [type];\n        if (type === OBS_SEARCH_TOKEN) {\n            removeType.push(OBS_CAT_SEARCH_TOKEN);\n        }\n        searchTokens = searchTokens.filter(item => removeType.indexOf(item.type) === -1);\n        if (type === OBS_SEARCH_TOKEN) {\n            const obsCat = state.dataset.obsCat;\n            value.forEach(val => {\n                const type = obsCat.indexOf(val) !== -1 ? OBS_CAT_SEARCH_TOKEN : OBS_SEARCH_TOKEN;\n                searchTokens.push({value: val, type: type});\n            });\n        } else {\n            searchTokens = searchTokens.concat(value.map(item => {\n                return {value: item, type: type};\n            }));\n        }\n        dispatch({type: SET_SEARCH_TOKENS, payload: searchTokens.slice()});\n        dispatch(_updateCharts());\n    };\n}\n\n\nexport function setSelectedEmbedding(payload) {\n    return function (dispatch, getState) {\n        let prior = getState().embeddings;\n        dispatch({type: SET_SELECTED_EMBEDDING, payload: payload});\n        dispatch(_updateCharts(err => {\n            dispatch({type: SET_SELECTED_EMBEDDING, payload: prior});\n        }));\n    };\n}\n\n\nexport function setNumberOfBins(payload) {\n    return function (dispatch, getState) {\n        if (getState().numberOfBins !== payload) {\n            dispatch({type: SET_NUMBER_OF_BINS, payload: payload});\n        }\n    };\n}\n\nexport function setBinSummary(payload) {\n    return function (dispatch, getState) {\n        dispatch({type: SET_BIN_SUMMARY, payload: payload});\n\n    };\n}\n\nexport function setBinValues(payload) {\n    return {type: SET_BIN_VALUES, payload: payload};\n}\n\n\nexport function setSavedDatasetState(payload) {\n    return {type: SET_SAVED_DATASET_STATE, payload: payload};\n}\n\nfunction setDatasetFilters(payload) {\n    return {type: SET_DATASET_FILTERS, payload: payload};\n}\n\n\nexport function setDataset(id, loadDefaultView = true, setLoading = true) {\n    return function (dispatch, getState) {\n        if (setLoading) {\n            dispatch(_setLoading(true));\n        }\n        let savedDatasetState = getState().savedDatasetState[id];\n        const datasetChoices = getState().datasetChoices;\n        let selectedChoice = null; // has id, owner, name\n        for (let i = 0; i < datasetChoices.length; i++) {\n            if (datasetChoices[i].id === id) {\n                selectedChoice = datasetChoices[i];\n                break;\n            }\n        }\n        if (selectedChoice == null) {\n            dispatch(_setLoading(false));\n            dispatch(setMessage('Unable to find dataset'));\n            return Promise.reject('Unable to find dataset');\n        }\n        // force re-render selected dataset dropdown\n        let dataset = Object.assign({}, selectedChoice);\n        dataset.id = id;\n        dataset.embeddings = [];\n        dataset.features = [];\n        dataset.obs = [];\n        dataset.obsCat = [];\n        dispatch(_setDataset(dataset));\n        let categoryNameResults;\n        let datasetFilters = [];\n        let newDataset;\n\n        function onPromisesComplete() {\n            newDataset = Object.assign({}, dataset, newDataset);\n            if (newDataset.embeddings) {\n                for (let i = 0; i < newDataset.embeddings.length; i++) {\n                    if (newDataset.embeddings[i].nbins != null) {\n                        newDataset.embeddings[i].bin = true;\n                        newDataset.embeddings[i].precomputed = true;\n                    } else { // set default values\n                        newDataset.embeddings[i].nbins = 500;\n                        newDataset.embeddings[i]._nbins = 500;\n                        newDataset.embeddings[i].bin = false;\n                        newDataset.embeddings[i].agg = 'max';\n                    }\n                }\n            }\n            newDataset.api = dataset.api;\n            newDataset.features = newDataset.var;\n            newDataset.features.sort((a, b) => {\n                a = a.toLowerCase();\n                b = b.toLowerCase();\n                const aIsDigit = a[0] >= '0' && a[0] <= '9';\n                const bIsDigit = b[0] >= '0' && b[0] <= '9';\n                if (aIsDigit) {\n                    a = 'zzzzzz' + a;\n                }\n                if (bIsDigit) {\n                    b = 'zzzzzz' + b;\n                }\n                // put features that start with a number last\n                return (a < b ? -1 : (a === b ? 0 : 1));\n            });\n            newDataset.id = id;\n            dispatch(_setDataset(newDataset));\n\n            if (categoryNameResults != null) {\n                categoryNameResults.forEach(result => {\n                    dispatch(_handleCategoricalNameChange({\n                        name: result.category,\n                        oldValue: result.original,\n                        value: result.new\n                    }));\n                });\n            }\n            dispatch(setDatasetFilters(datasetFilters));\n            if (savedDatasetState) {\n                dispatch(restoreSavedView(savedDatasetState));\n            } else if (loadDefaultView) {\n                dispatch(loadDefaultDatasetEmbedding());\n            }\n        }\n\n        const isDirectAccess = dataset.access === 'direct';\n        if (isDirectAccess) {\n            dataset.api = new DirectAccessDataset();\n        } else {\n            dataset.api = new RestDataset();\n        }\n        const initPromise = dataset.api.init(id, dataset.url);\n\n        return initPromise.then(() => {\n            let promises = [];\n            if (!isDirectAccess) {\n                const categoriesRenamePromise = getState().serverInfo.api.getCategoryNamesPromise(dataset.id).then(results => {\n                    categoryNameResults = results;\n                });\n\n                const filtersPromise = getState().serverInfo.api.getFiltersPromise(dataset.id).then(results => {\n                    datasetFilters = results;\n                });\n                promises.push(categoriesRenamePromise);\n                promises.push(filtersPromise);\n            }\n            const schemaPromise = dataset.api.getSchemaPromise().then(result => {\n                newDataset = result;\n            });\n            promises.push(schemaPromise);\n            return promises;\n        }).then(promises => Promise.all(promises)).then(() => onPromisesComplete()).finally(() => {\n            if (setLoading) {\n                dispatch(_setLoading(false));\n            }\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve dataset. Please try again.');\n        });\n\n    };\n}\n\n\nfunction handleSelectionResult(selectionResult, clear) {\n    return function (dispatch, getState) {\n        const state = getState();\n        if (selectionResult) {\n            const coordinates = selectionResult.coordinates;\n            if (coordinates != null) {\n                let chartSelection = {};\n                for (let key in coordinates) {\n                    const selectedIndicesOrBins = coordinates[key].indices_or_bins;\n                    const embedding = state.embeddings[state.embeddings.map(e => getEmbeddingKey(e)).indexOf(key)];\n                    if (embedding == null) {\n                        console.log(key + ' missing');\n                        continue;\n                    }\n                    let selectedPoints = selectedIndicesOrBins;\n                    if (isEmbeddingBinned(embedding)) {\n                        const coords = state.cachedData[getEmbeddingKey(embedding)];\n                        const bins = coords.bins;\n                        selectedPoints = convertBinsToIndices(bins, selectedIndicesOrBins);\n                    }\n\n                    chartSelection[key] = {\n                        userPoints: new Set(selectedPoints),\n                        points: selectedIndicesOrBins\n                    };\n                }\n                dispatch(setSelection({\n                    count: selectionResult.count,\n                    chart: chartSelection\n                }));\n            } else {\n                const isCurrentSelectionEmpty = state.selection.chart == null || Object.keys(state.selection.chart).length === 0;\n                if (clear && !isCurrentSelectionEmpty) {\n                    dispatch(setSelection({count: selectionResult.count, chart: {}}));\n                }\n            }\n\n            // userPoints are in chart space, points are in server space, count is total number of cells selected\n            if (selectionResult.summary) {\n                // merge or clear selection\n                let selectionSummary = clear ? selectionResult.summary : Object.assign(getState().featureSummary, selectionResult.summary);\n                dispatch(setFeatureSummary(Object.assign({}, selectionSummary)));\n            }\n            if (selectionResult.distribution) {\n                let selectedDistributionData = state.selectedDistributionData;\n                if (clear) {\n                    selectedDistributionData = [];\n                }\n                const searchTokens = splitSearchTokens(state.searchTokens);\n                addFeatureSetsToX(getFeatureSets(state.markers, searchTokens.featureSets), searchTokens.X);\n                selectedDistributionData = updateDistributionData(selectionResult.distribution, selectedDistributionData, searchTokens);\n                dispatch(setSelectedDistributionData(selectedDistributionData));\n            }\n        }\n    };\n}\n\nfunction updateDistributionData(newDistributionData, distributionData, searchTokens) {\n    let dimensionKeys = [searchTokens.obsCat.join('-')];\n    // keep active dimensions and features only\n    distributionData = distributionData.filter(entry => dimensionKeys.indexOf(entry.dimension) !== -1 && searchTokens.X.indexOf(entry.feature) !== -1);\n\n    if (newDistributionData) {\n        // remove old data that is also in new data\n        newDistributionData.forEach(entry => {\n            for (let i = 0; i < distributionData.length; i++) {\n                if (distributionData[i].dimension === entry.dimension && distributionData[i].feature === entry.feature) {\n                    distributionData.splice(i, 1);\n                    break;\n                }\n            }\n        });\n        distributionData = distributionData.concat(newDistributionData);\n    }\n\n    // sort features matching X entry order\n    let featureSortOrder = {};\n    searchTokens.X.forEach((name, index) => {\n        featureSortOrder[name] = index;\n    });\n    distributionData.sort((a, b) => {\n        a = featureSortOrder[a.feature];\n        b = featureSortOrder[b.feature];\n        return a - b;\n    });\n    return distributionData;\n}\n\nfunction _updateCharts(onError) {\n    return function (dispatch, getState) {\n        const state = getState();\n        if (state.dataset == null) {\n            return;\n        }\n        dispatch(_setLoading(true));\n\n        const searchTokens = splitSearchTokens(state.searchTokens);\n        addFeatureSetsToX(getFeatureSets(state.markers, searchTokens.featureSets), searchTokens.X);\n        let distribution = (searchTokens.X.length > 0 || searchTokens.featureSets.length > 0) && searchTokens.obsCat.length > 0;\n        const embeddings = state.embeddings;\n        let distributionData = state.distributionData;\n        let selectedDistributionData = state.selectedDistributionData;\n        let embeddingData = state.embeddingData;\n        const globalFeatureSummary = state.globalFeatureSummary;\n        const cachedData = state.cachedData;\n        const embeddingCoordinatesToFetch = [];\n        const valuesToFetch = new Set();\n        const binnedEmbeddingValuesToFetch = [];\n        const embeddingKeys = new Set();\n        const features = new Set();\n        const filterJson = getFilterJson(state);\n        searchTokens.X.concat(searchTokens.obs).concat(searchTokens.obsCat).concat(searchTokens.metafeatures).forEach(feature => {\n            features.add(feature);\n        });\n        const embeddingImagesToFetch = [];\n        embeddings.forEach(selectedEmbedding => {\n            const embeddingKey = getEmbeddingKey(selectedEmbedding);\n            embeddingKeys.add(embeddingKey);\n\n            if (cachedData[embeddingKey] == null) {\n                if (selectedEmbedding.dimensions > 0) {\n                    embeddingCoordinatesToFetch.push(selectedEmbedding);\n                } else {\n                    if (cachedData[selectedEmbedding.attrs.group] == null) {\n                        valuesToFetch.add(selectedEmbedding.attrs.group);\n                    }\n\n                    selectedEmbedding.attrs.selection.forEach(selection => {\n                        if (cachedData[selection[0]] == null) {\n                            valuesToFetch.add(selection[0]);\n                        }\n                    });\n                    embeddingImagesToFetch.push(selectedEmbedding);\n                }\n            }\n\n            if (isEmbeddingBinned(selectedEmbedding)) {\n                const data = {values: [], embedding: selectedEmbedding};\n                features.forEach(feature => {\n                    let key = feature + '_' + embeddingKey;\n                    if (cachedData[key] == null) {\n                        data.values.push(feature);\n                    }\n                });\n                if (data.values.length > 0) {\n                    binnedEmbeddingValuesToFetch.push(data);\n                }\n            }\n        });\n        const promises = [];\n        embeddingImagesToFetch.forEach(embedding => {\n            const embeddingKey = getEmbeddingKey(embedding);\n            if (cachedData[embeddingKey] == null) {\n                const url = state.dataset.api.getFileUrl(embedding.image);\n                const imagePromise = new Promise((resolve, reject) => {\n                    fetch(url).then(result => result.text()).then(text => document.createRange().createContextualFragment(text).firstElementChild).then(node => {\n                        // inline css\n                        if (node.querySelector('style')) {\n                            const div = document.createElement('div');\n                            div.style.display = 'none';\n                            div.appendChild(node);\n                            document.body.appendChild(div);\n                            const style = node.querySelector('style');\n                            const rules = style.sheet.rules;\n\n                            for (let i = 0; i < rules.length; i++) {\n                                const rule = rules[i];\n                                const matches = node.querySelectorAll(rule.selectorText);\n                                const styleMap = rule.styleMap;\n                                for (let j = 0; j < matches.length; j++) {\n                                    const child = matches[j];\n                                    for (let key of styleMap.keys()) {\n                                        child.style[key] = styleMap.get(key).toString();\n                                    }\n                                }\n                            }\n                            div.remove();\n                            style.remove();\n                        }\n                        cachedData[embeddingKey] = node;\n                        resolve();\n                    });\n                });\n                promises.push(imagePromise);\n            }\n\n        });\n        if (filterJson != null) {\n            let filterDependencies = getDatasetFilterDependencies(state.datasetFilter);\n            filterDependencies.features.forEach(feature => {\n                if (cachedData[feature] == null) {\n                    valuesToFetch.add(feature);\n                }\n            });\n        }\n        features.forEach(feature => {\n            if (cachedData[feature] == null) {\n                valuesToFetch.add(feature);\n            }\n        });\n        // set active flag on cached embedding data\n        embeddingData.forEach(traceInfo => {\n            const embeddingKey = getEmbeddingKey(traceInfo.embedding);\n            const active = embeddingKeys.has(embeddingKey) && (features.has(traceInfo.name) || (features.size === 0 && traceInfo.name === '__count'));\n            if (active) {\n                traceInfo.date = new Date();\n            }\n            traceInfo.active = active;\n        });\n\n        let distributionCategories = searchTokens.obsCat.slice();\n        let distributionCategoryKeys = [distributionCategories.join('-')];\n        let distributionMeasuresToFetch = new Set();\n        if (distribution) {\n            let cachedDistributionKeys = {}; // category-feature\n            distributionData.forEach(distributionDataItem => {\n                cachedDistributionKeys[distributionDataItem.name + '-' + distributionDataItem.feature] = true;\n            });\n            distributionCategoryKeys.forEach(category => {\n                searchTokens.X.forEach(feature => {\n                    let key = category + '-' + feature;\n                    if (cachedDistributionKeys[key] == null) {\n                        distributionMeasuresToFetch.add(feature);\n                    }\n                });\n            });\n        }\n        let q = {};\n        if (embeddingCoordinatesToFetch.length > 0 || binnedEmbeddingValuesToFetch.length > 0) {\n            q.embedding = [];\n\n            const embeddingCoordinatesToFetchKeys = embeddingCoordinatesToFetch.map(e => getEmbeddingKey(e));\n            binnedEmbeddingValuesToFetch.forEach(datum => {\n                const embeddingJson = getEmbeddingJson(datum.embedding);\n                embeddingJson.dimensions = [];\n                embeddingJson.measures = [];\n                embeddingJson.coords = embeddingCoordinatesToFetchKeys.indexOf(getEmbeddingKey(datum.embedding)) !== -1;\n                q.embedding.push(embeddingJson);\n                datum.values.forEach(value => {\n                    if (searchTokens.obsCat.indexOf(value) !== -1) {\n                        embeddingJson.dimensions.push(value);\n                    } else if (searchTokens.obs.indexOf(value) !== -1) {\n                        embeddingJson.measures.push('obs/' + value);\n                    } else {\n                        embeddingJson.measures.push(value);\n                    }\n                });\n            });\n            const binnedEmbeddingValuesToFetchKeys = binnedEmbeddingValuesToFetch.map(e => getEmbeddingKey(e.embedding));\n            embeddingCoordinatesToFetch.forEach(embedding => {\n                if (binnedEmbeddingValuesToFetchKeys.indexOf(getEmbeddingKey(embedding)) === -1) {\n                    const embeddingJson = getEmbeddingJson(embedding);\n                    embeddingJson.coords = true;\n                    q.embedding.push(embeddingJson);\n                }\n            });\n        }\n        if (valuesToFetch.size > 0) {\n            const dataset = state.dataset;\n            q.values = {measures: [], dimensions: []};\n            valuesToFetch.forEach(value => {\n                if (dataset.obsCat.indexOf(value) !== -1) {\n                    q.values.dimensions.push(value);\n                } else if (dataset.obs.indexOf(value) !== -1) {\n                    q.values.measures.push('obs/' + value);\n                } else if (searchTokens.metafeatures.indexOf(value) !== -1) {\n                    q.values.measures.push('metagenes/' + value);\n                } else {\n                    q.values.measures.push(value);\n                }\n            });\n        }\n\n        let globalFeatureSummaryXCacheMiss = [];\n        let globalFeatureSummaryObsContinuousCacheMiss = [];\n        let globalFeatureSummaryDimensionsCacheMiss = [];\n        searchTokens.X.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryXCacheMiss.push(feature);\n            }\n        });\n        searchTokens.obs.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryObsContinuousCacheMiss.push('obs/' + feature);\n            }\n        });\n        searchTokens.obsCat.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryDimensionsCacheMiss.push(feature);\n            }\n        });\n\n\n        if (globalFeatureSummaryXCacheMiss.length > 0 || globalFeatureSummaryObsContinuousCacheMiss.length > 0 || globalFeatureSummaryDimensionsCacheMiss.length > 0) {\n            q.stats = {\n                measures: globalFeatureSummaryXCacheMiss.concat(globalFeatureSummaryObsContinuousCacheMiss),\n                dimensions: globalFeatureSummaryDimensionsCacheMiss\n            };\n        }\n\n        if (distributionCategories.length > 0 && distributionMeasuresToFetch.size > 0) {\n            q.groupedStats = {\n                measures: Array.from(distributionMeasuresToFetch),\n                dimensions: [distributionCategories]\n            };\n        }\n\n\n        // TODO update selection in new embedding space\n        if (filterJson != null && (globalFeatureSummaryXCacheMiss.length > 0 || globalFeatureSummaryDimensionsCacheMiss.length > 0)) {\n            q.selection = {\n                filter: filterJson,\n                measures: globalFeatureSummaryDimensionsCacheMiss.length > 0 ? searchTokens.X : globalFeatureSummaryXCacheMiss,\n                dimensions: searchTokens.obsCat\n            };\n        }\n\n        let dataPromise = Object.keys(q).length > 0 ? state.dataset.api.getDataPromise(q, cachedData) : Promise.resolve({});\n        const allPromises = [dataPromise].concat(promises);\n        return Promise.all(allPromises).then(values => {\n            const result = values[0];\n            const newSummary = result.summary || {};\n            for (let key in newSummary) {\n                globalFeatureSummary[key] = newSummary[key];\n            }\n            dispatch(setGlobalFeatureSummary(globalFeatureSummary));\n            updateEmbeddingData(state, features);\n            dispatch(setDistributionData(updateDistributionData(result.distribution, distributionData, searchTokens)));\n            // if (state.chartOptions.activeEmbedding != null) { // when restoring view - put last so that it becomes active\n            //     let index = -1;\n            //     for (let i = 0; i < embeddingData.length; i++) {\n            //         if (state.chartOptions.activeEmbedding === getTraceKey(embeddingData[i])) {\n            //             index = i;\n            //             break;\n            //         }\n            //     }\n            //     if (index !== -1) {\n            //         let activeTrace = embeddingData[index];\n            //         embeddingData.splice(index, 1);\n            //         embeddingData.push(activeTrace);\n            //     }\n            //     state.chartOptions.activeEmbedding = null;\n            // }\n            dispatch(setEmbeddingData(embeddingData.slice()));\n            if (result.selection) {\n                dispatch(handleSelectionResult(result.selection));\n            } else { // clear selection\n                dispatch(setSelectedDistributionData(updateDistributionData(null, selectedDistributionData, searchTokens)));\n            }\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve data. Please try again.');\n            if (onError) {\n                onError(err);\n            }\n        });\n    };\n\n}\n\n// depends on global feature summary\nfunction updateEmbeddingData(state, features) {\n    const embeddings = state.embeddings;\n    let embeddingData = state.embeddingData;\n    const obsCat = state.dataset.obsCat;\n    const globalFeatureSummary = state.globalFeatureSummary;\n    const interpolator = state.interpolator;\n    const dataset = state.dataset;\n    const cachedData = state.cachedData;\n    const existingFeaturePlusEmbeddingKeys = new Set();\n    embeddingData.forEach(embeddingDatum => {\n        const embeddingKey = getEmbeddingKey(embeddingDatum.embedding);\n        const key = embeddingDatum.name + '_' + embeddingKey;\n        existingFeaturePlusEmbeddingKeys.add(key);\n    });\n    if (features.size === 0) {\n        features.add('__count');\n    }\n    embeddings.forEach(embedding => {\n        const embeddingKey = getEmbeddingKey(embedding);\n        const isBinned = isEmbeddingBinned(embedding);\n        // type can be image, scatter, or meta_image\n        const traceType = embedding.spatial != null ? embedding.spatial.type : (embedding.type ? embedding.type : 'scatter');\n        const coordinates = traceType !== 'meta_image' ? cachedData[embeddingKey] : null;\n        const x = traceType !== 'meta_image' ? coordinates[embedding.name + '_1'] : null;\n        const y = traceType !== 'meta_image' ? coordinates[embedding.name + '_2'] : null;\n        const z = traceType !== 'meta_image' ? coordinates[embedding.name + '_3'] : null;\n        const bins = isBinned ? coordinates.bins : null;\n        features.forEach(feature => {\n            const featurePlusEmbeddingKey = feature + '_' + embeddingKey;\n            let featureKey = feature;\n            if (!existingFeaturePlusEmbeddingKeys.has(featurePlusEmbeddingKey)) {\n\n                if (isBinned) {\n                    featureKey = featurePlusEmbeddingKey;\n                }\n                let traceSummary = globalFeatureSummary[feature];\n                let values = cachedData[featureKey];\n                if (values == null && feature === '__count' && !isBinned) {\n                    values = new Int8Array(dataset.shape[0]);\n                    values.fill(1);\n                }\n                let purity = null;\n\n                if (values.value !== undefined) {\n                    purity = values.purity;\n                    values = values.value;\n                }\n\n                let isCategorical = feature !== '__count' && obsCat.indexOf(feature) !== -1;\n                let colorScale = null;\n\n                if (!isCategorical) {\n                    // __count range is per embedding so we always recompute for now\n                    if (isPlainObject(values)) {\n                        let newValues = new Float32Array(dataset.shape[0]);\n                        for (let i = 0, n = values.index.length; i < n; i++) {\n                            newValues[values.index[i]] = values.values[i];\n                        }\n                        values = newValues;\n                    }\n                    if (traceSummary == null || feature === '__count') {\n\n                        let min = Number.MAX_VALUE;\n                        let max = -Number.MAX_VALUE;\n                        let sum = 0;\n                        for (let i = 0, n = values.length; i < n; i++) {\n                            let value = values[i];\n                            min = value < min ? value : min;\n                            max = value > max ? value : max;\n                            sum += value;\n                        }\n                        traceSummary = {min: min, max: max, mean: sum / values.length};\n                        globalFeatureSummary[feature] = traceSummary;\n                    }\n                    let domain = [traceSummary.min, traceSummary.max];\n                    if (traceSummary.customMin != null && !isNaN(traceSummary.customMin)) {\n                        domain[0] = traceSummary.customMin;\n                    }\n                    if (traceSummary.customMax != null && !isNaN(traceSummary.customMax)) {\n                        domain[1] = traceSummary.customMax;\n                    }\n                    colorScale = scaleSequential(interpolator.value).domain(domain);\n\n                } else {\n                    let traceUniqueValues = traceSummary.categories;\n                    // if (traceUniqueValues.length === 1 && traceUniqueValues[0] === true) {\n                    //     traceUniqueValues = traceUniqueValues.concat([null]);\n                    //     traceSummary.categories = traceUniqueValues;\n                    //     traceSummary.counts = traceSummary.counts.concat([state.dataset.shape[0] - traceSummary.counts[0]]);\n                    // }\n\n                    let colors = dataset.colors ? dataset.colors[feature] : null;\n                    if (colors != null && colors.length !== traceUniqueValues.length) {\n                        colors = null;\n                    }\n                    if (colors == null) {\n                        if (traceUniqueValues.length <= 10) {\n                            colors = schemeCategory10;\n                        } else if (traceUniqueValues.length <= 12) {\n                            colors = schemePaired;\n                        } else if (traceUniqueValues.length <= 20) {\n                            colors = CATEGORY_20B;\n                        } else {\n                            colors = CATEGORY_20B.concat(CATEGORY_20C);\n                        }\n                    }\n\n                    colorScale = scaleOrdinal(colors).domain(traceUniqueValues);\n                    colorScale.summary = traceSummary;\n                }\n\n\n                let chartData = {\n                    embedding: Object.assign({}, embedding),\n                    name: feature,\n                    x: x,\n                    y: y,\n                    z: z != null ? z : undefined,\n                    bins: bins,\n                    dimensions: z != null ? 3 : 2,\n                    npoints: values.length,\n                    date: new Date(),\n                    active: true,\n                    colorScale: colorScale,\n                    continuous: !isCategorical,\n                    isCategorical: isCategorical,\n                    values: values, // for color\n                    type: traceType\n                    // purity: purity,\n                    // text: values,\n                };\n                if (traceType === 'scatter') {\n                    chartData.positions = getPositions(chartData);\n                }\n                if (traceType === 'meta_image') {\n                    const svg = cachedData[getEmbeddingKey(embedding)];\n                    chartData.source = svg.cloneNode(true);\n                    chartData.gallerySource = svg.cloneNode(true);\n                    if (chartData.name !== '__count') {\n                        const groupBy = cachedData[chartData.embedding.attrs.group];\n                        const selection = chartData.embedding.attrs.selection;\n                        const passingIndices = getPassingFilterIndices(cachedData, {filters: selection});\n                        let passingGroupToValues = {};\n                        for (let i = 0, n = passingIndices.length; i < n; i++) {\n                            const index = passingIndices[i];\n                            const category = groupBy[index];\n                            let values = passingGroupToValues[category];\n                            if (values == null) {\n                                values = [];\n                                passingGroupToValues[category] = values;\n                            }\n                            values.push(chartData.values[index]);\n\n                        }\n\n                        function getCategoryToStats(groupToValues) {\n                            const categoryToStats = {};\n                            if (isCategorical) {\n                                for (const category in groupToValues) {\n                                    const values = groupToValues[category];\n                                    const valueToCount = {};\n                                    for (let i = 0, n = values.length; i < n; i++) {\n                                        const val = values[i];\n                                        valueToCount[val] = (valueToCount[val] || 0) + 1;\n                                    }\n                                    let max = 0;\n                                    let maxValue;\n                                    for (let value in valueToCount) {\n                                        let count = valueToCount[value];\n                                        if (count > max) {\n                                            max = count;\n                                            maxValue = value;\n                                        }\n                                    }\n                                    categoryToStats[category] = {value: maxValue, n: values.length};\n                                }\n                            } else {\n                                for (const category in groupToValues) {\n                                    const values = groupToValues[category];\n                                    let sum = 0;\n                                    for (let i = 0, n = values.length; i < n; i++) {\n                                        sum += values[i];\n                                    }\n                                    const mean = sum / values.length;\n                                    categoryToStats[category] = {value: mean, n: values.length};\n                                }\n                            }\n                            return categoryToStats;\n                        }\n\n                        chartData.categoryToStats = getCategoryToStats(passingGroupToValues);\n                    }\n                }\n                updateTraceColors(chartData);\n\n                if (traceType === 'image') {\n                    // TODO cache image\n                    chartData.indices = !isCategorical ? indexSort(chartData.values, true) : randomSeq(chartData.values.length);\n                    const url = dataset.api.getFileUrl(embedding.spatial.image);\n                    chartData.tileSource = new OpenSeadragon.ImageTileSource({\n                        url: url,\n                        buildPyramid: true,\n                        crossOriginPolicy: \"Anonymous\"\n                    });\n                }\n\n                embeddingData.push(chartData);\n            }\n        });\n    });\n\n}\n\nfunction handleError(dispatch, err, message) {\n    console.log(err);\n    if (err.status === 401) {\n        dispatch(setMessage('Your session has expired. Please login again.'));\n        return dispatch(logout());\n    }\n    if (message == null) {\n        message = err instanceof CustomError ? err.message : 'An unexpected error occurred. Please try again.';\n    }\n    dispatch(setMessage(new Error(message)));\n}\n\nexport function listDatasets() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        return getState().serverInfo.api.getDatasetsPromise()\n            .then(choices => {\n                dispatch(_setDatasetChoices(choices));\n            })\n            .finally(() => {\n                dispatch(_setLoading(false));\n            })\n            .catch(err => {\n                handleError(dispatch, err, 'Unable to retrieve datasets. Please try again.');\n            });\n    };\n}\n\n\n","import {Typography} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from '@material-ui/core/Popover';\nimport TextField from '@material-ui/core/TextField';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport InfoIcon from '@material-ui/icons/Info';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {connect} from 'react-redux';\nimport {setDialog} from './actions';\n\nexport class DatasetSelector extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null, searchText: '', datasetDetailsEl: null, selectedDataset: null};\n    }\n\n    handleClick = (event) => {\n        this.setState({anchorEl: event.currentTarget, searchText: ''});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null, searchText: ''});\n    };\n\n    handleCloseDatasetDetails = (event) => {\n        this.setState({datasetDetailsEl: null, selectedDataset: null});\n    };\n\n    handleListItemDetailsClick = (event, id) => {\n        this.setState({datasetDetailsEl: event.currentTarget});\n        this.props.serverInfo.api.getDatasetPromise(id).then(result => {\n            this.setState({selectedDataset: result});\n        });\n\n    };\n\n    handleListItemClick = (id) => {\n        const selectedId = this.props.dataset != null ? this.props.dataset.id : null;\n        if (id !== selectedId) {\n            this.props.onChange(id);\n        }\n        this.setState({anchorEl: null, searchText: ''});\n    };\n\n    handleClearSearchText = () => {\n        this.setState({searchText: ''});\n    };\n\n    onSearchChange = (event) => {\n        this.setState({searchText: event.target.value});\n    };\n\n    render() {\n        const {dataset, datasetChoices} = this.props;\n        const selectedId = dataset != null ? dataset.id : null;\n\n        if (datasetChoices.length <= 1 && selectedId != null) {\n            return null;\n        }\n        const {anchorEl, searchText, selectedDataset} = this.state;\n\n        const open = Boolean(this.state.anchorEl);\n        let filteredChoices = datasetChoices;\n        const searchTextLower = this.state.searchText.toLowerCase().trim();\n        if (searchTextLower != '') {\n            filteredChoices = filteredChoices.filter(choice => choice.name.toLowerCase().indexOf(searchTextLower) !== -1 ||\n                (choice.description != null && choice.description.toLowerCase().indexOf(searchTextLower) !== -1));\n        }\n        const datasetDetailsOpen = Boolean(this.state.datasetDetailsEl);\n        const hasMoreInfo = selectedDataset && (selectedDataset.title || selectedDataset.description);\n        return (\n            <React.Fragment>\n                <Popover\n                    id={\"dataset-details-selector\"}\n                    open={datasetDetailsOpen}\n                    anchorEl={this.state.datasetDetailsEl}\n                    onClose={this.handleCloseDatasetDetails}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                >\n                    <div style={{width: 500}}>\n                        {selectedDataset == null &&\n                        <div><CircularProgress size={20}/> Loading...</div>}\n                        {selectedDataset && <Typography component={\"h6\"}>\n                            {selectedDataset.name}\n                        </Typography>}\n                        {!hasMoreInfo && <div>No description available</div>}\n\n                        {selectedDataset && selectedDataset.title && <div>{selectedDataset.title}</div>}\n                        {selectedDataset && selectedDataset.description &&\n                        <ReactMarkdown linkTarget=\"_blank\" children={selectedDataset.description}/>}\n                    </div>\n                </Popover>\n                <Button variant=\"contained\" onClick={this.handleClick}\n                        color={selectedId == null ? \"primary\" : \"default\"}\n                        startIcon={<FolderOpenIcon/>}>Open</Button>\n                <Popover open={open}\n                         anchorEl={anchorEl}\n                         onClose={this.handleClose}\n                         anchorOrigin={{\n                             vertical: 'bottom',\n                             horizontal: 'center',\n                         }}\n                         transformOrigin={{\n                             vertical: 'top',\n                             horizontal: 'center',\n                         }}\n                >\n                    <TextField style={{padding: 6}} type=\"text\" placeholder={\"Search\"} value={searchText}\n                               onChange={this.onSearchChange}\n                               fullWidth={true}\n                               InputProps={searchText.trim() !== '' ? {\n                                   endAdornment:\n                                       <InputAdornment position=\"end\">\n                                           <IconButton\n                                               aria-label=\"clear\"\n                                               onClick={this.handleClearSearchText}\n                                           >\n                                               <ClearIcon/>\n                                           </IconButton>\n                                       </InputAdornment>\n                               } : null}\n                    />\n                    <List style={{width: 500}} dense disablePadding component=\"nav\" aria-label=\"datasets\">\n                        {filteredChoices.map(choice => {\n                            let text = choice.name;\n                            if (choice.title) {\n                                text += ' - ' + choice.title;\n                            }\n                            return <ListItem alignItems=\"flex-start\" selected={choice.id === selectedId} key={choice.id}\n                                             button onClick={(e) => this.handleListItemClick(choice.id)}>\n                                <ListItemText\n                                    primary={text}\n                                    style={{textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap'}}/>\n                                <ListItemSecondaryAction>\n                                    <IconButton onClick={(e) => this.handleListItemDetailsClick(e, choice.id)}\n                                                edge=\"end\"\n                                                aria-label=\"summary\">\n                                        <InfoIcon/>\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            </ListItem>;\n                        })}\n                    </List>\n                </Popover>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        datasetChoices: state.datasetChoices,\n        serverInfo: state.serverInfo\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClose: value => {\n            dispatch(setDialog(null));\n        }\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DatasetSelector));\n\n","import {scaleSequential} from 'd3-scale';\nimport {isPlainObject} from 'lodash';\nimport {combineReducers} from 'redux';\nimport {\n    ADD_DATASET,\n    DELETE_DATASET,\n    getTraceKey,\n    RESTORE_VIEW,\n    SET_BIN_SUMMARY,\n    SET_BIN_VALUES,\n    SET_CATEGORICAL_COLOR,\n    SET_CATEGORICAL_NAME,\n    SET_CHART_OPTIONS,\n    SET_CHART_SIZE,\n    SET_COMBINE_DATASET_FILTERS,\n    SET_DATASET,\n    SET_DATASET_CHOICES,\n    SET_DATASET_FILTER,\n    SET_DATASET_FILTERS,\n    SET_DIALOG,\n    SET_DISTRIBUTION_DATA,\n    SET_DISTRIBUTION_PLOT_INTERPOLATOR,\n    SET_DISTRIBUTION_PLOT_OPTIONS,\n    SET_DOMAIN,\n    SET_EMAIL,\n    SET_EMBEDDING_DATA,\n    SET_EMBEDDING_LABELS,\n    SET_FEATURE_SUMMARY,\n    SET_GLOBAL_FEATURE_SUMMARY,\n    SET_INTERPOLATOR,\n    SET_LOADING,\n    SET_LOADING_APP,\n    SET_MARKER_OPACITY,\n    SET_MARKERS,\n    SET_MESSAGE,\n    SET_NUMBER_OF_BINS,\n    SET_POINT_SIZE,\n    SET_PRIMARY_CHART_SIZE,\n    SET_PRIMARY_TRACE_KEY,\n    SET_SAVED_DATASET_STATE,\n    SET_SEARCH_TOKENS,\n    SET_SELECTED_DISTRIBUTION_DATA,\n    SET_SELECTED_EMBEDDING,\n    SET_SELECTION,\n    SET_SERVER_INFO,\n    SET_TAB,\n    SET_UNSELECTED_MARKER_OPACITY,\n    SET_USER,\n    UPDATE_DATASET,\n} from '../actions';\nimport {getInterpolator, updateTraceColors} from '../util';\n\nexport const DEFAULT_BIN_SUMMARY = 'max';\nexport const DEFAULT_NUMBER_BINS = 500;\nexport const DEFAULT_POINT_SIZE = 1;\nexport const DEFAULT_MARKER_OPACITY = 1;\nexport const DEFAULT_UNSELECTED_MARKER_OPACITY = 0.1;\nexport const DEFAULT_INTERPOLATOR = 'Viridis';\nexport const DEFAULT_DOT_PLOT_INTERPOLATOR = 'Reds';\nexport const DEFAULT_DRAG_MODE = 'pan';\nexport const DEFAULT_SHOW_LABELS = false;\nexport const DEFAULT_SHOW_AXIS = true;\nexport const DEFAULT_SHOW_FOG = false;\nexport const DEFAULT_DARK_MODE = false;\nexport const DEFAULT_LABEL_FONT_SIZE = 14;\nexport const DEFAULT_LABEL_STROKE_WIDTH = 4;\n\nconst DEFAULT_DIST_PLOT_OPTIONS = {\n    chartType: 'dotplot',\n    violinScale: 'width',\n    violinHeight: 100,\n    violinWidth: 80,\n    violinShowBoxplot:true\n};\n\nconst DEFAULT_INTERPOLATOR_OBJ = {\n    name: DEFAULT_INTERPOLATOR,\n    value: getInterpolator(DEFAULT_INTERPOLATOR)\n};\n\nconst DEFAULT_DOT_PLOT_INTERPOLATOR_OBJ = {\n    name: DEFAULT_DOT_PLOT_INTERPOLATOR,\n    value: getInterpolator(DEFAULT_DOT_PLOT_INTERPOLATOR)\n};\n\nconst DEFAULT_PRIMARY_CHART_SIZE = {\n    width: window.innerWidth - 280,\n    height: Math.max(300, window.innerHeight - 410)\n};\n\nconst DEFAULT_CHART_OPTIONS = {\n    animating: false,\n    dragmode: DEFAULT_DRAG_MODE,\n    editSelection: false,\n    showAxis: DEFAULT_SHOW_AXIS,\n    showFog: DEFAULT_SHOW_FOG,\n    darkMode: DEFAULT_DARK_MODE,\n    labelFontSize: DEFAULT_LABEL_FONT_SIZE,\n    labelStrokeWidth: DEFAULT_LABEL_STROKE_WIDTH\n};\n\nfunction chartSize(state = 300, action) {\n    switch (action.type) {\n        case SET_CHART_SIZE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction primaryChartSize(state = DEFAULT_PRIMARY_CHART_SIZE, action) {\n    switch (action.type) {\n        case SET_PRIMARY_CHART_SIZE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n/**\n *\n * @param state Array of value, type where type can be X, obs, or obsCat\n * @param action\n * @returns {*|*[]}\n */\nfunction searchTokens(state = [], action) {\n    switch (action.type) {\n        case SET_SEARCH_TOKENS:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.q || [];\n        default:\n            return state;\n    }\n}\n\nfunction embeddingLabels(state = [], action) {\n    switch (action.type) {\n        case SET_EMBEDDING_LABELS:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.embeddingLabels || [];\n        default:\n            return state;\n    }\n}\n\nfunction chartOptions(state = DEFAULT_CHART_OPTIONS, action) {\n    switch (action.type) {\n        case SET_CHART_OPTIONS:\n            return Object.assign({}, action.payload);\n        case RESTORE_VIEW:\n            return action.payload.chartOptions ? Object.assign(DEFAULT_CHART_OPTIONS, action.payload.chartOptions) : state;\n        default:\n            return state;\n    }\n}\n\nfunction dataset(state = null, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            document.title = action.payload == null ? 'Cirro' : action.payload.name + ' - Cirro';\n            return action.payload;\n        case UPDATE_DATASET:\n            if (action.payload.id === state.id) { // update name, description, url\n                document.title = action.payload.name + ' - Cirro';\n                return Object.assign(state, action.payload);\n            }\n        default:\n            return state;\n    }\n}\n\nfunction datasetChoices(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET_CHOICES:\n            action.payload.sort((a, b) => {\n                a = a.name.toLowerCase();\n                b = b.name.toLowerCase();\n                return a === b ? 0 : (a < b ? -1 : 1);\n            });\n\n            return action.payload;\n        case SET_EMAIL:\n            if (action.payload == null) {\n                return [];\n            }\n            return state;\n        case ADD_DATASET:\n            state.push(action.payload);\n            state.sort((a, b) => {\n                a = a.name.toLowerCase();\n                b = b.name.toLowerCase();\n                return a === b ? 0 : (a < b ? -1 : 1);\n            });\n            return state.slice();\n        case UPDATE_DATASET:\n        case DELETE_DATASET:\n            let index = -1;\n            for (let i = 0; i < state.length; i++) {\n                if (state[i].id === action.payload.id) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                if (action.type === UPDATE_DATASET) {\n                    state[index] = action.payload;\n                    state.sort((a, b) => {\n                        a = a.name.toLowerCase();\n                        b = b.name.toLowerCase();\n                        return a === b ? 0 : (a < b ? -1 : 1);\n                    });\n                } else {\n                    state.splice(index, 1);\n                }\n\n                return state.slice();\n            }\n            return state;\n        default:\n            return state;\n    }\n}\n\n// set the selected embeddings, each embedding has name (str) e.g X_umap, nbins (int), _nbins (str), agg (str), bin (boolean), dimensions (int), precomputed (bool)\nfunction embeddings(state = [], action) {\n    switch (action.type) {\n        case SET_SELECTED_EMBEDDING:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.embeddings != null ? action.payload.embeddings : state;\n        default:\n            return state;\n    }\n}\n\nfunction markers(state = [], action) {\n    switch (action.type) {\n        case SET_MARKERS:\n            return action.payload;\n        case SET_DATASET:\n            let result = action.payload == null ? [] : action.payload.markers || [];\n            if (isPlainObject(result)) { // old style, category=>name=>features\n                let newResults = [];\n                for (let categoryName in result) {\n                    let category = result[categoryName];\n                    for (let name in category) {\n                        newResults.push({\n                            category: categoryName,\n                            name: name,\n                            id: categoryName + '-' + name,\n                            readonly: true,\n                            features: category[name]\n                        });\n                    }\n                }\n                result = newResults;\n            }\n\n            if (action.payload != null && action.payload.markers_read_only != null) {\n                if (isPlainObject(action.payload.markers_read_only)) { // old style, name => features\n                    let markers = action.payload.markers_read_only;\n                    for (let categoryName in markers) {\n                        let category = markers[categoryName];\n                        for (let name in category) {\n                            result.push({\n                                category: categoryName,\n                                name: name,\n                                id: categoryName + '-' + name,\n                                readonly: true,\n                                features: category[name]\n                            });\n                        }\n                    }\n                } else {\n                    action.payload.markers_read_only.forEach(item => {\n                        item.readonly = true;\n                        result.push(item);\n                    });\n                }\n            }\n            result.forEach(item => {\n                if (item.id == null) {\n                    item.id = item.category + '-' + item.name;\n                }\n            });\n\n            return result;\n        default:\n            return state;\n    }\n}\n\n\nfunction binSummary(state = DEFAULT_BIN_SUMMARY, action) {\n    switch (action.type) {\n        case SET_BIN_SUMMARY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_BIN_SUMMARY;\n        case RESTORE_VIEW:\n            return action.payload.binSummary != null ? action.payload.binSummary : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction binValues(state = false, action) {\n    switch (action.type) {\n        case SET_BIN_VALUES:\n            return action.payload;\n        case SET_DATASET:\n            return false;\n        case RESTORE_VIEW:\n            return action.payload.binValues != null ? action.payload.binValues : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction numberOfBins(state = DEFAULT_NUMBER_BINS, action) {\n    switch (action.type) {\n        case SET_NUMBER_OF_BINS:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_NUMBER_BINS;\n        case RESTORE_VIEW:\n            return action.payload.numberOfBins != null ? action.payload.numberOfBins : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction markerOpacity(state = DEFAULT_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_MARKER_OPACITY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.markerOpacity != null ? action.payload.markerOpacity : state;\n        default:\n            return state;\n    }\n}\n\nfunction unselectedMarkerOpacity(state = DEFAULT_UNSELECTED_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_MARKER_OPACITY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_UNSELECTED_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.unselectedMarkerOpacity != null ? action.payload.unselectedMarkerOpacity : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction message(state = null, action) {\n    switch (action.type) {\n        case SET_MESSAGE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction email(state = null, action) {\n    switch (action.type) {\n        case SET_EMAIL:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction user(state = {}, action) {\n    switch (action.type) {\n        case SET_USER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n/**\n * Object that contains count (number), chart (object). Each key in chart is the full layout name. Each value contains\n * userPoints (selected points in chart space) and points (the selected points in bin space if binning)\n */\nfunction selection(state = {chart: {}}, action) {\n    switch (action.type) {\n        case SET_SELECTION:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n/**\n * Feature summary maps measure and dimension names to another object containing\n * categories and counts for dimensions, and statistics such as min, max for measures.\n * Features summaries are in the space of selected cells.\n */\nfunction featureSummary(state = {}, action) {\n    switch (action.type) {\n        case SET_FEATURE_SUMMARY:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n/**\n * Feature summary maps measure and dimension names to another object containing\n * categories and counts for dimensions, and statistics such as min, max for measures.\n * Features summaries are in the space of all cells.\n */\nfunction globalFeatureSummary(state = {}, action) {\n    switch (action.type) {\n        case SET_GLOBAL_FEATURE_SUMMARY:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nfunction serverInfo(state = {}, action) {\n    switch (action.type) {\n        case SET_SERVER_INFO:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction loadingApp(state = {loading: false, progress: 0}, action) {\n    switch (action.type) {\n        case SET_LOADING_APP:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction tab(state = 'embedding', action) {\n    switch (action.type) {\n        case SET_TAB:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction dialog(state = null, action) {\n    switch (action.type) {\n        case SET_DIALOG:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction dotPlotInterpolator(state = DEFAULT_DOT_PLOT_INTERPOLATOR_OBJ, action) {\n    switch (action.type) {\n        case SET_DISTRIBUTION_PLOT_INTERPOLATOR:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.dotPlotInterpolator != null ? action.payload.dotPlotInterpolator : state;\n        default:\n            return state;\n    }\n}\n\n\n/*\nsortBy, minSize, maxSize, min, max, chartType\n */\nfunction distributionPlotOptions(state = DEFAULT_DIST_PLOT_OPTIONS, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return DEFAULT_DIST_PLOT_OPTIONS;\n        case SET_DISTRIBUTION_PLOT_OPTIONS:\n            return Object.assign({}, state, action.payload);\n        case RESTORE_VIEW:\n            return action.payload.distributionPlotOptions != null ? action.payload.distributionPlotOptions : state;\n        default:\n            return state;\n    }\n}\n\nfunction distributionData(state = [], action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            return state.slice();\n        case SET_DISTRIBUTION_DATA:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        default:\n            return state;\n    }\n}\n\nfunction selectedDistributionData(state = [], action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            return state.slice();\n        case SET_SELECTED_DISTRIBUTION_DATA:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        default:\n            return state;\n    }\n}\n\n\nfunction datasetFilters(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return [];\n        case SET_DATASET_FILTERS:\n            //action.payload.sort()\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction datasetFilter(state = {}, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return {};\n        case SET_DATASET_FILTER:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.datasetFilter != null ? action.payload.datasetFilter : state;\n        default:\n            return state;\n    }\n}\n\nfunction combineDatasetFilters(state = 'and', action) {\n    switch (action.type) {\n        case SET_COMBINE_DATASET_FILTERS:\n            return action.payload;\n        case SET_DATASET:\n            return \"and\";\n        case RESTORE_VIEW:\n            return action.payload.combineDatasetFilters != null ? action.payload.combineDatasetFilters : state;\n        default:\n            return state;\n    }\n}\n\n// category -> value -> newValue\nfunction categoricalNames(state = {}, action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            let category = state[action.payload.name];\n            if (category === undefined) {\n                category = {};\n                state[action.payload.name] = category;\n            }\n            if (action.payload.value == null || action.payload.value === '') {\n                delete category[action.payload.oldValue];\n            } else {\n                category[action.payload.oldValue] = action.payload.value;\n            }\n            return Object.assign({}, state);\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n// maps keys to values, features=>array, embedding key=>x,y,z, feature_embedding_key=>array for binned embeddings\nfunction cachedData(state = {}, action) {\n    switch (action.type) {\n        case SET_DATASET :\n            return {};\n    }\n    return state;\n\n}\n\n// each item has  data (list of traces, each trace has x, y, etc.), layout\nfunction embeddingData(state = [], action) {\n    switch (action.type) {\n        case SET_EMBEDDING_DATA :\n            return action.payload;\n        case SET_SELECTION:\n            return state.slice();\n        case SET_DOMAIN:\n            state.forEach((traceInfo, stateIndex) => {\n                if (traceInfo.continuous && traceInfo.name === action.payload.name) {\n                    const summary = action.payload.summary;\n                    let domain = [summary.min, summary.max];\n                    if (summary.customMin != null && !isNaN(summary.customMin)) {\n                        domain[0] = summary.customMin;\n                    }\n                    if (summary.customMax != null && !isNaN(summary.customMax)) {\n                        domain[1] = summary.customMax;\n                    }\n                    traceInfo.colorScale.domain(domain);\n                    updateTraceColors(traceInfo);\n                }\n            });\n            return state.slice();\n        case SET_CATEGORICAL_COLOR:\n            state.forEach((traceInfo, stateIndex) => {\n                if (!traceInfo.continuous && traceInfo.name === action.payload.name) {\n                    let index = traceInfo.colorScale.domain().indexOf(action.payload.value);\n                    let range = traceInfo.colorScale.range();\n                    range[index] = action.payload.color;\n                    traceInfo.colorScale.range(range);\n                    updateTraceColors(traceInfo);\n                }\n            });\n            return state.slice();\n\n        case SET_INTERPOLATOR:\n            // update colors for existing continuous traces\n\n            state.forEach((traceInfo, stateIndex) => {\n                if (traceInfo.continuous) {\n                    let domain = traceInfo.colorScale.domain();\n                    traceInfo.colorScale = scaleSequential(action.payload.value).domain(domain);\n                    updateTraceColors(traceInfo);\n                }\n            });\n            return state.slice();\n        case SET_DATASET:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport function pointSize(state = DEFAULT_POINT_SIZE, action) {\n    switch (action.type) {\n        case SET_POINT_SIZE:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.pointSize != null ? action.payload.pointSize : state;\n        default:\n            return state;\n    }\n}\n\n\n// used to restore state when toggling datasets\nexport function savedDatasetState(state = {}, action) {\n    switch (action.type) {\n        case SET_SAVED_DATASET_STATE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport function primaryTraceKey(state = null, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return null;\n        case SET_PRIMARY_TRACE_KEY:\n            return action.payload;\n        case SET_EMBEDDING_DATA:\n            let traces = action.payload.filter(traceInfo => traceInfo.active);\n            if (traces.length === 0) {\n                return null;\n            }\n            return getTraceKey(traces[traces.length - 1]); // last feature becomes primary\n        default:\n            return state;\n    }\n}\n\nfunction loading(state = false, action) {\n    switch (action.type) {\n        case SET_LOADING:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction interpolator(state = DEFAULT_INTERPOLATOR_OBJ, action) {\n    switch (action.type) {\n        case SET_INTERPOLATOR:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.colorScheme != null ? action.payload.colorScheme : state;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    binSummary,\n    binValues,\n    cachedData,\n    categoricalNames,\n    chartOptions,\n    chartSize,\n    combineDatasetFilters,\n    dataset,\n    datasetChoices,\n    datasetFilter,\n    datasetFilters,\n    dialog,\n    distributionData,\n    distributionPlotOptions,\n    dotPlotInterpolator,\n    email,\n    embeddingData,\n    embeddingLabels,\n    embeddings,\n    featureSummary,\n    globalFeatureSummary,\n    interpolator,\n    loading,\n    loadingApp,\n    markerOpacity,\n    markers,\n    message,\n    numberOfBins,\n    pointSize,\n    primaryChartSize,\n    primaryTraceKey,\n    savedDatasetState,\n    searchTokens,\n    selectedDistributionData,\n    selection,\n    serverInfo,\n    tab,\n    unselectedMarkerOpacity,\n    user\n\n});\n","import {Divider, IconButton, Menu, Tooltip} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport {withStyles} from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Brightness2Icon from '@material-ui/icons/Brightness3';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {connect} from 'react-redux';\nimport {\n    DELETE_DATASET_DIALOG,\n    EDIT_DATASET_DIALOG,\n    HELP_DIALOG,\n    IMPORT_DATASET_DIALOG,\n    login,\n    logout,\n    setChartOptions,\n    setDataset,\n    setDialog,\n    setMessage,\n    setSavedDatasetState,\n    setTab,\n} from './actions';\nimport {drawerWidth} from './App';\nimport DatasetSelector from './DatasetSelector';\nimport {intFormat} from './formatters';\nimport {\n    DEFAULT_DARK_MODE,\n    DEFAULT_INTERPOLATOR,\n    DEFAULT_LABEL_FONT_SIZE,\n    DEFAULT_LABEL_STROKE_WIDTH,\n    DEFAULT_MARKER_OPACITY,\n    DEFAULT_SHOW_FOG,\n    DEFAULT_UNSELECTED_MARKER_OPACITY\n} from \"./reducers\";\n\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        'flex-direction': 'column',\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n});\nconst AntTab = withStyles(theme => ({\n    root: {\n        minWidth: 50,\n        textTransform: 'none',\n        fontWeight: theme.typography.fontWeightRegular,\n        marginRight: theme.spacing(0),\n        '&:hover': {\n            color: '#40a9ff',\n            opacity: 1,\n        },\n        '&$selected': {\n            color: '#1890ff',\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n        '&:focus': {\n            color: '#40a9ff',\n        },\n    },\n    selected: {},\n}))(props => <Tab disableRipple {...props} />);\n\nclass AppHeader extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userMenuOpen: false,\n            userMenuAnchorEl: null,\n            moreMenuOpen: false,\n            moreMenuAnchorEl: null,\n        };\n\n    }\n\n    handleTabChange = (event, value) => {\n        this.props.handleTab(value);\n    };\n\n\n    handleEmbeddingsChange = (event) => {\n\n        const embeddings = event.target.value;\n        const selection = [];\n        embeddings.forEach(embedding => {\n\n            if (!embedding.precomputed) {\n                embedding = Object.assign(embedding, {\n                    bin: this.props.binValues,\n                    nbins: this.props.numberOfBins,\n                    _nbins: this.props.numberOfBinsUI,\n                    agg: this.props.binSummary\n                });\n            }\n            selection.push(embedding);\n\n        });\n        this.props.handleEmbeddings(selection);\n    };\n\n\n    handleUserMenuClose = () => {\n        this.setState({userMenuOpen: false});\n    };\n\n    handleMoreMenuClose = () => {\n        this.setState({moreMenuOpen: false});\n    };\n\n\n    handleHelp = () => {\n        this.props.handleDialog(HELP_DIALOG);\n    };\n\n\n    handleUserMenuOpen = (event) => {\n        this.setState({userMenuOpen: true, userMenuAnchorEl: event.currentTarget});\n    };\n    handleMoreMenuOpen = (event) => {\n        this.setState({moreMenuOpen: true, moreMenuAnchorEl: event.currentTarget});\n    };\n\n    getLinkJson = () => {\n        const {\n            chartOptions,\n            combineDatasetFilters,\n            primaryTraceKey,\n            dataset,\n            embeddingLabels,\n            distributionPlotOptions,\n            embeddings,\n            searchTokens,\n            datasetFilter,\n            interpolator,\n            markerOpacity,\n            pointSize,\n            unselectedMarkerOpacity,\n            distributionData\n        } = this.props;\n\n        let json = {\n            dataset: dataset.id,\n            embeddings: embeddings.map(embedding => {\n                if (embedding.bin) {\n                    embedding = Object.assign({}, embedding);\n                    delete embedding._bin;\n                    return embedding;\n                } else {\n                    return {name: embedding.name, dimensions: embedding.dimensions};\n                }\n\n            })\n        };\n\n        const chartRef = chartOptions.ref;\n        if (json.embeddings.length > 0 && chartRef != null && chartRef.scatterPlot) {\n            json.camera = chartRef.scatterPlot.getCameraDef();\n\n        }\n        if (primaryTraceKey != null) {\n            json.primaryTraceKey = primaryTraceKey;\n        }\n        let jsonChartOptions = {};\n\n        const defaultChartOptions = {\n            showFog: DEFAULT_SHOW_FOG, darkMode: DEFAULT_DARK_MODE,\n            labelFontSize: DEFAULT_LABEL_FONT_SIZE,\n            labelStrokeWidth: DEFAULT_LABEL_STROKE_WIDTH\n        };\n\n        for (let key in defaultChartOptions) {\n            let value = chartOptions[key];\n            if (value !== defaultChartOptions[key]) {\n                jsonChartOptions[key] = value;\n            }\n        }\n        if (pointSize !== 1) {\n            json.pointSize = pointSize;\n        }\n\n        json.chartOptions = jsonChartOptions;\n\n\n        if (searchTokens.length > 0) {\n            json.q = searchTokens;\n        }\n\n        let datasetFilterJson = {};\n        for (let key in datasetFilter) {\n            let value = datasetFilter[key];\n            if (window.Array.isArray(value)) {\n                datasetFilterJson[key] = value;\n            } else {\n                if (value.operation !== '' && !isNaN(value.value) && value.value != null) {\n                    datasetFilterJson[key] = {operation: value.operation, value: value.value};\n                }\n            }\n        }\n        if (Object.keys(datasetFilterJson).length > 0) {\n            json.datasetFilter = datasetFilterJson;\n\n        }\n        json.combineDatasetFilters = combineDatasetFilters;\n        if (markerOpacity !== DEFAULT_MARKER_OPACITY) {\n            json.markerOpacity = markerOpacity;\n        }\n        if (unselectedMarkerOpacity !== DEFAULT_UNSELECTED_MARKER_OPACITY) {\n            json.unselectedMarkerOpacity = unselectedMarkerOpacity;\n        }\n\n        if (distributionData && distributionData.length > 0) {\n            json.distributionPlotOptions = distributionPlotOptions;\n        }\n        if (interpolator.name !== DEFAULT_INTERPOLATOR) {\n            json.colorScheme = interpolator.name;\n        }\n\n        if (embeddingLabels.length > 0) {\n            json.embeddingLabels = embeddingLabels;\n        }\n        return json;\n    };\n\n    handleDataset = (id) => {\n        if (this.props.dataset != null) {\n            const savedDatasetState = this.props.savedDatasetState;\n            const link = this.getLinkJson();\n            link.dataset = null;\n            savedDatasetState[this.props.dataset.id] = link;\n            this.props.handleSavedDatasetState(savedDatasetState);\n        }\n        this.props.handleTab('embedding'); // embedding won't render unless visible\n        this.props.handleDataset(id);\n    };\n\n    copyLink = (event) => {\n\n        let linkText = window.location.protocol + '//' + window.location.host + window.location.pathname;\n        linkText += '?q=' + encodeURIComponent(JSON.stringify(this.getLinkJson()));\n        const container = document.activeElement;\n        const fakeElem = document.createElement('textarea');\n        const isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n        fakeElem.style.fontSize = '12pt';\n        fakeElem.style.border = '0';\n        fakeElem.style.padding = '0';\n        fakeElem.style.margin = '0';\n        // Move element out of screen horizontally\n        fakeElem.style.position = 'absolute';\n        fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n        fakeElem.setAttribute('readonly', '');\n        // Move element to the same position vertically\n        let yPosition = window.pageYOffset || document.documentElement.scrollTop;\n        fakeElem.style.top = yPosition + 'px';\n        fakeElem.value = linkText;\n        container.appendChild(fakeElem);\n\n        fakeElem.select();\n        fakeElem.setSelectionRange(0, fakeElem.value.length);\n\n        document.execCommand('copy');\n\n        const fakeHandlerCallback = (event) => {\n            document.activeElement.blur();\n            window.getSelection().removeAllRanges();\n            container.removeChild(fakeElem);\n            container.removeEventListener('click', fakeHandlerCallback);\n        };\n        this.props.setMessage('Link copied');\n        container.addEventListener('click', fakeHandlerCallback);\n        this.setState({moreMenuOpen: false});\n\n    };\n\n\n    onDarkMode = () => {\n        this.props.chartOptions.darkMode = !this.props.chartOptions.darkMode;\n        this.props.handleChartOptions(this.props.chartOptions);\n    };\n\n    handleLogout = () => {\n        this.setState({userMenuOpen: false});\n        this.props.handleLogout();\n    };\n\n    handleImportDataset = (event) => {\n        this.props.handleDialog(IMPORT_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleSettings = (event) => {\n        this.props.handleDialog(EDIT_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleDelete = (event) => {\n        this.props.handleDialog(DELETE_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleShowDatasetDetails = (event) => {\n        this.setState({datasetDetailsEl: event.currentTarget});\n    };\n    handleCloseDatasetDetails = (event) => {\n        this.setState({datasetDetailsEl: null});\n    };\n\n    render() {\n        const {\n            dataset, loadingApp, email, selection, classes, serverInfo, tab, user\n        } = this.props;\n\n\n        const datasetDetailsOpen = Boolean(this.state.datasetDetailsEl);\n        const hasDatasetDetails = dataset != null && (dataset.title || dataset.description);\n        const shape = dataset != null && dataset.shape != null ? dataset.shape : null;\n        const hasSelection = dataset != null && shape != null && shape[0] > 0 && !isNaN(selection.count);\n\n        const showNewDataset = user != null && user.importer && !loadingApp.loading;\n        const showEditDeleteDataset = dataset !== null && dataset.owner && !loadingApp.loading;\n        const showMoreMenu = (showNewDataset || dataset != null) && !loadingApp.loading;\n        const isSignedOut = !loadingApp.loading && email == null && serverInfo.clientId !== '';\n        return (\n            <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\n                <Toolbar variant=\"dense\">\n                    {dataset != null && <Popover\n                        id={\"dataset-details\"}\n                        open={datasetDetailsOpen}\n                        anchorEl={this.state.datasetDetailsEl}\n                        onClose={this.handleCloseDatasetDetails}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                    >\n                        <div style={{width: 500}}>\n                            {dataset.title && <Typography className={classes.typography}>\n                                {dataset.title}\n                            </Typography>}\n                            {dataset.description &&\n                            <ReactMarkdown linkTarget=\"_blank\" children={dataset.description}/>}\n                        </div>\n                    </Popover>\n                    }\n                    {dataset != null &&\n                    <Typography\n                        aria-owns={this.state.datasetDetailsOpen ? 'dataset-details' : undefined}\n                        aria-haspopup=\"true\"\n                        component={\"h3\"}>\n                        {hasDatasetDetails &&\n                        <Button onClick={this.handleShowDatasetDetails}><b>{dataset.name}</b></Button>}\n                        {!hasDatasetDetails && <b>{dataset.name}</b>}\n                        <small>&nbsp;\n                            {hasSelection && shape != null && intFormat(selection.count) + ' / '}\n                            {shape != null && intFormat(shape[0]) + ' cells'}\n                        </small>\n\n                    </Typography>\n                    }\n\n                    {dataset != null && <Tabs\n                        value={tab}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={this.handleTabChange}\n                    >\n                        <AntTab value=\"embedding\" label=\"Embeddings\"/>\n                        <AntTab value=\"distribution\" label=\"Distributions\"/>\n                        {dataset.results != null && <AntTab value=\"precomputed_results\" label=\"Results\"/>}\n                    </Tabs>}\n\n                    <div className={\"cirro-condensed\"}>\n                        {/*<CloudIcon style={{verticalAlign: 'bottom'}} fontSize={'large'}/>*/}\n                        {/*<h3*/}\n                        {/*    style={{display: 'inline', marginRight: 20}}>Cirro</h3>*/}\n\n                    </div>\n                    <div style={{marginLeft: 'auto'}}>\n                        {!loadingApp.loading && !isSignedOut && <DatasetSelector onChange={this.handleDataset}/>}\n                        {showMoreMenu && <Tooltip title={'More'}>\n                            <IconButton aria-label=\"Menu\" aria-haspopup=\"true\"\n                                        onClick={this.handleMoreMenuOpen}>\n                                <MoreVertIcon/>\n                            </IconButton>\n                        </Tooltip>}\n                        {showMoreMenu && <Menu id=\"more-menu\"\n                                               anchorEl={this.state.moreMenuAnchorEl}\n                                               anchorOrigin={{\n                                                   vertical: 'top',\n                                                   horizontal: 'right',\n                                               }}\n\n                                               transformOrigin={{\n                                                   vertical: 'top',\n                                                   horizontal: 'right',\n                                               }} open={this.state.moreMenuOpen}\n                                               onClose={this.handleMoreMenuClose}>\n                            {showNewDataset && <MenuItem onClick={this.handleImportDataset}>\n                                New Dataset\n                            </MenuItem>}\n\n                            {showEditDeleteDataset && <MenuItem onClick={this.handleSettings}>Edit Dataset</MenuItem>}\n                            {showEditDeleteDataset && <MenuItem onClick={this.handleDelete}>Delete Dataset</MenuItem>}\n                            {(showNewDataset || showEditDeleteDataset) && dataset != null && <Divider/>}\n                            {dataset != null && <MenuItem onClick={this.copyLink}>Copy Link </MenuItem>}\n                        </Menu>}\n\n                        {<Tooltip title={\"Toggle Light/Dark Theme\"}>\n                            <IconButton edge={false} className={this.props.chartOptions.darkMode ? 'cirro-active' : ''}\n                                        aria-label=\"Toggle Theme\" onClick={() => this.onDarkMode()}>\n                                <Brightness2Icon/>\n                            </IconButton>\n                        </Tooltip>}\n                        <Tooltip title={'Help'}>\n                            <IconButton aria-label=\"Help\"\n                                        onClick={this.handleHelp}>\n                                <HelpIcon/>\n                            </IconButton>\n                        </Tooltip>\n                        {email != null && email !== '' &&\n                        <Tooltip title={email}>\n                            <IconButton aria-label=\"Menu\" aria-haspopup=\"true\"\n                                        onClick={this.handleUserMenuOpen}>\n                                <AccountCircle/>\n                            </IconButton>\n                        </Tooltip>}\n                        {email != null && email !== '' &&\n                        <Menu id=\"menu-user\"\n                              anchorEl={this.state.userMenuAnchorEl}\n                              anchorOrigin={{\n                                  vertical: 'top',\n                                  horizontal: 'right',\n                              }}\n\n                              transformOrigin={{\n                                  vertical: 'top',\n                                  horizontal: 'right',\n                              }} open={this.state.userMenuOpen}\n                              onClose={this.handleUserMenuClose}>\n                            <MenuItem onClick={this.handleLogout}>Sign Out</MenuItem>\n                        </Menu>}\n\n                        {isSignedOut && <Button style={{whiteSpace: 'nowrap'}} variant=\"outlined\" color=\"primary\"\n                                                onClick={this.props.handleLogin}>Sign In</Button>}\n                    </div>\n                </Toolbar>\n            </AppBar>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        chartOptions: state.chartOptions,\n        embeddings: state.embeddings,\n        embeddingLabels: state.embeddingLabels,\n        searchTokens: state.searchTokens,\n        primaryTraceKey: state.primaryTraceKey,\n        binSummary: state.binSummary,\n        binValues: state.binValues,\n        combineDatasetFilters: state.combineDatasetFilters,\n        datasetFilter: state.datasetFilter,\n        markerOpacity: state.markerOpacity,\n        pointSize: state.pointSize,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n        savedDatasetState: state.savedDatasetState,\n        datasetChoices: state.datasetChoices,\n        dialog: state.dialog,\n        distributionData: state.distributionData,\n        email: state.email,\n\n        interpolator: state.interpolator,\n        loading: state.loading,\n        loadingApp: state.loadingApp,\n\n        message: state.message,\n\n        selection: state.selection,\n        serverInfo: state.serverInfo,\n        user: state.user,\n        tab: state.tab\n    };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleTab: (value) => {\n            dispatch(setTab(value));\n        },\n        setMessage: (value) => {\n            dispatch(setMessage(value));\n        },\n        handleLogin: () => {\n            dispatch(login());\n        },\n        handleLogout: () => {\n            dispatch(logout());\n        },\n\n        handleSavedDatasetState: value => {\n            dispatch(setSavedDatasetState(value));\n        },\n\n        handleDataset: value => {\n            dispatch(setDataset(value));\n        },\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n        handleChartOptions: (value) => {\n            dispatch(setChartOptions(value));\n        }\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(AppHeader));\n\n\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {deleteDataset, setDialog} from './actions';\n\nclass DeleteDatasetDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n        };\n    }\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleDelete = () => {\n        this.setState({loading: true});\n        this.props.handleDelete({dataset: this.props.dataset});\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"delete-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"delete-dataset-dialog-title\">Delete Dataset</DialogTitle>\n                <DialogContent>\n                    {this.props.dataset && <h3>Are you sure you want to delete {this.props.dataset.name}?</h3>}\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={this.state.loading} onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={this.state.loading} onClick={this.handleDelete} color=\"primary\">\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        email: state.email,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        handleDelete: value => {\n            dispatch(deleteDataset(value));\n        },\n\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DeleteDatasetDialog));\n\n","import Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {scaleSequential} from 'd3-scale';\nimport * as scaleChromatic from 'd3-scale-chromatic';\nimport React from 'react';\nimport ColorSchemeLegend from './ColorSchemeLegend';\nimport {fixInterpolatorName, getInterpolator, interpolators} from \"./util\";\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        'flex-direction': 'column',\n    },\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(1)\n    },\n\n});\n\nfunction stripInterpolate(name) {\n    if (name.startsWith(\"interpolate\")) {\n        name = name.substring(\"interpolate\".length);\n    }\n    return name;\n}\n\n\nclass ColorSchemeSelector extends React.PureComponent {\n    handleInterpolatorChange = (event) => {\n        let name = event.target.value;\n        this.props.handleInterpolator({name: name, value: getInterpolator(name)});\n    };\n\n    getScale(name) {\n        return scaleSequential(scaleChromatic[name]).domain([0, 1]);\n    }\n\n    render() {\n        const {classes} = this.props;\n        let interpolator = fixInterpolatorName(this.props.interpolator.name);\n        const width = 174;\n        const height = 14;\n        return (\n            <Select\n                input={<Input/>}\n                className={classes.select}\n                onChange={this.handleInterpolatorChange}\n                value={interpolator}\n                multiple={false}>\n                <MenuItem key=\"Diverging\" value=\"Diverging\" divider disabled>\n                    Diverging\n                </MenuItem>\n                {interpolators['Diverging'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n\n                    </MenuItem>))}\n\n                <MenuItem key=\"Sequential (Single Hue)\" value=\"Sequential (Single Hue)\" divider disabled>\n                    Sequential (Single Hue)\n                </MenuItem>\n                {interpolators['Sequential (Single Hue)'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n                    </MenuItem>))}\n\n                <MenuItem key=\"Sequential (Multi-Hue)\" value=\"Sequential (Multi-Hue)\" divider disabled>\n                    Sequential (Multi-Hue)\n                </MenuItem>\n                {interpolators['Sequential (Multi-Hue)'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n\n                    </MenuItem>))}\n\n                <MenuItem key=\"Cyclical\" value=\"Cyclical\" divider disabled>\n                    Cyclical\n                </MenuItem>\n                {interpolators['Cyclical'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n                    </MenuItem>))}\n\n\n            </Select>\n        );\n    }\n\n}\n\n\nexport default withStyles(styles)(ColorSchemeSelector);\n","import {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport {CANVAS_FONT} from './ChartUtil';\nimport {numberFormat} from './formatters';\n\nexport function drawSizeLegend(context, scale, nsteps, width, margin = 20, textColor = 'black') {\n    let domain = scale.domain();\n\n    let stepSize = (domain[1] - domain[0]) / (nsteps + 1);\n    let steps = [];\n    steps.push(domain[0]);\n    let value = domain[0];\n    for (let i = 0; i < nsteps; i++) {\n        value += stepSize;\n        steps.push(value);\n    }\n    steps.push(domain[1]);\n\n    let legendHeight = 20;\n    let valueToX = scaleLinear().range([margin, width - margin]).domain([0, steps.length - 1]).clamp(true);\n    let valueToRadius = scaleLinear().range([1, 9]).domain(domain).clamp(true);\n\n    context.textBaseline = 'top';\n    context.fillStyle = textColor;\n    context.strokeStyle = textColor;\n    context.textAlign = 'center';\n\n    for (let i = 0; i < steps.length; i++) {\n        let pix = valueToX(i);\n\n        let radius = valueToRadius(steps[i]);\n        context.beginPath();\n        context.arc(pix, 10, radius, 0, Math.PI * 2);\n        context.stroke();\n        let text = numberFormat(100 * steps[i]);\n        if (text.endsWith(\".0\")) {\n            text = text.substring(0, text.length - 2);\n        }\n        context.fillText(text, pix, legendHeight + 2);\n\n    }\n}\n\nclass SizeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.backingScale = 1;\n    }\n\n    redraw() {\n        let backingScale = this.backingScale;\n        let node = this.ref.current;\n        const context = node.getContext('2d');\n        const height = this.props.height;\n        const width = this.props.width;\n        const textColor = this.props.textColor || 'black';\n        context.font = CANVAS_FONT;\n        context\n            .clearRect(0, 0, width * backingScale, height * backingScale);\n        context.scale(backingScale, backingScale);\n        const scale = this.props.scale;\n        if (scale == null) {\n            return;\n        }\n\n        drawSizeLegend(context, scale, this.props.nsteps || 3, width, 20, textColor);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    render() {\n\n        let backingScale = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            backingScale = window.devicePixelRatio;\n        }\n        this.backingScale = backingScale;\n        let height = this.props.height;\n        let width = this.props.width;\n        let style = {width: width, height: height};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n        return (\n            <canvas width={width * backingScale} height={height * backingScale} ref={this.ref} style={style}></canvas>);\n\n    }\n}\n\nexport default SizeLegend;\n\n","import {Tooltip} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport React from 'react';\nimport {CANVAS_FONT, SVG_FONT} from './ChartUtil';\nimport {drawColorScheme} from './ColorSchemeLegend';\nimport {numberFormat, numberFormat2f} from './formatters';\nimport {drawSizeLegend} from './SizeLegend';\nimport {stripTrailingZeros} from './util';\n\nexport const CHIP_SIZE = 12;\n\nexport function getNameWidth(array2d, context) {\n    let offsets = [];\n    let ncategories = 0;\n    if (array2d[0].length > 0) {\n        ncategories = array2d[0][0].name.length;\n        for (let i = 0; i < array2d[0][0].name.length; i++) {\n            offsets.push(0);\n        }\n    }\n    array2d.forEach(array => {\n        let name = array[0].name;\n        for (let i = 0; i < ncategories; i++) {\n            offsets[i] = Math.max(offsets[i], context.measureText(name[i]).width);\n        }\n    });\n    for (let i = 0; i < offsets.length; i++) {\n        // 4px, chip, 2px, text\n        offsets[i] += 6;\n        offsets[i] += CHIP_SIZE;\n    }\n    offsets[offsets.length - 1] += 4;\n    let xTotal = 0;\n    offsets.forEach(val => xTotal += val);\n    return {offsets: offsets, sum: xTotal};\n}\n\n\nexport default class DotPlotCanvas extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.divRef = React.createRef();\n        this.tooltipElementRef = React.createRef();\n        this.canvas = null;\n        this.state = {saveImageEl: null};\n    }\n\n\n    redraw() {\n\n        if (this.props.data == null) {\n            return <div/>;\n        }\n        let devicePixelRatio = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            devicePixelRatio = window.devicePixelRatio;\n        }\n\n        if (this.canvas == null) {\n            let onMouseMove = (event) => {\n                const node = event.target;\n                const maxRadius = this.props.sizeScale.range()[1];\n                const rect = node.getBoundingClientRect();\n                let xy = [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n                // xy[0] /= devicePixelRatio;\n                // xy[1] /= devicePixelRatio;\n                const col = Math.floor((xy[0] - this.size.x) / (maxRadius * 2));\n                const row = Math.floor((xy[1]) / (maxRadius * 2));\n\n                if (col >= 0 && col < this.props.data[0].length && row >= 0 && row < this.props.data.length) {\n                    this.tooltipElementRef.current.innerHTML = '';\n                    const array = this.props.data[row];\n                    const mean = array[col].mean;\n                    const fractionExpressed = array[col].fractionExpressed;\n                    let meanFormatted = stripTrailingZeros(numberFormat2f(mean));\n                    let percentExpressed = stripTrailingZeros(numberFormat(100 * fractionExpressed));\n\n                    this.tooltipElementRef.current.innerHTML = 'mean: ' + meanFormatted + ', % expressed: ' + percentExpressed + ', ' + array[col].feature + ', ' + array[col].name.join(', ');\n                } else {\n                    this.tooltipElementRef.current.innerHTML = '';\n                }\n            };\n            let onMouseOut = (event) => {\n                this.tooltipElementRef.current.innerHTML = '';\n\n            };\n            this.canvas = document.createElement('canvas');\n            this.canvas.addEventListener(\"mousemove\", onMouseMove);\n            this.canvas.addEventListener(\"mouseout\", onMouseOut);\n            this.divRef.current.append(this.canvas);\n        }\n\n        const height = this.size.height + this.size.y;\n        const width = this.size.width + this.size.x;\n        let canvas = this.canvas;\n        const context = canvas.getContext('2d');\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n        context.font = CANVAS_FONT;\n\n        context\n            .clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);\n        context.scale(devicePixelRatio, devicePixelRatio);\n        this.drawContext(context, this.size);\n    }\n\n    drawContext(context, size) {\n        const data2d = this.props.data;\n        const colorScale = this.props.colorScale;\n        const categoryColorScales = this.props.categoryColorScales;\n        const sizeScale = this.props.sizeScale;\n        const drawCircles = this.props.drawCircles;\n        const textColor = this.props.textColor;\n        const maxRadius = sizeScale.range()[1];\n        let diameter = maxRadius * 2;\n        // context.strokeStyle = gridColor;\n        // context.lineWidth = gridThickness;\n\n        data2d.forEach((array, j) => { // each category\n            const ypix = j * diameter + (drawCircles ? maxRadius : 0);\n            for (let i = 0; i < array.length; i++) { // each feature\n                const mean = array[i].mean;\n                const color = colorScale(mean);\n                context.fillStyle = color;\n                context.beginPath();\n                if (drawCircles) {\n                    const xpix = i * diameter + maxRadius + size.x;\n                    const frac = array[i].fractionExpressed;\n                    context.arc(xpix, ypix, sizeScale(frac), 0, 2 * Math.PI);\n                } else {\n                    const xpix = i * diameter + size.x;\n                    context.rect(xpix, ypix, diameter, diameter);\n                }\n                context.fill();\n                // context.stroke();\n            }\n        });\n\n        context.textAlign = 'left';\n        context.textBaseline = 'middle';\n\n        data2d.forEach((array, i) => { // categories\n            let name = array[0].name;\n            const pix = i * diameter + maxRadius;\n            for (let j = 0; j < name.length; j++) {\n                // 4px, chip, 2px, text\n                let xpixstart = size.xoffsets[j - 1] || 0;\n                if (xpixstart > 0) {\n                    xpixstart += 4;\n                }\n                const categoryColorScale = categoryColorScales[j];\n                context.fillStyle = categoryColorScale(array[0].categories[j]);\n                context.beginPath();\n                context.rect(xpixstart, pix - maxRadius / 2 - 3, CHIP_SIZE, CHIP_SIZE);\n                context.fill();\n                context.stroke();\n                context.fillStyle = textColor;\n                context.fillText(name[j], xpixstart + 2 + CHIP_SIZE, pix);\n            }\n        });\n        context.textAlign = 'right';\n        context.textBaseline = 'top';\n\n        data2d[0].forEach((item, i) => { // features\n            const text = item.feature;\n            const pix = i * diameter;\n            context.save();\n            context.translate(size.x + pix + 4, size.height);\n            context.rotate(-Math.PI / 2);\n            context.fillText(text, 0, 0);\n            context.restore();\n        });\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    getSize(context) {\n        let maxFeatureWidth = 0;\n        const array2d = this.props.data;\n        array2d[0].forEach(item => {\n            maxFeatureWidth = Math.max(maxFeatureWidth, context.measureText(item.feature).width);\n        });\n        maxFeatureWidth += 4;\n\n        const nameWidth = getNameWidth(array2d, context);\n        const maxRadius = this.props.sizeScale.range()[1];\n        const diameter = maxRadius * 2;\n        const height = array2d.length * diameter + 4;\n        const width = array2d[0].length * diameter + 4;\n        return {xoffsets: nameWidth.offsets, x: nameWidth.sum, y: maxFeatureWidth, width: width, height: height};\n    }\n\n    update() {\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        context.font = CANVAS_FONT;\n        this.size = this.getSize(context);\n    }\n\n    handleSaveImageMenu = (event) => {\n        this.setState({saveImageEl: event.currentTarget});\n    };\n    handleSaveImageMenuClose = (event) => {\n        this.setState({saveImageEl: null});\n    };\n\n\n    handleSaveImage = (format) => {\n        this.setState({saveImageEl: null});\n        let context;\n\n        let canvas;\n        if (format === 'svg') {\n            context = new window.C2S(10, 10);\n            context.font = SVG_FONT;\n        } else {\n            canvas = document.createElement('canvas');\n            context = canvas.getContext('2d');\n            context.font = CANVAS_FONT;\n        }\n\n        const size = this.getSize(context);\n        const colorScaleHeight = 15 + 20;\n        const sizeScaleHeight = 40;\n        const height = size.height + size.y + colorScaleHeight + sizeScaleHeight + 10;\n        const width = Math.max(200, size.width + size.x);\n        if (format === 'svg') {\n            context = new window.C2S(width, height);\n            context.font = SVG_FONT;\n        } else {\n            canvas.width = width * window.devicePixelRatio;\n            canvas.height = height * window.devicePixelRatio;\n            context = canvas.getContext('2d');\n            context.scale(window.devicePixelRatio, window.devicePixelRatio);\n            context.font = CANVAS_FONT;\n        }\n        const textColor = this.props.textColor;\n        context.fillStyle = textColor === 'white' ? 'black' : 'white';\n        context.fillRect(0, 0, width, height);\n        this.drawContext(context, size);\n\n        // if (format !== 'svg') {\n        //     context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        // }\n\n        context.translate(4, (size.height + size.y + 4));\n        drawColorScheme(context, this.props.colorScale, textColor);\n\n        context.translate(-10, (colorScaleHeight + 4));\n\n        drawSizeLegend(context, this.props.sizeScale, 3, 150, 20, textColor);\n\n        if (format === 'svg') {\n            let svg = context.getSerializedSvg();\n            // let prefix = [];\n            // prefix.push('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n');\n            // prefix.push('<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"' +\n            //     ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n            // svg = prefix.join('') + svg;\n            let blob = new Blob([svg], {\n                type: 'text/plain;charset=utf-8'\n            });\n            window.saveAs(blob, this.props.data[0][0].dimension + '.svg');\n        } else {\n            canvas.toBlob(blob => {\n                window.saveAs(blob, this.props.data[0][0].dimension + '.png', true);\n            });\n        }\n    };\n\n    render() {\n        this.update();\n        const {saveImageEl} = this.state;\n        const array2d = this.props.data;\n        const dimension = array2d[0][0].dimension;\n\n        return (<div style={{position: 'relative'}}>\n            <div>\n                <Typography style={{display: 'inline-block'}} component={\"h4\"}\n                            color=\"textPrimary\">{dimension}{this.props.subtitle &&\n                <small>({this.props.subtitle})</small>}</Typography>\n                <Tooltip title={\"Save Image\"}>\n                    <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false}\n                                size={'small'}\n                                aria-label=\"Save Image\" onClick={this.handleSaveImageMenu}>\n                        <PhotoCameraIcon/>\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                    id=\"save-image-menu\"\n                    anchorEl={saveImageEl}\n                    keepMounted\n                    open={Boolean(saveImageEl)}\n                    onClose={this.handleSaveImageMenuClose}\n                >\n                    <MenuItem onClick={e => this.handleSaveImage('png')}>PNG</MenuItem>\n                    <MenuItem onClick={e => this.handleSaveImage('svg')}>SVG</MenuItem>\n\n                </Menu>\n\n                <Typography color=\"textPrimary\" className=\"cirro-condensed\" ref={this.tooltipElementRef} style={{\n                    display: 'inline-block',\n                    paddingLeft: 5,\n                    verticalAlign: 'top',\n                    whiteSpace: 'nowrap',\n                    width: 500,\n                    minWidth: 500,\n                    maxWidth: 500,\n                    textOverflow: 'ellipsis'\n                }}></Typography>\n\n            </div>\n            <div ref={this.divRef}></div>\n\n        </div>);\n\n    }\n}\n\n\n\n","import {quantileSorted} from 'd3-array';\n\n\n// Scott, D. W. (1992) Multivariate Density Estimation: Theory, Practice, and\n// Visualization. Wiley.\n// export function nrd(x) {\n//     let h = iqr(x) / 1.34;\n//     return 1.06 * Math.min(Math.sqrt(variance(x)), h)\n//         * Math.pow(x.length, -1 / 5);\n// }\n\n// Silverman, B. W. (1986) Density Estimation. London: Chapman and Hall.\n// export function nrd0(x) {\n//     let hi = Math.sqrt(variance(x));\n//     let lo;\n//     if (!(lo = Math.min(hi, iqr(x) / 1.34))) {\n//         (lo = hi) || (lo = Math.abs(x[1])) || (lo = 1);\n//     }\n//     return .9 * lo * Math.pow(x.length, -.2);\n// }\n\nexport function nrd0(stats) {\n    let hi = Math.sqrt(stats.variance);\n    const iqr = stats.q3 - stats.q1;\n    let lo;\n    if (!(lo = Math.min(hi, iqr / 1.34))) {\n        (lo = hi) || (lo = Math.abs(stats.x0)) || (lo = 1);\n    }\n    return .9 * lo * Math.pow(stats.n, -.2);\n}\n\nexport function boxplotStats(x) {\n    x = x.slice().sort((a, b) => a - b);\n    const q3 = quantileSorted(x, 0.75);\n    const q1 = quantileSorted(x, 0.25);\n    const q50 = quantileSorted(x, 0.5);\n    const w = 1.5;\n    let upperAdjacentValue = -Number.MAX_VALUE;\n    let lowerAdjacentValue = Number.MAX_VALUE;\n    // The upper adjacent value (UAV) is the largest observation that is\n    // less than or equal to\n    // the upper inner fence (UIF), which is the third quartile plus\n    // 1.5*IQR.\n    //\n    // The lower adjacent value (LAV) is the smallest observation that is\n    // greater than or equal\n    // to the lower inner fence (LIF), which is the first quartile minus\n    // 1.5*IQR.\n    let upperOutlier = q3 + w * (q3 - q1);\n    let lowerOutlier = q1 - w * (q3 - q1);\n    let sum = 0;\n    for (let i = 0, n = x.length; i < n; i++) {\n        const value = x[i];\n        if (value <= upperOutlier) {\n            upperAdjacentValue = Math.max(upperAdjacentValue, value);\n        }\n        if (value >= lowerOutlier) {\n            lowerAdjacentValue = Math.min(lowerAdjacentValue, value);\n        }\n        sum += value;\n    }\n    const mean = sum / x.length;\n    if (lowerAdjacentValue > q1) {\n        lowerAdjacentValue = q1;\n    }\n    if (upperAdjacentValue < q3) {\n        upperAdjacentValue = q3;\n    }\n    return {\n        mean: mean,\n        upperAdjacentValue: upperAdjacentValue,\n        lowerAdjacentValue: lowerAdjacentValue,\n        median: q50,\n        q3: q3,\n        q1: q1,\n        variance: variance(x, mean),\n        n: x.length,\n        x0: x[0]\n    };\n}\n\nfunction variance(x, mean) {\n    let sum = 0;\n    let n = x.length;\n\n    for (let i = 0; i < n; i++) {\n        const v = x[i];\n        let diff = v - mean;\n        diff = diff * diff;\n        sum += diff;\n    }\n    if (n <= 1) {\n        return NaN;\n    }\n    n = n - 1;\n    if (n < 1) {\n        n = 1;\n    }\n    return sum / n;\n}\n\n\nfunction gaussian(v) {\n    return (1 / Math.sqrt(2 * Math.PI)) * Math.exp(-0.5 * v * v);\n}\n\nfunction createKDE(bandwidth, kernel, values) {\n    const len = values.length;\n    const factor = 1 / (len * bandwidth);\n\n    return function (x) {\n        let sum = 0;\n        for (let i = 0; i < len; i++) {\n            sum += kernel((x - values[i]) / bandwidth);\n        }\n        return factor * sum;\n    };\n}\n\n\nexport function density(values, bandwidth, gridsize = 200) {\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    for (let i = 0, n = values.length; i < n; i++) {\n        const value = values[i];\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n    }\n    const span = max - min;\n    const step = span / (gridsize - 1);\n    const x = new Float32Array(gridsize);\n    const y = new Float32Array(gridsize);\n    let maxKDE = 0;\n    const kde = createKDE(bandwidth, gaussian, values);\n    for (let i = 0, j = min; i < gridsize; i++, j += step) {\n        const v = kde(j);\n        x[i] = j;\n        y[i] = v;\n        maxKDE = Math.max(maxKDE, v);\n    }\n    return {x: x, y: y, max: maxKDE};\n}\n\n","import Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport {scaleLinear} from 'd3-scale';\nimport {throttle} from 'lodash';\nimport React from 'react';\nimport {CANVAS_FONT} from './ChartUtil';\nimport {CHIP_SIZE} from './DotPlotCanvas';\n\nexport function drawFeature(context, size, feature, data, colorScale, options, drawCategories, categoryColorScales, textColor) {\n    const {violinScale, violinHeight, violinWidth, violinShowBoxplot} = options;\n    const names = data.map(array => array[0].name); // array of arrays\n    const features = data[0].map(item => item.feature);\n    const featureIndex = features.indexOf(feature);\n    let xmin = Number.MAX_VALUE;\n    let xmax = -Number.MAX_VALUE;\n    let ymax = -Number.MAX_VALUE;\n    for (let i = 0; i < names.length; i++) {\n        const item = data[i][featureIndex];\n        xmin = Math.min(xmin, item.density.x[0]);\n        xmax = Math.max(xmax, item.density.x[item.density.x.length - 1]);\n        ymax = Math.max(ymax, item.density.max);\n    }\n\n    let yscale;\n    if (violinScale === 'area') {\n        yscale = scaleLinear().domain([-ymax, ymax]).range([4, violinWidth - 4]); // horizontal position\n    }\n    const xscale = scaleLinear().domain([xmin, xmax]).range([violinHeight - 1, 1]).nice(); // vertical position\n    context.strokeStyle = textColor;\n    const boxplotWidth = 6;\n    const lineCap = context.lineCap;\n    const lineJoin = context.lineJoin;\n    for (let categoryIndex = 0; categoryIndex < names.length; categoryIndex++) {\n        context.save();\n        const item = data[categoryIndex][featureIndex];\n        if (violinScale === 'width') {\n            yscale = scaleLinear().domain([-item.density.max, item.density.max]).range([4, violinWidth - 4]); // horizontal position\n        }\n        context.lineCap = 'round';\n        context.lineJoin = 'round';\n        const density = item.density;\n        // context.fillStyle = colorScale(item.mean);\n        context.translate(size.x + categoryIndex * violinWidth, 0);\n        context.beginPath();\n        context.moveTo(yscale(density.y[0]), xscale(density.x[0]));\n\n        for (let i = 1, n = density.x.length; i < n; i++) {\n            context.lineTo(yscale(-density.y[i]), xscale(density.x[i]));\n        }\n        for (let i = density.x.length - 2; i > 0; i--) {\n            context.lineTo(yscale(density.y[i]), xscale(density.x[i]));\n        }\n        // context.closePath();\n\n        // context.fill();\n        context.stroke();\n        context.lineCap = lineCap;\n        context.lineJoin = lineJoin;\n        if (violinShowBoxplot) {\n            // iqr box\n            context.strokeRect(violinWidth / 2 - boxplotWidth / 2, xscale(item.boxplotStats.q3), boxplotWidth, xscale(item.boxplotStats.q1) - xscale(item.boxplotStats.q3));\n\n            // median\n            context.beginPath();\n            context.moveTo(violinWidth / 2 - boxplotWidth / 2, xscale(item.boxplotStats.median));\n            context.lineTo(violinWidth / 2 - boxplotWidth / 2 + boxplotWidth, xscale(item.boxplotStats.median));\n            context.stroke();\n\n            // mean\n            // context.setLineDash([2, 5]);\n            // context.beginPath();\n            // context.moveTo(violinWidth / 2 - boxplotWidth / 2, xscale(item.boxplotStats.mean));\n            // context.lineTo(violinWidth / 2 - boxplotWidth / 2 + boxplotWidth, xscale(item.boxplotStats.mean));\n            // context.stroke();\n            // context.setLineDash([]);\n\n            // line from q3 to upperAdjacentValue\n            context.beginPath();\n            context.moveTo(violinWidth / 2, xscale(item.boxplotStats.upperAdjacentValue));\n            context.lineTo(violinWidth / 2, xscale(item.boxplotStats.q3));\n            context.stroke();\n            // line from q1 to lowerAdjacentValue\n            context.beginPath();\n            context.moveTo(violinWidth / 2, xscale(item.boxplotStats.q1));\n            context.lineTo(violinWidth / 2, xscale(item.boxplotStats.lowerAdjacentValue));\n            context.stroke();\n        }\n        context.restore();\n    }\n\n\n    context.textAlign = \"right\";\n    context.textBaseline = \"middle\";\n    context.fillStyle = textColor;\n    context.strokeStyle = textColor;\n\n    const tickWidth = 4;\n    let textWidth = size.x - tickWidth;\n    // y axis\n    context.lineWidth = 0.5;\n    context.beginPath();\n    context.moveTo(textWidth + tickWidth, xscale(xscale.domain()[0]));\n    context.lineTo(textWidth + tickWidth, xscale(xscale.domain()[1]));\n    context.stroke();\n    // x axis\n    context.beginPath();\n    context.moveTo(textWidth + tickWidth, xscale(xscale.domain()[0]));\n    context.lineTo(size.width + size.x - 4, xscale(xscale.domain()[0]));\n    context.stroke();\n\n    context.lineWidth = 1;\n    const format = xscale.tickFormat(4);\n    const ticks = xscale.ticks(4);\n    ticks.forEach(tick => {\n        const pix = xscale(tick);\n        context.fillText(format(tick), textWidth, pix);\n        context.beginPath();\n        context.moveTo(textWidth, pix);\n        context.lineTo(textWidth + tickWidth, pix);\n        context.stroke();\n    });\n\n    if (drawCategories) {\n        context.textBaseline = 'middle';\n\n\n        context.textAlign = \"left\";\n        const height = violinHeight + size.y - 1;\n        for (let i = 0; i < names.length; i++) {\n            const item = data[i][featureIndex];\n            const pix = i * violinWidth + violinWidth / 2;\n            const name = names[i];\n            for (let j = 0; j < name.length; j++) {\n                // 4px, chip, 2px, text\n                let offset = size.offsets[j - 1] || 0;\n                if (offset > 0) {\n                    offset += 4;\n                }\n                const categoryColorScale = categoryColorScales[j];\n                const category = item.categories[j];\n                context.fillStyle = categoryColorScale(category);\n                context.beginPath();\n                context.rect(size.x + pix - CHIP_SIZE + 4, height - CHIP_SIZE - offset, CHIP_SIZE, CHIP_SIZE);\n                context.fill();\n                context.stroke();\n\n                context.save();\n                context.fillStyle = textColor;\n                context.translate(size.x + pix, height - offset - CHIP_SIZE - 2);\n                context.rotate(-Math.PI / 2);\n                context.fillText(name[j], 0, 0);\n                context.restore();\n            }\n        }\n    }\n\n}\n\nexport default class ViolinPlotOneFeature extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.initialized = false;\n        this.canvasRef = React.createRef();\n        this.mousemove = throttle(this.mousemove, 500);\n    }\n\n\n    mousemove = (event) => {\n        const node = event.target;\n        const rect = node.getBoundingClientRect();\n        const {data, feature, size, options} = this.props;\n        const {violinHeight, violinWidth} = options;\n        let xy = [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n        if (xy[0] < size.x || xy[1] >= violinHeight) {\n            this.props.onTooltip(null);\n        } else {\n            const col = Math.floor((xy[0] - size.x) / violinWidth);\n            const categories = data.map(array => array[0].name);\n\n            if (col >= 0 && col < categories.length) {\n                const features = data[0].map(item => item.feature);\n                const featureIndex = features.indexOf(feature);\n                this.props.onTooltip(data[col][featureIndex]);\n            } else {\n                this.props.onTooltip(null);\n            }\n        }\n    };\n\n    mouseout = (event) => {\n        this.props.onTooltip(null);\n    };\n\n    redraw() {\n        const {categoryColorScales, colorScale, data, options, feature, size, textColor} = this.props;\n        if (data == null) {\n            return;\n        }\n        const {violinHeight} = options;\n        let devicePixelRatio = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            devicePixelRatio = window.devicePixelRatio;\n        }\n\n        const canvas = this.canvasRef.current;\n        if (!this.initialized) {\n            canvas.addEventListener(\"mousemove\", this.mousemove);\n            canvas.addEventListener(\"mouseout\", this.mouseout);\n            this.initialized = true;\n        }\n\n        const height = violinHeight + size.y;\n        const width = size.width + size.x;\n        const context = canvas.getContext('2d');\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n        context.font = CANVAS_FONT;\n        context\n            .clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);\n        context.scale(devicePixelRatio, devicePixelRatio);\n        drawFeature(context, size, feature, data, colorScale, options, true, categoryColorScales, textColor);\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    render() {\n        const feature = this.props.feature;\n        return (\n            <Box borderColor=\"text.primary\" border={1}\n                 style={{display: 'inline-block', margin: 2}}>\n                <Typography color=\"textPrimary\" component={\"h4\"}\n                            style={{\n                                marginTop: '3.2px',\n                            }}>{feature}</Typography>\n                <canvas ref={this.canvasRef}></canvas>\n            </Box>);\n\n    }\n\n}\n\n\n\n\n","import {Tooltip} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport React from 'react';\nimport {CANVAS_FONT, SVG_FONT} from './ChartUtil';\nimport {drawColorScheme} from './ColorSchemeLegend';\nimport {getNameWidth} from './DotPlotCanvas';\nimport {numberFormat, numberFormat2f} from './formatters';\nimport {stripTrailingZeros} from './util';\nimport ViolinPlotOneFeature, {drawFeature} from './ViolinPlotOneFeature';\n\nconst yaxisWidth = 30;\n\n\nexport default class ViolinPlot extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.tooltipElementRef = React.createRef();\n        this.canvas = null;\n        this.state = {saveImageEl: null};\n    }\n\n\n    handleSaveImageMenu = (event) => {\n        this.setState({saveImageEl: event.currentTarget});\n    };\n    handleSaveImageMenuClose = (event) => {\n        this.setState({saveImageEl: null});\n    };\n    handleSaveImage = (format) => {\n        this.setState({saveImageEl: null});\n        let context;\n\n        let canvas;\n        if (format === 'svg') {\n            context = new window.C2S(10, 10);\n            context.font = SVG_FONT;\n        } else {\n            canvas = document.createElement('canvas');\n            context = canvas.getContext('2d');\n            context.font = CANVAS_FONT;\n        }\n\n        const size = this.getSize(context);\n\n        const colorScaleHeight = 15;\n        const height = size.totalHeight + size.y + colorScaleHeight + 20;\n        const width = Math.max(200, size.width + size.x);\n\n        if (format === 'svg') {\n            context = new window.C2S(width, height);\n            context.font = SVG_FONT;\n        } else {\n            canvas.width = width * window.devicePixelRatio;\n            canvas.height = height * window.devicePixelRatio;\n            context = canvas.getContext('2d');\n            context.scale(window.devicePixelRatio, window.devicePixelRatio);\n            context.font = CANVAS_FONT;\n        }\n        const textColor = 'black';\n        // const textColor = this.props.textColor;\n        context.fillStyle = textColor === 'white' ? 'black' : 'white';\n        context.fillRect(0, 0, width, height);\n        this.drawContext(context, size);\n        context.translate(4, (size.totalHeight + size.y + 4));\n        drawColorScheme(context, this.props.colorScale, textColor);\n\n        if (format === 'svg') {\n            let svg = context.getSerializedSvg();\n            let blob = new Blob([svg], {\n                type: 'text/plain;charset=utf-8'\n            });\n            window.saveAs(blob, this.props.data[0][0].dimension + '.svg');\n        } else {\n            canvas.toBlob(blob => {\n                window.saveAs(blob, this.props.data[0][0].dimension + '.png', true);\n            });\n        }\n    };\n\n    drawContext(context, size) {\n        const {categoryColorScales, colorScale, data, options, textColor} = this.props;\n        const {violinHeight, violinWidth} = options;\n        const features = data[0].map(item => item.feature);\n        const categories = data.map(array => array[0].name);\n        for (let i = 0; i < features.length; i++) {\n            context.save();\n            context.translate(0, violinHeight * i);\n            drawFeature(context, size, features[i], data, colorScale, options, i === features.length - 1, categoryColorScales, textColor);\n            context.textBaseline = 'top';\n            context.textAlign = \"middle\";\n            context.fillStyle = textColor;\n            context.fillText(features[i], (violinWidth * categories.length) / 2, 0);\n            context.restore();\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    onTooltip = (item) => {\n        if (item) {\n            const mean = item.mean;\n            const median = item.boxplotStats.median;\n            const fractionExpressed = item.fractionExpressed;\n            let meanFormatted = stripTrailingZeros(numberFormat2f(mean));\n            let medianFormatted = stripTrailingZeros(numberFormat2f(median));\n            let percentExpressed = stripTrailingZeros(numberFormat(100 * fractionExpressed));\n            this.tooltipElementRef.current.innerHTML = 'mean: ' + meanFormatted + ', median: ' + medianFormatted + ', % expressed: ' + percentExpressed + ', ' + item.name.join(', ');\n        } else {\n            this.tooltipElementRef.current.innerHTML = '';\n        }\n    };\n\n    getSize(context) {\n        const {data, options} = this.props;\n        const {violinHeight, violinWidth} = options;\n        const categories = data.map(array => array[0].name);\n        const features = data[0].map(item => item.feature);\n        const nameWidth = getNameWidth(data, context);\n        const totalHeight = features.length * violinHeight + 4;\n        const width = categories.length * violinWidth + 4;\n        return {x: yaxisWidth, offsets: nameWidth.offsets, y: nameWidth.sum, width: width, totalHeight: totalHeight};\n    }\n\n    render() {\n\n        const {saveImageEl} = this.state;\n        const {categoryColorScales, colorScale, data, options, textColor} = this.props;\n        const features = data[0].map(item => item.feature);\n        const dimension = data[0][0].dimension;\n        const dummyCanvas = document.createElement('canvas');\n        const dummyContext = dummyCanvas.getContext('2d');\n        dummyContext.font = CANVAS_FONT;\n        const size = this.getSize(dummyContext);\n        return (<div style={{position: 'relative'}}>\n            <div>\n                <Typography style={{display: 'inline-block'}} component={\"h4\"}\n                            color=\"textPrimary\">{dimension}{this.props.subtitle &&\n                <small>({this.props.subtitle})</small>}</Typography>\n                <Tooltip title={\"Save Image\"}>\n                    <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false}\n                                size={'small'}\n                                aria-label=\"Save Image\" onClick={this.handleSaveImageMenu}>\n                        <PhotoCameraIcon/>\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                    id=\"save-image-menu\"\n                    anchorEl={saveImageEl}\n                    keepMounted\n                    open={Boolean(saveImageEl)}\n                    onClose={this.handleSaveImageMenuClose}\n                >\n                    <MenuItem onClick={e => this.handleSaveImage('png')}>PNG</MenuItem>\n                    <MenuItem onClick={e => this.handleSaveImage('svg')}>SVG</MenuItem>\n\n                </Menu>\n\n                <Typography color=\"textPrimary\" className=\"cirro-condensed\" ref={this.tooltipElementRef} style={{\n                    display: 'inline-block',\n                    paddingLeft: 5,\n                    verticalAlign: 'top',\n                    whiteSpace: 'nowrap',\n                    width: 500,\n                    minWidth: 500,\n                    maxWidth: 500,\n                    textOverflow: 'ellipsis'\n                }}></Typography>\n\n            </div>\n            {features.map(feature => {\n                return <ViolinPlotOneFeature onTooltip={this.onTooltip}\n                                             key={feature}\n                                             feature={feature} data={data}\n                                             categoryColorScales={categoryColorScales}\n                                             options={options}\n                                             size={size}\n                                             textColor={textColor}\n                                             colorScale={colorScale}/>;\n            })}\n\n        </div>);\n\n    }\n}\n\n\n\n\n","import {InputLabel, MenuItem, Select} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport {scaleLinear, scaleSequential} from 'd3-scale';\nimport {debounce} from 'lodash';\nimport natsort from 'natsort';\nimport React from 'react';\nimport ColorSchemeSelector from './ColorSchemeSelector';\nimport DotPlotCanvas from './DotPlotCanvas';\nimport {numberFormat, numberFormat2f} from './formatters';\nimport {boxplotStats, density, nrd0} from './kde';\nimport SizeLegend from './SizeLegend';\nimport ViolinPlot from './ViolinPlot';\n\nconst styles = theme => ({\n    root: {},\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(1),\n    }\n});\n\nfunction updateNames(data, categoricalNames) {\n    const renamedDimensions = [];\n    data[0].dimensions.forEach(dimension => {\n        renamedDimensions.push(categoricalNames[dimension] || {});\n    });\n    data.forEach(item => {\n        const names = [];\n        renamedDimensions.forEach((dimension, index) => {\n            const nameMap = renamedDimensions[index];\n            let name = item.categories[index];\n            let newName = nameMap[name];\n            if (newName !== undefined) {\n                name = newName;\n            }\n            names[index] = name;\n            item.name = names;\n        });\n    });\n}\n\nfunction reshapeData(data, distributionPlotOptions) {\n    // create 2-d array with categories along rows and features along columns\n    let categoryToFeatures = {};\n    data.forEach(item => {\n        let features = categoryToFeatures[item.name];\n        if (features == null) {\n            features = [];\n            categoryToFeatures[item.name] = features;\n        }\n        features.push(item);\n    });\n    const categories = Object.keys(categoryToFeatures);\n    const dimension = data[0].dimension;\n\n    if (distributionPlotOptions.sortBy !== dimension) { // sort categories by feature\n        const category2mean = {};\n        const category2fractionExpressed = {};\n        data.forEach(item => {\n            if (item.feature === distributionPlotOptions.sortBy) {\n                category2mean[item.name] = item.mean;\n                category2fractionExpressed[item.name] = item.fractionExpressed;\n            }\n        });\n        categories.sort((a, b) => {\n            let val1 = category2mean[a];\n            let val2 = category2mean[b];\n            let c = val1 === val2 ? 0 : (val1 > val2 ? -1 : 1);\n            if (c === 0) {\n                val1 = category2fractionExpressed[a];\n                val2 = category2fractionExpressed[b];\n                c = val1 === val2 ? 0 : (val1 > val2 ? -1 : 1);\n            }\n            return c;\n        });\n\n    } else { // sort by category\n        const sorter = natsort({insensitive: true});\n        categories.sort((a, b) => {\n            return sorter(a, b);\n        });\n    }\n    let data2d = [];\n    for (let i = 0; i < categories.length; i++) {\n        let category = categories[i];\n        data2d.push(categoryToFeatures[category]);\n    }\n    return data2d;\n}\n\nfunction getMeanAndFractionRange(result) {\n    let fractionRange = [Number.MAX_VALUE, -Number.MAX_VALUE];\n    let meanRange = [Number.MAX_VALUE, -Number.MAX_VALUE];\n    result.forEach(feature => {\n        fractionRange[0] = Math.min(feature.fractionExpressed, fractionRange[0]);\n        fractionRange[1] = Math.max(feature.fractionExpressed, fractionRange[1]);\n        meanRange[0] = Math.min(feature.mean, meanRange[0]);\n        meanRange[1] = Math.max(feature.mean, meanRange[1]);\n    });\n    return {mean: meanRange, fraction: fractionRange};\n}\n\nclass DistributionGroup extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {min: '', max: '', minSize: '', sizeMax: ''};\n        this.updateMinSize = debounce(this.updateMinSize, 500);\n        this.updateMaxSize = debounce(this.updateMaxSize, 500);\n        this.updateMin = debounce(this.updateMin, 500);\n        this.updateMax = debounce(this.updateMax, 500);\n    }\n\n    onMinChange = (event) => {\n        this.setState({min: event.target.value});\n        this.updateMin(event.target.value);\n    };\n\n    updateMin = (value) => {\n        this.props.onDistributionPlotOptions({min: parseFloat(value)});\n    };\n\n    onMaxChange = (event) => {\n        this.setState({max: event.target.value});\n        this.updateMax(event.target.value);\n    };\n\n    updateMax = (value) => {\n        this.props.onDistributionPlotOptions({max: parseFloat(value)});\n    };\n\n\n    onMinSizeChange = (event) => {\n        this.setState({minSize: event.target.value});\n        this.updateMinSize(event.target.value);\n    };\n\n    updateMinSize = (value) => {\n        value = parseFloat(value);\n        if (value > 1) {\n            value /= 100; // fraction\n        }\n        this.props.onDistributionPlotOptions({minSize: value});\n    };\n\n\n    onSortOrderChanged = (event) => {\n        this.props.onDistributionPlotOptions({sortBy: event.target.value});\n    };\n\n    onMaxSizeChange = (event) => {\n        this.setState({sizeMax: event.target.value});\n        this.updateMaxSize(event.target.value);\n    };\n\n    updateMaxSize = (value) => {\n        value = parseFloat(value);\n        if (value > 1) {\n            value /= 100; // fraction\n        }\n        this.props.onDistributionPlotOptions({maxSize: value});\n    };\n\n\n    render() {\n\n        const {\n            textColor,\n            categoryColorScales,\n            distributionData,\n            distributionPlotOptions,\n            categoricalNames,\n            selectedData,\n            interpolator\n        } = this.props;\n        if (distributionData == null || distributionData.length === 0) {\n            return null;\n        }\n        const meanAndFractionRange = getMeanAndFractionRange(distributionData);\n        const meanRange = meanAndFractionRange.mean;\n        const fractionRange = meanAndFractionRange.fraction;\n        if (selectedData != null && selectedData.length > 0) {\n            const selectedMeanAndFractionRange = getMeanAndFractionRange(selectedData);\n            meanRange[0] = Math.min(meanRange[0], selectedMeanAndFractionRange.mean[0]);\n            meanRange[1] = Math.max(meanRange[1], selectedMeanAndFractionRange.mean[1]);\n            fractionRange[0] = Math.min(fractionRange[0], selectedMeanAndFractionRange.fraction[0]);\n            fractionRange[1] = Math.max(fractionRange[1], selectedMeanAndFractionRange.fraction[1]);\n        }\n        if (meanRange[0] === meanRange[1]) {\n            meanRange[1]++;\n        }\n        if (fractionRange[0] === fractionRange[1]) {\n            fractionRange[0] = 0;\n            fractionRange[1] = 1;\n        }\n        if (meanRange[0] > 0) {\n            meanRange[0] = 0;\n        }\n        if (fractionRange[0] > 0) {\n            fractionRange[0] = 0;\n        }\n        if (fractionRange[1] < 1) {\n            fractionRange[1] = 1;\n        }\n\n        if (distributionPlotOptions.min != null && !isNaN(distributionPlotOptions.min)) {\n            meanRange[0] = distributionPlotOptions.min;\n        }\n        if (distributionPlotOptions.max != null && !isNaN(distributionPlotOptions.max)) {\n            meanRange[1] = distributionPlotOptions.max;\n        }\n\n        if (distributionPlotOptions.minSize != null && !isNaN(distributionPlotOptions.minSize)) {\n            fractionRange[0] = distributionPlotOptions.minSize;\n        }\n\n        if (distributionPlotOptions.maxSize != null && !isNaN(distributionPlotOptions.maxSize)) {\n            fractionRange[1] = distributionPlotOptions.maxSize;\n        }\n        if (distributionPlotOptions.sortBy == null) {\n            distributionPlotOptions.sortBy = distributionData[0].dimension;\n        }\n        if (distributionPlotOptions.sortBy !== distributionData[0].dimension) {\n            // ensure valid feature\n            let found = false;\n            for (let i = 0; i < distributionData.length; i++) {\n                if (distributionData[i].feature === distributionPlotOptions.sortBy) {\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                distributionPlotOptions.sortBy = distributionData[0].dimension;\n            }\n        }\n        const chartType = distributionPlotOptions.chartType;\n        const maxRadius = 9;\n        const minRadius = 1;\n        const colorScale = scaleSequential(interpolator.value).domain(meanRange).clamp(true);\n        const sizeScale = scaleLinear().domain(fractionRange).range([minRadius, maxRadius]).clamp(true);\n        let colorMin = numberFormat(colorScale.domain()[0]);\n        let colorMax = numberFormat(colorScale.domain()[1]);\n        if (colorMin === colorMax) {\n            colorMin = numberFormat2f(colorScale.domain()[0]);\n            colorMax = numberFormat2f(colorScale.domain()[1]);\n        }\n        updateNames(distributionData, categoricalNames);\n        if (selectedData) {\n            updateNames(selectedData, categoricalNames);\n        }\n        const data = reshapeData(distributionData, distributionPlotOptions);\n        const features = data[0].map(item => item.feature);\n        if (chartType === 'violin') {\n            const allData = selectedData ? distributionData.concat(selectedData) : distributionData;\n            features.forEach((feature) => {\n                // // ensure density is computed\n                // const summary = globalFeatureSummary[feature];\n                // if (summary.bandwidth == null) {\n                //     summary.bandwidth = nrd0(cachedData[feature]);\n                // }\n                //  const bandwidth = summary.bandwidth;\n                allData.forEach(item => {\n                    if (item.feature === feature && item.density == null) {\n                        const vector = item.vector;\n                        const values = new Float32Array(vector.size());\n                        for (let k = 0, n = values.length; k < n; k++) {\n                            values[k] = vector.get(k);\n                        }\n                        item.boxplotStats = boxplotStats(values);\n                        const bandwidth = nrd0(item.boxplotStats);\n                        item.bandwidth = bandwidth;\n                        item.density = density(values, bandwidth);\n                    }\n                });\n            });\n        }\n\n        const sortChoices = [distributionData[0].dimension].concat(features);\n\n        return (\n            <React.Fragment>\n                {chartType !== 'violin' && <DotPlotCanvas\n                    categoryColorScales={categoryColorScales}\n                    colorScale={colorScale}\n                    sizeScale={sizeScale}\n                    textColor={textColor}\n                    drawCircles={chartType === 'dotplot'}\n                    data={data}/>}\n                {chartType === 'violin' && <ViolinPlot\n                    categoryColorScales={categoryColorScales}\n                    colorScale={colorScale}\n                    textColor={textColor}\n                    options={distributionPlotOptions}\n                    textColor={textColor}\n                    data={data}/>}\n\n                {chartType !== 'violin' && selectedData != null && selectedData.length > 0 ?\n                    <DotPlotCanvas\n                        categoryColorScales={categoryColorScales}\n                        colorScale={colorScale}\n                        sizeScale={sizeScale}\n                        subtitle=\"selection\"\n                        textColor={textColor}\n                        drawCircles={chartType === 'dotplot'}\n                        data={reshapeData(selectedData, distributionPlotOptions)}/> : null}\n                {chartType === 'violin' && selectedData != null && selectedData.length > 0 ?\n                    <ViolinPlot\n                        categoryColorScales={categoryColorScales}\n                        colorScale={colorScale}\n                        subtitle=\"selection\"\n                        options={distributionPlotOptions}\n                        textColor={textColor}\n                        data={reshapeData(selectedData, distributionPlotOptions)}/> : null}\n                {chartType !== 'violin' && <React.Fragment>\n                    <ColorSchemeSelector handleInterpolator={this.props.handleInterpolator}\n                                         interpolator={interpolator}/>\n                    <div style={{color: textColor, width: 174}}><Typography\n                        variant={\"caption\"}>{colorMin}</Typography><Typography\n                        variant={\"caption\"}\n                        style={{float: 'right'}}>{colorMax}</Typography></div>\n                    <InputLabel shrink={true} variant={\"standard\"}>Custom Mean</InputLabel>\n                    <TextField\n                        InputLabelProps={{shrink: true}} style={{width: 90, marginRight: 4}}\n                        size=\"small\" type=\"text\"\n                        onChange={this.onMinChange} label={\"Min\"}\n                        value={this.state.min}/>\n                    <TextField InputLabelProps={{shrink: true}} style={{width: 90}} size=\"small\"\n                               type=\"text\"\n                               onChange={this.onMaxChange} label={\"Max\"}\n                               value={this.state.max}/>\n                </React.Fragment>}\n                {chartType === 'dotplot' && <div style={{paddingTop: 16}}>\n                    <SizeLegend style={{display: 'block'}}\n                                width={150}\n                                textColor={textColor}\n                                label={true} height={40}\n                                scale={sizeScale}/>\n                    <InputLabel style={{marginTop: 16}} shrink={true} variant={\"standard\"}>Custom Percent\n                        Expressed</InputLabel>\n                    <TextField InputLabelProps={{shrink: true}} style={{width: 90, marginRight: 4}}\n                               size=\"small\" type=\"text\"\n                               onChange={this.onMinSizeChange} label={\"Min\"}\n                               value={this.state.minSize}/>\n                    <TextField InputLabelProps={{shrink: true}} style={{width: 90}} size=\"small\" type=\"text\"\n                               onChange={this.onMaxSizeChange} label={\"Max\"}\n                               value={this.state.maxSize}/>\n                </div>}\n\n\n                <FormControl className={this.props.classes.formControl}>\n                    <InputLabel shrink={true}>Sort By</InputLabel>\n                    <Select\n                        input={<Input size={\"small\"}/>}\n                        onChange={this.onSortOrderChanged}\n                        value={distributionPlotOptions.sortBy}\n                    >\n                        {sortChoices.map(item => (\n                            <MenuItem key={item} value={item}>{item}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default withStyles(styles)(DistributionGroup);\n","import {scaleOrdinal} from 'd3-scale';\nimport {schemeCategory10} from 'd3-scale-chromatic';\nimport {groupBy} from 'lodash';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setDistributionPlotInterpolator, setDistributionPlotOptions} from './actions';\nimport DistributionGroup from './DistributionGroup';\n\n\nclass DistributionPlots extends React.PureComponent {\n    render() {\n        const {\n            cachedData,\n            categoricalNames,\n            chartOptions,\n            distributionData,\n            distributionPlotOptions,\n            dotPlotInterpolator,\n            embeddingData,\n            globalFeatureSummary,\n            handleInterpolator,\n            onDistributionPlotOptions,\n            selectedDistributionData\n        } = this.props;\n\n        if (distributionData.length === 0) {\n            return <h4>Please enter one or more categorical observations and one or more features.</h4>;\n        }\n        const textColor = chartOptions.darkMode ? 'white' : 'black';\n        let dimension2data = groupBy(distributionData, 'dimension');\n        let dimension2selecteddata = groupBy(selectedDistributionData, 'dimension');\n\n\n        return <React.Fragment>{Object.keys(dimension2data).map(dimension => {\n            const data = dimension2data[dimension];\n            const categoryColorScales = [];\n            data[0].dimensions.forEach(dimension => {\n                let found = false;\n                for (let i = 0; i < embeddingData.length; i++) {\n                    if (dimension === embeddingData[i].name) {\n                        categoryColorScales.push(embeddingData[i].colorScale); // TODO make color scale independent of embedding\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    categoryColorScales.push(scaleOrdinal(schemeCategory10)); // TODO make color scale independent of embedding\n                }\n\n            });\n            return <DistributionGroup key={dimension}\n                                      cachedData={cachedData}\n                                      categoryColorScales={categoryColorScales}\n                                      distributionData={data}\n                                      globalFeatureSummary={globalFeatureSummary}\n                                      selectedData={dimension2selecteddata[dimension]}\n                                      interpolator={dotPlotInterpolator}\n                                      handleInterpolator={handleInterpolator}\n                                      onDistributionPlotOptions={onDistributionPlotOptions}\n                                      distributionPlotOptions={distributionPlotOptions}\n                                      categoricalNames={categoricalNames}\n                                      textColor={textColor}/>;\n        })}</React.Fragment>;\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        cachedData: state.cachedData,\n        categoricalNames: state.categoricalNames,\n        chartOptions: state.chartOptions,\n        distributionData: state.distributionData,\n        distributionPlotOptions: state.distributionPlotOptions,\n        dotPlotInterpolator: state.dotPlotInterpolator,\n        embeddingData: state.embeddingData,\n        globalFeatureSummary: state.globalFeatureSummary,\n        selectedDistributionData: state.selectedDistributionData\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDistributionPlotOptions: (payload) => {\n            dispatch(setDistributionPlotOptions(payload));\n        },\n        handleInterpolator: value => {\n            dispatch(setDistributionPlotInterpolator(value));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DistributionPlots));\n\n","import {CircularProgress, InputLabel} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Link from '@material-ui/core/Link';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {connect} from 'react-redux';\nimport {EDIT_DATASET_DIALOG, saveDataset, setDialog, setMessage} from './actions';\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`editor-tabpanel-${index}`}\n            aria-labelledby={`editor-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\n\nfunction getUniqueArray(text) {\n    let tokens = text.split(',');\n    let values = new Set();\n    for (let i = 0; i < tokens.length; i++) {\n        let s = tokens[i].trim().toLowerCase();\n        if (s !== '') {\n            values.add(s);\n        }\n    }\n    return Array.from(values);\n}\n\nclass EditDatasetDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n            tabValue: 0,\n            name: this.props.dataset != null ? this.props.dataset.name : '',\n            title: this.props.title != null ? (this.props.dataset.title != null ? this.props.dataset.title : '') : '',\n            description: this.props.dataset != null ? (this.props.dataset.description != null ? this.props.dataset.description : '') : '',\n            readers: '',\n            loading: this.props.dataset != null,\n        };\n    }\n\n\n    componentDidMount() {\n\n        if (this.props.dataset != null) {\n            let readers = this.props.dataset.readers;\n            if (readers) {\n                let myIndex = readers.indexOf(this.props.email);\n                if (myIndex !== -1) {\n                    readers.splice(myIndex, 1);\n                }\n                readers = readers.join(', ');\n            }\n            this.setState({\n                name: this.props.dataset.name,\n                description: this.props.dataset.description != null ? this.props.dataset.description : '',\n                title: this.props.dataset.title != null ? this.props.dataset.title : '',\n                loading: false,\n                url: this.props.dataset.url,\n                readers: readers,\n            });\n\n        }\n    }\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        let name = this.state.name.trim();\n        let url = this.state.url.trim();\n        if (name === '' || url === '') {\n            return;\n        }\n        let description = this.state.description.trim();\n        let title = this.state.title.trim();\n        this.setState({loading: true});\n\n        let readers = null;\n        if (this.state.readers != null) {\n            readers = getUniqueArray(this.state.readers);\n        }\n        this.props.handleSave({\n            dataset: this.props.dataset,\n            name: name,\n            title: title,\n            description: description,\n            url: url,\n            readers: readers\n        });\n    };\n\n    onTabChanged = (event, value) => {\n        this.setState({tabValue: value});\n    };\n    onEmailChanged = (event) => {\n        this.setState({readers: event.target.value});\n    };\n    onUrlChanged = (event) => {\n        this.setState({url: event.target.value});\n    };\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n    onDescriptionChanged = (event) => {\n        this.setState({description: event.target.value});\n    };\n    onTitleChanged = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'lg'}\n            >\n                <DialogTitle id=\"edit-dataset-dialog-title\">{this.props.dataset == null\n                    ? 'New'\n                    : 'Edit'} Dataset</DialogTitle>\n                <DialogContent>\n                    {this.state.loading && <CircularProgress/>}\n                    <TextField\n                        disabled={this.state.loading}\n                        autoComplete=\"off\"\n                        required={true}\n                        value={this.state.name}\n                        helperText={\"asfd\"}\n                        onChange={this.onNameChanged}\n                        margin=\"dense\"\n                        label=\"Name\"\n                        fullWidth\n                    />\n\n                    {!this.state.loading &&\n                    <TextField\n                        required={true}\n                        autoComplete=\"off\"\n                        value={this.state.url}\n                        onChange={this.onUrlChanged}\n                        margin=\"dense\"\n                        helperText={this.props.serverInfo.email ? \"Please ensure that \" + this.props.serverInfo.email + \" has \\\"Storage Object Viewer\\\" permissions\" : ''}\n                        label={\"URL (\" + (this.props.serverInfo.email ? \"gs://my_bucket/my_dataset\" : \"/Users/foo/my_dataset\") + \")\"}\n                        fullWidth\n                    />}\n\n                    <TextField\n                        disabled={this.state.loading}\n                        autoComplete=\"off\"\n                        required={false}\n                        value={this.state.title}\n                        onChange={this.onTitleChanged}\n                        margin=\"dense\"\n                        label=\"Title\"\n                        fullWidth\n                        inputProps={{maxLength: 255}}\n                    />\n                    <div>\n                        <FormControl>\n                            <InputLabel>Summary</InputLabel>\n                            <div style={{marginTop: 36}}></div>\n                            <FormHelperText><Link\n                                href={\"https://www.markdownguide.org/cheat-sheet/\"}\n                                target=\"_blank\">Markdown Cheat Sheet</Link></FormHelperText>\n                        </FormControl>\n\n                    </div>\n\n                    <Tabs value={this.state.tabValue} onChange={this.onTabChanged}\n                          aria-label=\"description-editor\">\n                        <Tab label=\"Write\"/>\n                        <Tab label=\"Preview\"/>\n                    </Tabs>\n\n                    <TabPanel value={this.state.tabValue} index={0}>\n                        <TextField\n                            disabled={this.state.loading}\n                            autoComplete=\"off\"\n                            required={false}\n                            value={this.state.description}\n                            onChange={this.onDescriptionChanged}\n                            margin=\"dense\"\n                            fullWidth\n                            variant=\"outlined\"\n                            rows={8}\n                            rowsMax={8}\n                            multiline={true}\n                            inputProps={{maxLength: 1000}}\n                        />\n                    </TabPanel>\n                    <TabPanel value={this.state.tabValue} index={1}>\n                        {this.state.description !== '' && <Box border={1}>\n                            <ReactMarkdown linkTarget=\"_blank\" children={this.state.description}/>\n                        </Box>}\n                    </TabPanel>\n\n\n                    {!this.state.loading && this.props.serverInfo.clientId !== '' &&\n                    <TextField\n                        value={this.state.readers}\n                        onChange={this.onEmailChanged}\n                        margin=\"dense\"\n                        label=\"Share\"\n                        helperText=\"Enter comma separated list of emails\"\n                        fullWidth\n                        multiline\n                    />}\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={this.state.loading} onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={this.state.loading} onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n\n\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dialog === EDIT_DATASET_DIALOG ? state.dataset : null,\n        email: state.email,\n        serverInfo: state.serverInfo,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveDataset(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(EditDatasetDialog));\n\n","import {Tooltip} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport natsort from 'natsort';\nimport React from 'react';\nimport {intFormat, numberFormat} from './formatters';\n\nclass CategoricalLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contextmenuEl: null,\n            anchorEl: null,\n            color: null,\n            name: '',\n            categoryValue: null,\n            forceUpdate: false,\n            menu: null\n        };\n    }\n\n\n    handlePopoverClose = (e) => {\n        this.setState({contextmenuEl: null, anchorEl: null});\n    };\n\n    handleColorChange = (e) => {\n        this.setState({color: e.target.value});\n    };\n    handleNameChange = (e) => {\n        this.setState({name: e.target.value});\n    };\n\n    handleColorChangeApply = (e) => {\n        this.props.handleColorChange({\n            name: this.props.name,\n            value: this.state.categoryValue,\n            color: this.state.color\n        });\n        this.setState({forceUpdate: !this.state.forceUpdate});\n    };\n    handleNameChangeApply = (e) => {\n        this.props.handleNameChange({\n            name: this.props.name,\n            oldValue: this.state.categoryValue,\n            value: this.state.name\n        });\n        this.setState({name: '', contextmenuEl: null, anchorEl: null});\n    };\n\n    handleEditColor = (e) => {\n        this.setState((prevState, props) => ({\n            anchorEl: prevState.contextmenuEl,\n            contextmenuEl: null,\n            menu: 'color'\n        }), () => {\n            // this.inputElement.click();\n        });\n    };\n    handleEditName = (e) => {\n        this.setState((prevState, props) => ({\n            anchorEl: prevState.contextmenuEl,\n            contextmenuEl: null,\n            menu: 'name',\n            name: ''\n        }), () => {\n            // this.inputElement.click();\n        });\n    };\n\n    handleContextmenuClose = (e) => {\n        this.setState({contextmenuEl: null});\n    };\n\n    handleClick = (value, index, e) => {\n        if (this.props.clickEnabled) {\n            e.preventDefault();\n            this.props.handleClick({name: this.props.name, value: value, shiftKey: e.shiftKey, metaKey: e.metaKey});\n        }\n    };\n\n    handleContextmenu = (value, index, e) => {\n        if (this.props.clickEnabled) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.setState({contextmenuEl: e.target, categoryValue: value, color: this.props.scale(value)});\n        }\n    };\n\n\n    render() {\n        const {\n            scale,\n            datasetFilter,\n            name,\n            featureSummary,\n            maxHeight,\n            globalFeatureSummary,\n            nObs,\n            nObsSelected,\n            categoricalNames\n        } = this.props;\n        let clickEnabled = this.props.clickEnabled;\n        const categoricalFilterValues = datasetFilter[name];\n        const selectionSummary = featureSummary[name];\n        let selectedDimensionToCount = {};\n        if (selectionSummary != null) {\n            for (let i = 0; i < selectionSummary.counts.length; i++) {\n                selectedDimensionToCount[selectionSummary.categories[i]] = selectionSummary.counts[i];\n            }\n        }\n        const globalDimensionSummary = globalFeatureSummary[name];\n        // if (globalDimensionSummary.max == null) {\n        //     let max = 0;\n        //     let min = Number.MAX_VALUE;\n        //     for (let i = 0; i < globalDimensionSummary.counts.length; i++) {\n        //         max = Math.max(max, globalDimensionSummary[i]);\n        //         min = Math.min(min, globalDimensionSummary[i]);\n        //     }\n        //     globalDimensionSummary.min = min;\n        //     globalDimensionSummary.max = max;\n        // }\n        const categories = globalDimensionSummary.categories;\n        const renamedCategories = categoricalNames[name] || {};\n        const sorter = natsort({insensitive: true});\n        categories.sort((a, b) => {\n            let renamed1 = renamedCategories[a];\n            if (renamed1 != null) {\n                a = renamed1;\n            }\n            let renamed2 = renamedCategories[b];\n            if (renamed2 != null) {\n                b = renamed2;\n            }\n            return sorter(a, b);\n        });\n\n        clickEnabled = clickEnabled && categories.length > 1;\n        let style = {maxHeight: maxHeight, display: 'inline-block'};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n\n        let renamedCategoryValue = renamedCategories[this.state.categoryValue] || this.state.categoryValue;\n        return (\n            <div className=\"cirro-chart-legend\" style={style}>\n                <Dialog open={Boolean(this.state.anchorEl)} onClose={this.handlePopoverClose}\n                        aria-labelledby=\"edit-category-dialog-title\">\n\n                    {Boolean(this.state.anchorEl) && this.state.menu == 'color' && <React.Fragment>\n                        <DialogTitle id=\"edit-category-dialog-title\">Edit {renamedCategoryValue} Color</DialogTitle>\n                        <DialogContent>\n                            <input type=\"color\" value={this.state.color}\n                                   onChange={this.handleColorChange} style={{width: 100}}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handlePopoverClose} color=\"primary\">\n                                Close\n                            </Button>\n                            <Button onClick={this.handleColorChangeApply} color=\"primary\">\n                                Apply\n                            </Button>\n                        </DialogActions>\n                    </React.Fragment>}\n                    {Boolean(this.state.anchorEl) && this.state.menu == 'name' && <React.Fragment>\n                        <DialogTitle id=\"edit-category-dialog-title\">Edit {renamedCategoryValue} Name</DialogTitle>\n                        <DialogContent>\n                            <TextField type=\"text\" onChange={this.handleNameChange} value={this.state.name}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handlePopoverClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleNameChangeApply} color=\"primary\">\n                                OK\n                            </Button>\n                        </DialogActions>\n                    </React.Fragment>}\n                </Dialog>\n\n                {/*<Popover*/}\n                {/*    open={Boolean(this.state.anchorEl)}*/}\n                {/*    anchorEl={this.state.anchorEl}*/}\n                {/*    onClose={this.handlePopoverClose}*/}\n                {/*    anchorOrigin={{*/}\n                {/*        vertical: 'bottom',*/}\n                {/*        horizontal: 'center',*/}\n                {/*    }}*/}\n                {/*    transformOrigin={{*/}\n                {/*        vertical: 'top',*/}\n                {/*        horizontal: 'center',*/}\n                {/*    }}*/}\n                {/*>*/}\n                {/*    <Typography>Edit {this.state.categoryValue} Color</Typography>*/}\n                {/*    <input ref={input => this.inputElement = input} type=\"color\" value={this.state.color}*/}\n                {/*           onChange={this.handleColorChange} style={{width: 100}}/>*/}\n                {/*    <Button onClick={handleClose} color=\"primary\">*/}\n                {/*        Cancel*/}\n                {/*    </Button>*/}\n                {/*    <Button onClick={handleClose} color=\"primary\">*/}\n                {/*        Apply*/}\n                {/*    </Button>*/}\n                {/*</Popover>*/}\n                <Menu\n                    anchorEl={this.state.contextmenuEl}\n                    open={Boolean(this.state.contextmenuEl)}\n                    onClose={this.handleContextmenuClose}\n                >\n                    <MenuItem onClick={this.handleEditName}>Edit Name</MenuItem>\n                    <MenuItem onClick={this.handleEditColor}>Edit Color</MenuItem>\n\n                </Menu>\n                <table style={{textAlign: 'left'}}>\n                    <thead>\n                    <tr>\n                        {clickEnabled && <td></td>}\n                        <td></td>\n                        <td><small>{'all'}</small></td>\n                        <td><small>{selectionSummary != null ? 'selection' : null}</small></td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {categories.map((category, i) => {\n\n                        const opacity = categoricalFilterValues == null || categoricalFilterValues.indexOf(category) !== -1 ? 1 : 0.4;\n                        // const fractionUnselected = unselectedCategoryCounts != null ? unselectedCategoryCounts[i] / unselectedTotal : null;\n                        // const unselectedSize = unselectedCategoryCounts == null ? 0 : fractionScale(fractionUnselected);\n                        // const unselectedTitle = unselectedCategoryCounts == null ? null : intFormat(unselectedCategoryCounts[i]) + ' / ' + intFormat(unselectedTotal) + (unselectedCategoryCounts[i] > 0 ? (' ( ' + numberFormat(100 * fractionUnselected) + '%)') : '');\n                        const categoryCount = globalDimensionSummary.counts[i];\n                        const selectedCategoryCount = selectedDimensionToCount[category] || 0;\n\n                        //            not-selected, selected\n                        // in category      a       b\n                        // not in category  c       d\n                        const a = categoryCount - selectedCategoryCount;\n                        const b = selectedCategoryCount;\n                        const c = nObs - nObsSelected - selectedCategoryCount;\n                        const d = nObsSelected - selectedCategoryCount;\n                        // const pValue = fisherTest(a, b, c, d);\n\n                        const fractionSelected = selectionSummary == null ? 0 : selectedCategoryCount / nObsSelected;\n                        // const selectedSize = fractionScale(fractionSelected);\n                        // const globalSize = fractionScale(count / nObs);\n                        const globalTitle = numberFormat(100 * categoryCount / nObs) + '%';\n                        let categoryText = category;\n                        let renamed = renamedCategories[category];\n                        if (renamed !== undefined) {\n                            categoryText = renamed;\n                        }\n                        const selectionTitle = selectionSummary == null ? null : numberFormat(100 * fractionSelected) + '%';\n                        return <tr\n                            style={{cursor: clickEnabled ? 'pointer' : null, opacity: opacity}}\n                            onContextMenu={(e) => this.handleContextmenu(category, i, e)}\n                            onClick={(e) => this.handleClick(category, i, e)} key={category}>\n                            {clickEnabled && <td>\n                                <div style={{\n                                    display: 'inline-block',\n                                    width: 10,\n                                    height: 10,\n                                    background: scale(category)\n                                }}/>\n\n                            </td>}\n                            <td>\n                                <div style={{\n                                    maxWidth: 140,\n                                    textOverflow: 'ellipsis',\n                                    overflow: 'hidden',\n                                    display: 'inline-block',\n                                    userSelect: 'none'\n                                }} title={'' + categoryText}>{'' + categoryText}</div>\n                                <IconButton style={{padding: 0, fontSize: 14}} size=\"small\"\n                                            onClick={(e) => this.handleContextmenu(category, i, e)} aria-label=\"Menu\"\n                                            aria-haspopup=\"true\">\n                                    <ArrowDropDownIcon fontSize={\"inherit\"}/>\n                                </IconButton>\n                            </td>\n\n                            <td>\n                                <Tooltip title={globalTitle}>\n                                    <span>{intFormat(categoryCount)}</span>\n                                </Tooltip>\n\n                                {/*<div*/}\n                                {/*    title={globalTitle}*/}\n                                {/*    style={{*/}\n                                {/*        display: 'inline-block',*/}\n                                {/*        position: 'relative',*/}\n                                {/*        width: maxSize,*/}\n                                {/*        border: '1px solid black',*/}\n                                {/*        height: 9*/}\n                                {/*    }}>*/}\n\n                                {/*    <div style={{*/}\n                                {/*        position: 'absolute',*/}\n                                {/*        width: globalSize,*/}\n                                {/*        left: 0,*/}\n                                {/*        top: 0,*/}\n                                {/*        backgroundColor: 'LightGrey',*/}\n                                {/*        height: 9*/}\n                                {/*    }}/>*/}\n                                {/*</div>*/}\n                            </td>\n                            {selectionSummary && <td>\n                                <Tooltip title={selectionTitle}>\n                                    <div>{intFormat(selectedCategoryCount)}</div>\n                                </Tooltip>\n                                {/*<div*/}\n                                {/*    title={selectionTitle}*/}\n                                {/*    style={{*/}\n                                {/*        display: 'inline-block',*/}\n                                {/*        position: 'relative',*/}\n                                {/*        width: maxSize,*/}\n                                {/*        border: '1px solid black',*/}\n                                {/*        height: 9*/}\n                                {/*    }}>*/}\n\n                                {/*    <div style={{*/}\n                                {/*        position: 'absolute',*/}\n                                {/*        width: selectedSize,*/}\n                                {/*        left: 0,*/}\n                                {/*        top: 0,*/}\n                                {/*        backgroundColor: 'LightGrey',*/}\n                                {/*        height: 9*/}\n                                {/*    }}/>*/}\n                                {/*</div>*/}\n                            </td>}\n                        </tr>;\n                    })\n                    }</tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default CategoricalLegend;\n\n\n","import React from 'react';\nimport {numberFormat, numberFormat0} from './formatters';\n\n\nclass ContinuousLegend extends React.PureComponent {\n\n\n    getTable(summaryNames, selectionSummary, globalSummary) {\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <td></td>\n                    {summaryNames.map(summaryName => {\n                        return <td key={summaryName}><small>{summaryName}</small></td>;\n                    })}\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td style={{textAlign: 'right'}}>{'Mean'}:</td>\n                    <td>{numberFormat(globalSummary.mean)}</td>\n                    {selectionSummary && <td>{numberFormat(selectionSummary.mean)}</td>}\n                </tr>\n\n                {globalSummary.numExpressed != null && <tr>\n                    <td style={{textAlign: 'right'}}>{'% Expressed'}:</td>\n                    <td>{numberFormat0(100 * globalSummary.numExpressed / this.props.nObs)}</td>\n                    {selectionSummary &&\n                    <td>{numberFormat0(100 * selectionSummary.numExpressed / this.props.nObsSelected)}</td>}\n                </tr>}\n                {(globalSummary.numExpressed == null || globalSummary.min !== 0) && <tr>\n                    <td style={{textAlign: 'right'}}>{'Min'}:</td>\n                    <td>{numberFormat(globalSummary.min)}</td>\n                    {selectionSummary && <td>{numberFormat(selectionSummary.min)}</td>}\n                </tr>}\n                <tr>\n                    <td style={{textAlign: 'right'}}>{'Max'}:</td>\n                    <td>{numberFormat(globalSummary.max)}</td>\n                    {selectionSummary && <td>{numberFormat(selectionSummary.max)}</td>}\n                </tr>\n\n                </tbody>\n\n            </table>\n        );\n    }\n\n    render() {\n        const {name, featureSummary, globalFeatureSummary} = this.props;\n        const selectionSummary = featureSummary[name];\n        const globalSummary = globalFeatureSummary[name];\n        const summaryNames = ['all'];\n        // TODO compute unselected mean and % expressed from globals\n        if (selectionSummary != null) {\n            summaryNames.push('selection');\n            //  summaryNames.push('rest');\n        }\n\n        return (\n            <React.Fragment>\n                {globalSummary != null && name !== '__count' && this.getTable(summaryNames, selectionSummary, globalSummary)}\n            </React.Fragment>);\n    }\n}\n\nexport default ContinuousLegend;\n\n\n","import {InputLabel} from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport {debounce} from 'lodash';\nimport React from 'react';\n\n\nclass MeasureFilter extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.handleValueUpdate = debounce(this.handleValueUpdate, 500);\n    }\n\n    getFilter() {\n        let filter = this.props.datasetFilter[this.props.name];\n        if (filter == null) {\n            filter = {operation: \">\", value: NaN, uiValue: \"\"};\n            this.props.datasetFilter[this.props.name] = filter;\n        }\n        return filter;\n    }\n\n    handleOperationChanged = (event) => {\n        const operation = event.target.value;\n        this.props.handleUpdate({name: this.props.name, operation: operation, update: true});\n    };\n\n    handleValueUpdate = () => {\n        const filter = this.getFilter();\n        let value = parseFloat(filter.uiValue);\n        this.props.handleUpdate({name: this.props.name, value: value, update: true});\n\n    };\n\n    handleValueChange = (event) => {\n        const filter = this.getFilter();\n        filter.uiValue = event.target.value;\n        this.props.handleUpdate({\n            name: this.props.name,\n            operation: filter.operation,\n            value: filter.value,\n            update: false\n        });\n        this.handleValueUpdate();\n    };\n\n    render() {\n        const {name} = this.props;\n        const filter = this.getFilter();\n        const id = name + '_filter';\n\n        return (\n\n            <div style={{display: 'flex'}}>\n                <InputLabel shrink={true} id={id + '_label'}>Filter</InputLabel>\n\n                <Select\n                    labelId={id + '_label'}\n                    id={id}\n                    style={{marginRight: 6}}\n                    value={filter.operation}\n                    onChange={this.handleOperationChanged}\n                >\n                    <MenuItem value={\"\"}></MenuItem>\n                    <MenuItem value={\">\"}>{\">\"}</MenuItem>\n                    <MenuItem value={\"<\"}>{\"<\"}</MenuItem>\n                    <MenuItem value={\"=\"}>{\"=\"}</MenuItem>\n                    <MenuItem value={\">=\"}>{\">=\"}</MenuItem>\n                    <MenuItem value={\"<=\"}>{\"<=\"}</MenuItem>\n                    <MenuItem value={\"!=\"}>{\"!=\"}</MenuItem>\n                </Select>\n\n                <TextField\n                    onChange={this.handleValueChange} value={filter.uiValue} style={{maxWidth: 60}}/>\n\n            </div>\n        );\n    }\n}\n\nexport default MeasureFilter;\n\n\n\n","import {InputLabel} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport {debounce} from 'lodash';\nimport React from 'react';\nimport ContinuousLegend from './ContinuousLegend';\nimport MeasureFilter from './MeasureFilter';\n\nclass ColorSchemeLegendWrapper extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {min: '', max: ''};\n        this.onMinUpdate = debounce(this.onMinUpdate, 500);\n        this.onMaxUpdate = debounce(this.onMaxUpdate, 500);\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.name !== this.props.name) {\n            this.setState({\n                min: '',\n                max: ''\n            });\n        }\n    }\n\n    onMinChange = (event) => {\n        this.setState({min: event.target.value});\n        this.onMinUpdate(parseFloat(event.target.value));\n    };\n\n    onMinUpdate = (value) => {\n        if (isNaN(value)) {\n            delete this.props.globalFeatureSummary[this.props.name].customMin;\n        } else {\n            this.props.globalFeatureSummary[this.props.name].customMin = value;\n        }\n        this.props.handleDomain({name: this.props.name, summary: this.props.globalFeatureSummary[this.props.name]});\n    };\n\n    onMaxChange = (event) => {\n        this.setState({max: event.target.value});\n        this.onMaxUpdate(parseFloat(event.target.value));\n    };\n\n    onMaxUpdate = (value) => {\n\n        if (isNaN(value)) {\n            delete this.props.globalFeatureSummary[this.props.name].customMax;\n        } else {\n            this.props.globalFeatureSummary[this.props.name].customMax = value;\n        }\n\n        this.props.handleDomain({name: this.props.name, summary: this.props.globalFeatureSummary[this.props.name]});\n\n    };\n\n    render() {\n        const {\n            scale,\n            name,\n            nObs,\n            nObsSelected,\n            featureSummary,\n            globalFeatureSummary,\n            maxHeight,\n            datasetFilter,\n            handleUpdate,\n            selected\n        } = this.props;\n        let style = {display: 'inline-block', verticalAlign: 'top'};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n\n        return (\n            <div className=\"cirro-condensed\" style={style}>\n                {/*ContinuousLegend shows stats table */}\n                <ContinuousLegend name={name}\n                                  selected={selected}\n                                  summary={scale.summary}\n                                  featureSummary={featureSummary}\n                                  nObs={nObs}\n                                  nObsSelected={nObsSelected}\n                                  globalFeatureSummary={globalFeatureSummary}\n                                  maxHeight={maxHeight}></ContinuousLegend>\n                {name !== '__count' && this.props.handleDomain &&\n                <InputLabel shrink={true} variant={\"standard\"}>Custom Color Scale</InputLabel>}\n                {name !== '__count' && this.props.handleDomain &&\n                <TextField InputLabelProps={{shrink: true}} margin=\"none\"\n                           style={{maxWidth: 60, marginRight: 4, marginTop: 0}}\n                           size=\"small\" type=\"text\"\n\n                           onChange={this.onMinChange} label=\"Min\"\n                           value={this.state.min}/>}\n                {name !== '__count' && this.props.handleDomain &&\n                <TextField InputLabelProps={{shrink: true}} margin=\"none\" style={{maxWidth: 60, marginTop: 0}}\n                           size=\"small\"\n                           type=\"text\"\n\n                           onChange={this.onMaxChange} label=\"Max\"\n                           value={this.state.max}/>}\n                {name !== '__count' &&\n                <MeasureFilter datasetFilter={datasetFilter} name={name} handleUpdate={handleUpdate}/>}\n                {/*{this.props.showColorScheme &&*/}\n                {/*<ColorSchemeLegend width={this.props.width} height={this.props.height} style={{paddingLeft: 10}}*/}\n                {/*                   scale={scale}*/}\n                {/*                   label={this.props.label}></ColorSchemeLegend>}*/}\n            </div>);\n\n    }\n}\n\nexport default ColorSchemeLegendWrapper;\n","class CanvasOverlayHd {\n    constructor(viewer, options) {\n        this._viewer = viewer;\n        this.backingScale = 1;\n        this._containerWidth = 0;\n        this._containerHeight = 0;\n\n\n        // this._canvasdiv.style.left = 0;\n        // this._canvasdiv.style.top = 0;\n\n\n        this._canvas = document.createElement('canvas');\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.width = '100%';\n        this._canvas.style.height = '100%';\n        this._viewer.canvas.appendChild(this._canvas);\n        this.onRedraw = options.onRedraw || function () {\n        };\n        this.clearBeforeRedraw = (typeof (options.clearBeforeRedraw) !== 'undefined') ?\n            options.clearBeforeRedraw : true;\n\n        this._viewer.addHandler('update-viewport', () => {\n            this.resize();\n            this._updateCanvas();\n        });\n        this._viewer.addHandler('open', () => {\n            this.resize();\n            this._updateCanvas();\n        });\n    }\n\n    static getTileIndexFromPixel(viewer, webPoint) {\n        let viewportPos = viewer.viewport.pointFromPixel(webPoint);\n        for (let i = 0, count = viewer.world.getItemCount(); i < count; i++) {\n            let tiledImage = viewer.world.getItemAt(i);\n            // box = viewer.world.getItemAt(i).getBounds();\n            // if (viewportPos.x > box.x &&\n            //   viewportPos.y > box.y &&\n            //   viewportPos.x < box.x + box.width &&\n            //   viewportPos.y < box.y + box.height) {\n            //\n            // }\n            // tiledImage.lastDrawn.forEach(function (tile) {\n            //   if (tile.bounds.containsPoint(viewportPos)) {\n            //     console.log('lastDrawn', tile);\n            //   }\n            // });\n\n            let viewportPosRect = new window.OpenSeadragon.Rect(viewportPos.x, viewportPos.y, 0, 0);\n            let tileSourcePosRect = tiledImage._viewportToTiledImageRectangle(viewportPosRect);\n            let tileSourcePos = tileSourcePosRect.getTopLeft();\n            let source = tiledImage.source;\n            if (tileSourcePos.x >= 0 && tileSourcePos.x <= 1 && tileSourcePos.y >= 0 &&\n                tileSourcePos.y <= 1 / source.aspectRatio) {\n                return i;\n                // for (let level = source.minLevel; level <= source.maxLevel; level++) {\n                //   let tilePoint = source.getTileAtPoint(level, tileSourcePos);\n                //   return i;\n                // }\n            }\n        }\n        return -1;\n    }\n\n    canvas() {\n        return this._canvas;\n    }\n\n    context2d() {\n        return this._canvas.getContext('2d');\n    }\n\n    clear() {\n        this._canvas.getContext('2d').clearRect(0, 0, this._containerWidth * this.backingScale, this._containerHeight * this.backingScale);\n    }\n\n    resize() {\n        let backingScale = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            backingScale = window.devicePixelRatio;\n        }\n        let backingScaleUpdated = this.backingScale !== backingScale;\n        this.backingScale = backingScale;\n        if (this._containerWidth !== this._viewer.container.clientWidth || backingScaleUpdated) {\n            this._containerWidth = this._viewer.container.clientWidth;\n            this._canvas.setAttribute('width', backingScale * this._containerWidth);\n            this._canvas.setAttribute('width', backingScale * this._containerWidth);\n            // this._canvas.style.width = this._containerWidth + 'px';\n        }\n\n        if (this._containerHeight !== this._viewer.container.clientHeight || backingScaleUpdated) {\n            this._containerHeight = this._viewer.container.clientHeight;\n            this._canvas.setAttribute('height', backingScale * this._containerHeight);\n            this._canvas.setAttribute('height', backingScale * this._containerHeight);\n            // this._canvas.style.height = this._containerHeight + 'px';\n        }\n    }\n\n    _updateCanvas() {\n        let viewportZoom = this._viewer.viewport.getZoom(true);\n        if (this.clearBeforeRedraw) {\n            this.clear();\n        }\n        let context = this._canvas.getContext('2d');\n        for (let i = 0, count = this._viewer.world.getItemCount(); i < count; i++) {\n            let image = this._viewer.world.getItemAt(i);\n            if (image) {\n                let zoom = image.viewportToImageZoom(viewportZoom);\n                let vp = image.imageToViewportCoordinates(0, 0, true);\n                let p = this._viewer.viewport.pixelFromPoint(vp, true);\n                context.scale(this.backingScale, this.backingScale);\n                context.translate(p.x, p.y);\n                context.scale(zoom, zoom);\n                this.onRedraw({index: i, context: context, x: p.x, y: p.y, zoom: zoom});\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n        }\n    }\n}\n\nexport default CanvasOverlayHd;\n","import OpenSeadragon from 'openseadragon';\nconst svgNS = 'http://www.w3.org/2000/svg';\n\n\nclass OpenseadragonSvgOverlay {\n\n    constructor(viewer) {\n        let self = this;\n\n        this._viewer = viewer;\n        this._containerWidth = 0;\n        this._containerHeight = 0;\n\n        this._svg = document.createElementNS(svgNS, 'svg');\n        this._svg.style.position = 'absolute';\n        this._svg.style.left = 0;\n        this._svg.style.top = 0;\n        this._svg.style.width = '100%';\n        this._svg.style.height = '100%';\n        this._viewer.canvas.appendChild(this._svg);\n\n        this._node = document.createElementNS(svgNS, 'g');\n        this._svg.appendChild(this._node);\n\n        this._viewer.addHandler('update-viewport', () => {\n            self.resize();\n        });\n\n        this._viewer.addHandler('open', function () {\n            self.resize();\n        });\n\n        this._viewer.addHandler('rotate', function (evt) {\n            self.resize();\n        });\n\n        this._viewer.addHandler('resize', function () {\n            self.resize();\n        });\n\n        this.resize();\n    }\n\n    node() {\n        return this._node;\n    }\n\n\n    resize() {\n        if (this._containerWidth !== this._viewer.container.clientWidth) {\n            this._containerWidth = this._viewer.container.clientWidth;\n            this._svg.setAttribute('width', this._containerWidth);\n        }\n\n        if (this._containerHeight !== this._viewer.container.clientHeight) {\n            this._containerHeight = this._viewer.container.clientHeight;\n            this._svg.setAttribute('height', this._containerHeight);\n        }\n\n        let p = this._viewer.viewport.pixelFromPoint(new OpenSeadragon.Point(0, 0), true);\n        let zoom = this._viewer.viewport.getZoom(true);\n        if (this._viewer.world.getItemCount() > 0) {\n            zoom = this._viewer.world.getItemAt(0).viewportToImageZoom(zoom);\n        }\n        // TODO: Expose an accessor for _containerInnerSize in the OSD API so we don't have to use the private variable.\n        //  let scale = this._viewer.viewport._containerInnerSize.x * zoom;\n\n        let rotation = this._viewer.viewport.getRotation();\n        this._node.setAttribute('transform',\n            'translate(' + p.x + ',' + p.y + ') scale(' + zoom + ') rotate(' + rotation + ')');\n    }\n}\n\n\nexport default OpenseadragonSvgOverlay;","import {Typography} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {bind, uniqueId} from 'lodash';\nimport OpenSeadragon from 'openseadragon';\nimport React from 'react';\nimport simplify from 'simplify-js';\nimport {getEmbeddingKey} from './actions';\nimport CanvasOverlayHd from './CanvasOverlayHd';\nimport ChartToolbar from './ChartToolbar';\nimport {saveImage} from './ChartUtil';\nimport {numberFormat2f} from './formatters';\nimport OpenseadragonSvgOverlay from './OpenseadragonSvgOverlay';\nimport {getCategoryLabelsPositions, getLabels} from './ThreeUtil';\nimport {arrayToSvgPath, isPointInside} from './util';\n\n\nexport function getSpotRadius(trace, pointSize) {\n    return pointSize * (trace.embedding.spatial.spot_diameter ? trace.embedding.spatial.spot_diameter / 2 : 20);\n}\n\nexport function drawEmbeddingImage(context, chartSize, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, chartOptions, categoricalNames, obsCat, cachedData, spotRadius) {\n    if (traceInfo.tileSource.ready) {\n        const img = traceInfo.tileSource.levels[traceInfo.tileSource.levels.length - 1].context2D.canvas;\n        if (chartSize == null) {\n            chartSize = {width: img.width, height: img.height};\n        }\n        const zoom = Math.min(chartSize.width / img.width, chartSize.height / img.height);\n        context.drawImage(img, 0, 0, img.width * zoom, img.height * zoom);\n        context.scale(zoom, zoom);\n        drawSpots(context, zoom, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, spotRadius);\n        drawLabels(context, zoom, traceInfo, chartOptions, categoricalNames, obsCat, cachedData);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n}\n\nfunction drawLabels(context, zoom, traceInfo, chartOptions, categoricalNames, obsCat, cachedData) {\n    const showLabels = obsCat.length > 0;\n    if (showLabels) {\n        context.textAlign = 'center';\n        context.textBaseline = \"middle\";\n        const darkMode = true;\n        const fontSize = Math.ceil(chartOptions.labelFontSize / zoom);\n        context.fillStyle = darkMode ? 'white' : 'black';\n        context.strokeStyle = darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n        context.lineWidth = chartOptions.labelStrokeWidth;\n\n        context.font = fontSize + 'px Roboto Condensed,Helvetica,Arial,sans-serif';\n\n        const labelsPositions = getCategoryLabelsPositions(traceInfo.embedding, obsCat, cachedData);\n        const labels = getLabels(obsCat, labelsPositions.labels, categoricalNames);\n        for (let i = 0, index = 0, n = labels.length; i < n; i++, index += 3) {\n            let x = labelsPositions.positions[index];\n            let y = labelsPositions.positions[index + 1];\n            context.strokeText('' + labels[i], x, y);\n            context.fillText('' + labels[i], x, y);\n        }\n    }\n}\n\nfunction drawSpots(context, zoom, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, spotRadius) {\n    context.lineWidth = 2 * 1 / zoom;\n    if (context.setLineDash) {\n        context.setLineDash([2, 2]);\n    }\n    const isSelectionEmpty = selection.size === 0;\n    const indices = traceInfo.indices;\n    if (!isSelectionEmpty) { // draw unselected cells 1st\n        context.globalAlpha = unselectedMarkerOpacity;\n\n        for (let i = 0; i < traceInfo.x.length; i++) {\n            let index = indices[i];\n            let x = traceInfo.x[index];\n            let y = traceInfo.y[index];\n            const isSelected = selection.has(index);\n            if (!isSelected) {\n                context.fillStyle = traceInfo.colors[index];\n                context.beginPath();\n                context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n                context.fill();\n            }\n        }\n        context.globalAlpha = markerOpacity;\n        for (let i = 0; i < traceInfo.x.length; i++) {\n            let index = indices[i];\n            let x = traceInfo.x[index];\n            let y = traceInfo.y[index];\n            const isSelected = selection.has(index);\n            if (isSelected) {\n                context.fillStyle = traceInfo.colors[index];\n                context.beginPath();\n                context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n                context.fill();\n            }\n        }\n    } else {\n        context.globalAlpha = markerOpacity;\n        for (let i = 0; i < traceInfo.x.length; i++) {\n            let index = indices[i];\n            let x = traceInfo.x[index];\n            let y = traceInfo.y[index];\n            context.fillStyle = traceInfo.colors[index];\n            context.beginPath();\n            context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n            context.fill();\n        }\n    }\n    context.globalAlpha = 1;\n    if (context.setLineDash) {\n        context.setLineDash([]);\n    }\n};\nconst styles = theme => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(.4),\n        },\n        '& > .MuiIconButton-root': {\n            padding: 0,\n        },\n        position: 'absolute',\n        zIndex: 1,\n        top: 0,\n        left: 0,\n        display: 'inline-block',\n        verticalAlign: 'top',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    }\n});\n\nclass ImageChart extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.id = uniqueId('cirro-image');\n        this.tooltipElementRef = React.createRef();\n        this.state = {loading: false};\n    }\n\n    findPointsInPolygon(points) {\n        let data = this.props.traceInfo;\n        // let spotRadius = data[0].embedding.spotDiameter / 2;\n        let indices = [];\n        for (let i = 0; i < data.x.length; i++) {\n            if (isPointInside({x: data.x[i], y: data.y[i]}, points)) {\n                indices.push(i);\n            }\n        }\n        return indices;\n    }\n\n    findPointsInRectangle(rect) {\n        let data = this.props.traceInfo;\n        const spotRadius = getSpotRadius(data, this.props.pointSize);\n        let indices = [];\n        const x = parseFloat(rect.getAttribute('x'));\n        const y = parseFloat(rect.getAttribute('y'));\n        const x2 = x + parseFloat(rect.getAttribute('width'));\n        const y2 = y + parseFloat(rect.getAttribute('height'));\n        for (let i = 0; i < data.x.length; i++) {\n            const px = data.x[i];\n            const py = data.y[i];\n            if (px <= x2 && x <= px + spotRadius && py <= y2 && y <= py + spotRadius) {\n                indices.push(i);\n            }\n        }\n        return indices;\n    }\n\n\n    findPointIndex(xpix, ypix) {\n        let data = this.props.traceInfo;\n        const spotRadius = getSpotRadius(data, this.props.pointSize);\n        for (let i = 0; i < data.x.length; i++) {\n            if (Math.abs(data.x[i] - xpix) <= spotRadius && Math.abs(data.y[i] - ypix) <= spotRadius) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    setTooltip(xpix, ypix) {\n        let traceInfo = this.props.traceInfo;\n        const point = this.findPointIndex(xpix, ypix);\n        if (point != -1) {\n            let value = traceInfo.values[point];\n            let categoryObject = this.props.categoricalNames[traceInfo.name];\n            if (categoryObject) {\n                let renamedValue = categoryObject[value];\n                if (renamedValue != null) {\n                    value = renamedValue;\n                }\n            }\n            if (typeof value === 'number') {\n                value = numberFormat2f(value);\n                if (value.endsWith('.00')) {\n                    value = value.substring(0, value.lastIndexOf('.'));\n                }\n            }\n            this.tooltipElementRef.current.innerHTML = '' + value;\n        } else {\n            this.tooltipElementRef.current.innerHTML = ' ';\n        }\n    }\n\n\n    drawContext(context, chartSize) {\n        const img = this.viewer.source.levels[this.viewer.source.levels.length - 1].context2D.canvas;\n        if (chartSize == null) {\n            chartSize = {width: img.width, height: img.height};\n        }\n\n        const zoom = Math.min(chartSize.width / img.width, chartSize.height / img.height);\n        context.drawImage(img, 0, 0, img.width * zoom, img.height * zoom);\n        this._drawOverlay({context: context, zoom: zoom});\n    }\n\n    _drawOverlay(opts) {\n        let context = opts.context;\n        let traceInfo = this.props.traceInfo;\n        const selection = this.props.selection;\n        let markerOpacity = this.props.markerOpacity;\n        let unselectedMarkerOpacity = this.props.unselectedMarkerOpacity;\n        const spotRadius = getSpotRadius(traceInfo, this.props.pointSize);\n        drawSpots(context, opts.zoom, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, spotRadius);\n        drawLabels(context, opts.zoom, traceInfo, this.props.chartOptions, this.props.categoricalNames, this.props.obsCat, this.props.cachedData);\n    }\n\n    createViewer() {\n        if (this.viewer) {\n            this.viewer.destroy();\n        }\n        // let tileSource = new OpenSeadragon.ImageTileSource({\n        //     url: url,\n        //     buildPyramid: true,\n        //     crossOriginPolicy: \"Anonymous\"\n        // });\n        if (!this.props.traceInfo.tileSource.ready) {\n            this.setState({loading: true});\n            this.props.traceInfo.tileSource.addOnceHandler('ready', (src) => {\n                this.setState({loading: false});\n            });\n        } else {\n            this.setState({loading: false});\n        }\n        this.viewer = new OpenSeadragon({\n            id: this.id,\n            gestureSettingsMouse: {dblClickToZoom: true, clickToZoom: false},\n            autoResize: true,\n            showFullPageControl: false,\n            collectionMode: false,\n            // visibilityRatio: 0.2,\n            showNavigationControl: false,\n            // prefixUrl: 'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images/',\n            tileSources: this.props.traceInfo.tileSource\n        });\n        let viewer = this.viewer;\n\n        let _this = this;\n        this.canvasOverlay = new CanvasOverlayHd(this.viewer, {\n            onRedraw: function (opts) {\n                _this._drawOverlay(opts);\n            },\n        });\n        // let tooltip = document.createElement(\"div\");\n        // tooltip.style.background = 'rgba(0,0,0,0.5)';\n        // tooltip.style.color = 'white';\n        // tooltip.style.position = 'absolute';\n        // this.viewer.canvas.appendChild(tooltip);\n\n        let lassoPathArray = [];\n        let startCoordinates = [0, 0];\n        let lastBoundingBox = {x: 0, y: 0, width: 0, height: 0};\n\n        this.viewer.innerTracker.moveHandler = function (event) {\n            if (_this.tooltipElementRef.current == null) {\n                _this.tooltipElementRef.current.innerHTML = ' ';\n            } else if (_this.props.chartOptions.dragmode === 'pan' && viewer.world.getItemCount() > 0) {\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n                _this.setTooltip(imagePoint.x, imagePoint.y);\n                // if (title !== '') {\n                //     tooltip.innerHTML = title;\n                //     tooltip.style.left = (webPoint.x + 8) + 'px';\n                //     tooltip.style.top = (webPoint.y + 8) + 'px';\n                //     tooltip.style.display = '';\n                // } else {\n                //     tooltip.style.display = 'none';\n                // }\n            } else {\n                _this.tooltipElementRef.current.innerHTML = ' ';\n            }\n        };\n        //\n        // this.viewer.innerTracker.scrollHandler = function (event) {\n        //     if (lassoState > -1) {\n        //         event.preventDefaultAction = true;\n        //     }\n        // };\n\n\n        this.viewer.addHandler('canvas-drag', function (event) {\n            if ((_this.props.chartOptions.dragmode === 'lasso' || _this.props.chartOptions.dragmode === 'select') && viewer.world.getItemCount() > 0) {\n                event.preventDefaultAction = true;\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n                lassoPathArray.push({x: imagePoint.x, y: imagePoint.y});\n                if (_this.props.chartOptions.dragmode === 'lasso') {\n                    lassoPathArray = simplify(lassoPathArray);\n                    lassoPath.setAttribute('d', arrayToSvgPath(lassoPathArray));\n                } else {\n                    lastBoundingBox.x = Math.min(imagePoint.x, startCoordinates[0]);\n                    lastBoundingBox.y = Math.max(imagePoint.y, startCoordinates[1]);\n                    lastBoundingBox.width =\n                        Math.max(imagePoint.x, startCoordinates[0]) - lastBoundingBox.x;\n                    lastBoundingBox.height =\n                        lastBoundingBox.y - Math.min(imagePoint.y, startCoordinates[1]);\n\n                    rectElement.setAttribute('x', '' + lastBoundingBox.x);\n                    rectElement.setAttribute(\n                        'y',\n                        '' + (lastBoundingBox.y - lastBoundingBox.height)\n                    );\n                    rectElement.setAttribute('width', '' + lastBoundingBox.width);\n                    rectElement.setAttribute('height', '' + lastBoundingBox.height);\n                }\n            }\n        });\n\n        this.viewer.addHandler('canvas-press', function (event) {\n            if (_this.props.chartOptions.dragmode === 'lasso' || _this.props.chartOptions.dragmode === 'select') {\n                event.preventDefaultAction = true;\n\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n\n                if (_this.props.chartOptions.dragmode === 'lasso') {\n                    lassoPathArray = [];\n                    lassoPathArray.push({x: imagePoint.x, y: imagePoint.y});\n                    lassoPathArray = simplify(lassoPathArray);\n                    lassoPath.setAttribute('d', arrayToSvgPath(lassoPathArray));\n                } else {\n                    startCoordinates = [imagePoint.x, imagePoint.y];\n                    lastBoundingBox = {\n                        x: startCoordinates[0],\n                        y: startCoordinates[1],\n                        width: 1,\n                        height: 1,\n                    };\n\n                }\n            }\n        });\n\n        this.viewer.addHandler('canvas-release', function (event) {\n            if (_this.props.chartOptions.dragmode === 'lasso') {\n                event.preventDefaultAction = true;\n                const points = _this.findPointsInPolygon(lassoPathArray);\n                lassoPathArray = [];\n                lassoPath.setAttribute('d', '');\n                _this.props.onSelected({\n                    name: getEmbeddingKey(_this.props.traceInfo.embedding),\n                    clear: !_this.props.chartOptions.editSelection,\n                    value: {basis: _this.props.traceInfo.embedding, points: points}\n                });\n            } else if (_this.props.chartOptions.dragmode === 'select') {\n                event.preventDefaultAction = true;\n                const points = _this.findPointsInRectangle(rectElement);\n                rectElement.removeAttribute('x');\n                rectElement.removeAttribute('y');\n                rectElement.removeAttribute('width');\n                rectElement.removeAttribute('height');\n                _this.props.onSelected({\n                    name: getEmbeddingKey(_this.props.traceInfo.embedding),\n                    clear: !_this.props.chartOptions.editSelection,\n                    value: {basis: _this.props.traceInfo.embedding, points: points}\n                });\n            }\n        });\n\n        // this.viewer.innerTracker.clickHandler = function (event) {\n        //     if (_this.props.chartOptions.dragmode === 'pan') {\n        //         let webPoint = event.position;\n        //         let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n        //         let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n        //         const point = _this.findPointIndex(imagePoint.x, imagePoint.y);\n        //         if (point === -1) {\n        //             //   this.props.onDeselect({name: getEmbeddingKey(traceInfo.embedding)});\n        //         } else {\n        //             _this.props.onSelected({\n        //                 name: getEmbeddingKey(_this.props.traceInfo.embedding),\n        //                 clear: !_this.props.chartOptions.editSelection,\n        //                 value: {basis: _this.props.traceInfo.embedding, points: [point]}\n        //             });\n        //         }\n        //     }\n        // };\n\n        viewer.addHandler('canvas-exit', function (event) {\n            if (_this.tooltipElementRef.current) {\n                _this.tooltipElementRef.current.innerHTML = ' ';\n            }\n        });\n\n        let svgOverlay = new OpenseadragonSvgOverlay(viewer);\n        let lassoPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        let rectElement = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        [lassoPath, rectElement].forEach(elem => {\n            elem.setAttribute('stroke', 'black');\n            elem.setAttribute('stroke-width', '3px');\n            elem.setAttribute('fill', '#0bb');\n            elem.setAttribute('fill-opacity', '0.3');\n            elem.setAttribute('stroke-dasharray', '2 2');\n            svgOverlay.node().appendChild(elem);\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.canvasOverlay) {\n            this.canvasOverlay._updateCanvas();\n        }\n        // if (this.viewer && prevProps.chartSize !== this.props.chartSize) {\n        //     this.viewer.viewport.resize();\n        // }\n    }\n\n    componentWillUnmount() {\n        if (this.viewer) {\n            this.viewer.destroy();\n        }\n        this.viewer = null;\n    }\n\n    componentDidMount() {\n        if (this.viewer == null) {\n            this.createViewer(this.props.traceInfo.url);\n        }\n    }\n\n\n    onSaveImage = (format) => {\n        const {traceInfo} = this.props;\n        const img = this.viewer.source.levels[this.viewer.source.levels.length - 1].context2D.canvas;\n        saveImage(traceInfo, {width: img.width, height: img.height}, bind(this.drawContext, this), format);\n    };\n\n    onEditSelection = () => {\n        this.props.chartOptions.editSelection = !this.props.chartOptions.editSelection;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    onZoomIn = () => {\n        this.viewer.viewport.zoomBy(this.viewer.zoomPerClick / 1.0);\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onZoomOut = () => {\n        this.viewer.viewport.zoomBy(1.0 / this.viewer.zoomPerClick);\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onHome = () => {\n        this.viewer.viewport.goHome();\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onDragMode = (mode) => {\n        this.props.chartOptions.dragmode = mode;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    render() {\n        return <React.Fragment>\n            <div className={this.props.classes.root}>\n                <ChartToolbar\n                    dragmode={this.props.chartOptions.dragmode}\n                    editSelection={this.props.chartOptions.editSelection}\n                    onGallery={this.props.onGallery}\n                    animating={false}\n                    onZoomIn={this.onZoomIn}\n                    onZoomOut={this.onZoomOut}\n                    is3d={false}\n                    onHome={this.onHome}\n                    onSaveImage={this.onSaveImage}\n                    onDragMode={this.onDragMode}\n                    onEditSelection={this.onEditSelection}\n                >\n                </ChartToolbar>\n                <Typography color=\"textPrimary\" ref={this.tooltipElementRef} style={{\n                    display: 'inline-block',\n                    paddingLeft: 5,\n                    verticalAlign: 'top'\n                }}>&nbsp;</Typography>\n            </div>\n\n            <div style={{\n                display: 'inline-block',\n                width: this.props.chartSize.width,\n                height: this.props.chartSize.height\n            }}\n                 id={this.id}>\n            </div>\n            {this.state.loading && <CircularProgress style={{\n                position: 'absolute',\n                left: this.props.chartSize.width / 2,\n                top: this.props.chartSize.height / 2\n            }} size={20}/>}\n        </React.Fragment>;\n    }\n}\n\n\nexport default withStyles(styles)(ImageChart);\n","import withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport {select} from 'd3-selection';\nimport {zoom, zoomIdentity} from 'd3-zoom';\nimport React from 'react';\nimport ChartToolbar from './ChartToolbar';\nimport {intFormat, numberFormat2f} from './formatters';\n\nconst styles = theme => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(.4),\n        },\n        '& > .MuiIconButton-root': {\n            padding: 0,\n        },\n        position: 'absolute',\n        zIndex: 1,\n        top: 0,\n        left: 0,\n        display: 'inline-block',\n        verticalAlign: 'top',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    }\n});\n\nclass MetaEmbedding extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.containerElementRef = React.createRef();\n        this.tooltipElementRef = React.createRef();\n    }\n\n    onSaveImage = (format) => {\n        let context;\n        let canvas = null;\n        const {chartSize, traceInfo} = this.props;\n        const totalSize = {width: chartSize.width, height: chartSize.height};\n        let name = traceInfo.name;\n        if (name === '__count') {\n            name = 'count';\n        }\n        if (format !== 'svg') {\n            canvas = document.createElement('canvas');\n            canvas.width = totalSize.width * window.devicePixelRatio;\n            canvas.height = totalSize.height * window.devicePixelRatio;\n            context = canvas.getContext('2d');\n            context.scale(window.devicePixelRatio, window.devicePixelRatio);\n            context.fillStyle = 'white';\n            context.fillRect(0, 0, totalSize.width, totalSize.height);\n            const xml = new XMLSerializer().serializeToString(traceInfo.source);\n            const svg64 = btoa(xml);\n            const b64Start = 'data:image/svg+xml;base64,';\n            const image64 = b64Start + svg64;\n            context.fillStyle = 'black';\n            const img = new Image();\n            img.src = image64;\n            img.onload = function () {\n                context.drawImage(img, 0, 0);\n                canvas.toBlob(blob => {\n                    window.saveAs(blob, name + '.png', true);\n                });\n            };\n        } else {\n            let blob = new Blob([new XMLSerializer().serializeToString(traceInfo.source)], {\n                type: 'text/plain;charset=utf-8'\n            });\n            window.saveAs(blob, name + '.svg');\n        }\n    };\n\n    updateSvg = () => {\n        const containerElement = this.containerElementRef.current;\n        containerElement.innerHTML = '';\n        const svg = this.props.traceInfo.source;\n        svg.setAttribute('width', this.props.chartSize.width);\n        svg.setAttribute('height', this.props.chartSize.height);\n        containerElement.append(svg);\n        let g;\n        let childNodes = svg.childNodes || svg.children;\n        if (childNodes.length > 0 && childNodes[0].nodeName === \"g\" && childNodes[0].getAttribute(\"cirro-zoom\") === 'true') {\n            g = childNodes[0];\n        }\n        if (!g) {\n            const nodeNamesKeep = new Set(['defs', 'metadata', 'style']);\n            g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n            g.setAttribute('cirro-zoom', 'true');\n            const svgChildren = svg.childNodes || svg.children;\n            if (!!svgChildren && svgChildren.length > 0) {\n                for (let i = svgChildren.length; i > 0; i--) {\n                    if (!nodeNamesKeep.has(svgChildren[svgChildren.length - i].nodeName)) {\n                        g.appendChild(svgChildren[svgChildren.length - i]);\n                    }\n                }\n            }\n            svg.appendChild(g);\n        }\n\n        function zoomed({transform}) {\n            g.setAttribute(\"transform\", transform);\n        }\n\n        const d3Zoom = zoom().scaleExtent([0.1, 10]).on(\"zoom\", zoomed);\n        this.d3Zoom = d3Zoom;\n        select(svg).call(d3Zoom);\n    };\n\n    onHome = () => {\n        select(this.props.traceInfo.source).call(this.d3Zoom.transform, zoomIdentity.scale(1));\n    };\n\n    onZoomIn = () => {\n        select(this.props.traceInfo.source).call(this.d3Zoom.scaleBy, 1.5);\n    };\n\n    onZoomOut = () => {\n        select(this.props.traceInfo.source).call(this.d3Zoom.scaleBy, .5);\n    };\n\n    componentDidMount() {\n        this.updateSvg();\n        const containerElement = this.containerElementRef.current;\n        containerElement.addEventListener('mousemove', (e) => {\n            if (e.target.nodeName === 'path') {\n                const categoryToStats = this.props.traceInfo.categoryToStats;\n                let text = e.target.id;\n                text = text.replaceAll('_', ' '); // FIXME\n                if (categoryToStats) {\n                    const stats = categoryToStats[text];\n                    if (stats) {\n                        if (this.props.traceInfo.name !== '__count') {\n                            if (this.props.traceInfo.isCategorical) {\n                                text += ', mode: ' + stats.value + ', # spots: ' + intFormat(stats.n);\n                            } else {\n                                text += ', mean: ' + numberFormat2f(stats.value) + ', # spots: ' + intFormat(stats.n);\n                            }\n                        } else {\n                            text += ', # spots: ' + intFormat(stats.n);\n                        }\n\n                    }\n                }\n                this.tooltipElementRef.current.innerHTML = text;\n\n            } else {\n                this.tooltipElementRef.current.innerHTML = '';\n            }\n        });\n        containerElement.addEventListener('mouseleave', (e) => {\n            this.tooltipElementRef.current.innerHTML = '';\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.traceInfo.source !== prevProps.traceInfo.source) {\n            select(prevProps.traceInfo.source).on(\".zoom\", null);\n            this.updateSvg();\n        } else if (this.props.chartSize.width !== prevProps.chartSize.width || this.props.chartSize.height !== prevProps.chartSize.height) {\n            const svg = this.props.traceInfo.source;\n            svg.setAttribute('width', this.props.chartSize.width);\n            svg.setAttribute('height', this.props.chartSize.height);\n            select(svg).call(this.d3Zoom.transform, zoomIdentity.scale(1));\n        }\n    }\n\n    render() {\n        return <React.Fragment>\n            <div className={this.props.classes.root}>\n                <ChartToolbar\n                    // dragmode={this.props.chartOptions.dragmode}\n                    // editSelection={this.props.chartOptions.editSelection}\n                    // onMoreOptions={this.props.onMoreOptions}\n                    onGallery={this.props.onGallery}\n                    animating={false}\n                    onZoomIn={this.onZoomIn}\n                    onZoomOut={this.onZoomOut}\n                    is3d={false}\n                    onHome={this.onHome}\n                    onSaveImage={this.onSaveImage}\n                    // onDragMode={this.onDragMode}\n                    // onEditSelection={this.onEditSelection}\n                >\n                </ChartToolbar>\n                <Typography color=\"textPrimary\" ref={this.tooltipElementRef} style={{\n                    display: 'inline-block',\n                    paddingLeft: 5,\n                    verticalAlign: 'top'\n                }}>&nbsp;</Typography>\n            </div>\n\n            <div style={{\n                display: 'inline-block',\n                // width: this.props.chartSize.width,\n                // height: this.props.chartSize.height\n            }}\n                 ref={this.containerElementRef}>\n            </div>\n        </React.Fragment>;\n    }\n}\n\n\nexport default withStyles(styles)(MetaEmbedding);\n","import {Tooltip, Typography} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport React from 'react';\n\n\nimport {connect} from 'react-redux';\nimport {\n    handleBrushFilterUpdated,\n    handleCategoricalNameChange,\n    handleColorChange,\n    handleDimensionFilterUpdated,\n    handleDomainChange,\n    handleMeasureFilterUpdated,\n    MORE_OPTIONS_DIALOG,\n    setChartOptions,\n    setDialog,\n    setPrimaryChartSize\n} from './actions';\nimport CategoricalLegend from './CategoricalLegend';\nimport ColorSchemeLegendWrapper from './ColorSchemeLegendWrapper';\nimport ImageChart from './ImageChart';\nimport MetaEmbedding from './MetaEmbedding';\nimport ScatterChartThree from './ScatterChartThree';\nimport {splitSearchTokens} from './util';\n\nclass EmbeddingChart extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {showDetails: true};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.traceInfo.name !== this.props.traceInfo.name) {\n            this.setState({showDetails: true});\n        }\n    }\n\n    handleExpandClick = (e) => {\n        e.preventDefault();\n        this.setState({showDetails: !this.state.showDetails});\n    };\n\n    render() {\n        const {\n            cachedData,\n            categoricalNames,\n            chartOptions,\n            dataset,\n            datasetFilter,\n            embeddingLabels,\n            featureSummary,\n            globalFeatureSummary,\n            markerOpacity,\n            nObsSelected,\n            onChartOptions,\n            onColorChange,\n            onDeselect,\n            onDimensionFilterUpdated,\n            onDomain,\n            onGallery,\n            onMeasureFilterUpdated,\n            onNameChange,\n            onSelect,\n            pointSize,\n            primaryChartSize,\n            searchTokens,\n            selection,\n            shape,\n            traceInfo,\n            unselectedMarkerOpacity\n        } = this.props;\n\n        const activeEmbeddingLabels = splitSearchTokens(searchTokens).obsCat.filter(item => embeddingLabels.indexOf(item) !== -1);\n        const displayName = traceInfo.name === '__count' ? '' : traceInfo.name;\n\n        return (\n            <div style={{position: 'relative'}}>\n                <Box color=\"text.primary\" style={{\n                    marginTop: '3.2px',\n                    position: 'absolute',\n                    textAlign: 'right',\n                    right: 8,\n                    zIndex: 1000\n                }}>\n                    {displayName !== '' ? <Tooltip title={\"Embedding: \" + traceInfo.embedding.name}>\n                        <Link onClick={this.handleExpandClick}>\n                            <Typography\n                                color=\"textPrimary\" style={{marginRight: 14}}\n                                component={\"h4\"}>{displayName} {!traceInfo.continuous ?\n                                <small>({globalFeatureSummary[traceInfo.name].categories.length})</small> : null}</Typography></Link>\n                    </Tooltip> : null}\n\n                    {traceInfo.continuous ?\n                        <ColorSchemeLegendWrapper\n                            key={traceInfo.name}\n                            handleDomain={onDomain}\n                            width={140}\n                            showColorScheme={false}\n                            height={30}\n                            style={{\n                                display: this.state.showDetails ? 'block' : 'none',\n                            }}\n                            handleUpdate={onMeasureFilterUpdated}\n                            datasetFilter={datasetFilter}\n                            scale={traceInfo.colorScale}\n                            featureSummary={featureSummary}\n                            globalFeatureSummary={globalFeatureSummary}\n                            nObs={shape[0]}\n                            nObsSelected={nObsSelected}\n                            maxHeight={null}\n                            name={traceInfo.name}\n                        /> :\n                        <CategoricalLegend\n                            key={traceInfo.name}\n                            style={{\n                                display: this.state.showDetails ? 'block' : 'none',\n                            }}\n                            datasetFilter={datasetFilter}\n                            handleClick={onDimensionFilterUpdated}\n                            handleColorChange={onColorChange}\n                            handleNameChange={onNameChange}\n                            categoricalNames={categoricalNames}\n                            name={traceInfo.name}\n                            scale={traceInfo.colorScale}\n                            maxHeight={300}\n                            clickEnabled={true}\n                            nObs={shape[0]}\n                            nObsSelected={nObsSelected}\n                            globalFeatureSummary={globalFeatureSummary}\n                            featureSummary={featureSummary}/>\n                    }\n                </Box>\n\n\n                {traceInfo.type === 'scatter' &&\n                <ScatterChartThree traceInfo={traceInfo}\n                                   cachedData={cachedData}\n                                   obsCat={activeEmbeddingLabels}\n                                   chartSize={primaryChartSize}\n                                   setChartOptions={onChartOptions}\n                                   chartOptions={chartOptions}\n                                   categoricalNames={categoricalNames}\n                                   selection={selection}\n                                   onDeselect={onDeselect}\n                                   onSelected={onSelect}\n                                   pointSize={pointSize}\n                                   markerOpacity={markerOpacity}\n                                   unselectedMarkerOpacity={unselectedMarkerOpacity}\n                                   color={traceInfo.colors}\n                                   onGallery={onGallery}\n\n                />}\n\n                {traceInfo.type === 'meta_image' &&\n                <MetaEmbedding traceInfo={traceInfo}\n                               cachedData={cachedData}\n                               chartSize={primaryChartSize}\n                               setChartOptions={onChartOptions}\n                               chartOptions={chartOptions}\n                               dataset={dataset}\n                               categoricalNames={categoricalNames}\n                               markerOpacity={markerOpacity}\n                               onGallery={onGallery}\n\n                />}\n                {traceInfo.type === 'image' && <ImageChart\n                    cachedData={cachedData}\n                    obsCat={activeEmbeddingLabels}\n                    setChartOptions={onChartOptions}\n                    chartOptions={chartOptions}\n                    style={{display: 'inline-block'}}\n                    traceInfo={traceInfo}\n                    pointSize={pointSize}\n                    chartSize={primaryChartSize}\n                    categoricalNames={categoricalNames}\n                    selection={selection}\n                    onInitialized={this.onInitialized}\n                    markerOpacity={markerOpacity}\n                    unselectedMarkerOpacity={unselectedMarkerOpacity}\n                    onDeselect={onDeselect}\n                    onSelected={onSelect}\n                    onGallery={onGallery}\n                />}\n\n\n            </div>);\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cachedData: state.cachedData,\n        categoricalNames: state.categoricalNames,\n        chartOptions: state.chartOptions,\n        dataset: state.dataset,\n        datasetFilter: state.datasetFilter,\n        embeddingChartSize: state.embeddingChartSize,\n        embeddingData: state.embeddingData,\n        embeddingLabels: state.embeddingLabels,\n        featureSummary: state.featureSummary,\n        globalFeatureSummary: state.globalFeatureSummary,\n        markerOpacity: state.markerOpacity,\n        nObsSelected: state.selection.count,\n        pointSize: state.pointSize,\n        primaryChartSize: state.primaryChartSize,\n        primaryTraceKey: state.primaryTraceKey,\n        shape: state.dataset.shape,\n        searchTokens: state.searchTokens,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onChartOptions: (options) => {\n            dispatch(setChartOptions(options));\n        },\n        onDomain: (value) => {\n            dispatch(handleDomainChange(value));\n        },\n        onDimensionFilterUpdated: (e) => {\n            dispatch(handleDimensionFilterUpdated(e));\n        },\n        onColorChange: (e) => {\n            dispatch(handleColorChange(e));\n        },\n        onNameChange: (e) => {\n            dispatch(handleCategoricalNameChange(e));\n        },\n        onMeasureFilterUpdated: (e) => {\n            dispatch(handleMeasureFilterUpdated(e));\n        },\n        onSelect: (e) => {\n            dispatch(handleBrushFilterUpdated(e));\n        },\n        onDeselect: (e) => {\n            dispatch(handleBrushFilterUpdated(e));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(EmbeddingChart));\n\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {getEmbeddingKey, getTraceKey, setPrimaryChartSize} from './actions';\nimport EmbeddingChart from './EmbeddingChart';\n\n\nconst emptySet = new Set();\n\nclass EmbeddingCharts extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.resizeListener = () => {\n            let width = window.innerWidth - 280;\n\n            // let height = Math.max(1, this.containerElementRef.offsetHeight);\n            let height = Math.max(300, window.innerHeight - 410);\n            this.props.handlePrimaryChartSize({width: width, height: height});\n        };\n        window.addEventListener('resize', this.resizeListener);\n\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resizeListener);\n    }\n\n\n    render() {\n        const {primaryTraceKey, embeddingData, selection, onGallery, primaryChartSize} = this.props;\n        let primaryTraces = embeddingData.filter(traceInfo => getTraceKey(traceInfo) === primaryTraceKey);\n        const primaryTrace = primaryTraces.length === 1 ? primaryTraces[0] : null;\n        let userPoints = emptySet;\n        if (primaryTrace) {\n            const embedding = primaryTrace.embedding;\n            const fullName = getEmbeddingKey(embedding);\n            const chartSelection = selection != null && selection.chart != null ? selection.chart[fullName] : null;\n            userPoints = chartSelection ? chartSelection.userPoints : emptySet;\n        }\n        if (primaryTrace == null) {\n            return <div style={{height: primaryChartSize.height}}></div>;\n        }\n\n        return (<EmbeddingChart\n                onGallery={onGallery}\n                traceInfo={primaryTrace}\n                selection={userPoints}\n            />\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        embeddingData: state.embeddingData,\n        primaryTraceKey: state.primaryTraceKey,\n        primaryChartSize: state.primaryChartSize,\n        selection: state.selection\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handlePrimaryChartSize: value => {\n            dispatch(setPrimaryChartSize(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(EmbeddingCharts));\n\n","import {Tooltip} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport {getEmbeddingKey} from './actions';\nimport {drawEmbeddingImage, getSpotRadius} from './ImageChart';\nimport {drawLabels, getVisualizer} from './ScatterChartThree';\nimport {\n    getCategoryLabelsPositions,\n    getLabels,\n    getScaleFactor,\n    POINT_VISUALIZER_ID,\n    updateScatterChart\n} from './ThreeUtil';\n\n\nclass GalleryImage extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {url: null, overlayUrl: null, loading: false, forceUpdate: false};\n        this.elementRef = React.createRef();\n    }\n\n\n    draw() {\n        const {\n            obsCat,\n            cachedData,\n            scatterPlot,\n            chartSize,\n            categoricalNames,\n            containerElement,\n            traceInfo,\n            markerOpacity,\n            unselectedMarkerOpacity,\n            selection,\n            chartOptions,\n            pointSize\n        } = this.props;\n        const embedding = traceInfo.embedding;\n        const fullName = getEmbeddingKey(embedding);\n        const chartSelection = selection != null && selection.chart != null ? selection.chart[fullName] : null;\n        const userPoints = chartSelection ? chartSelection.userPoints : new Set();\n        if (traceInfo.type === 'scatter') {\n            let spriteVisualizer = getVisualizer(scatterPlot, POINT_VISUALIZER_ID);\n            spriteVisualizer.zoomFactor = this.zoomFactor;\n            updateScatterChart(scatterPlot, traceInfo, userPoints, markerOpacity, unselectedMarkerOpacity, pointSize,\n                categoricalNames, chartOptions, obsCat, cachedData);\n            const canvas = containerElement.querySelector('canvas');\n            const showLabels = obsCat.length > 0 && chartSize >= 600;\n            let overlayUrl = null;\n            if (showLabels) {\n                const labelsPositions = getCategoryLabelsPositions(traceInfo.embedding, obsCat, cachedData);\n                const labelCanvas = document.createElement('canvas');\n                labelCanvas.width = chartSize * window.devicePixelRatio;\n                labelCanvas.height = chartSize * window.devicePixelRatio;\n                const context = labelCanvas.getContext('2d');\n                context.scale(window.devicePixelRatio, window.devicePixelRatio);\n                context.font = 'bold ' + chartOptions.labelFontSize + 'px Roboto Condensed';\n                drawLabels(context, getLabels(obsCat, labelsPositions.labels, categoricalNames), labelsPositions.positions, chartOptions, {\n                    width: chartSize,\n                    height: chartSize\n                }, scatterPlot.camera);\n                overlayUrl = labelCanvas.toDataURL();\n            }\n\n            this.setState({url: canvas.toDataURL(), overlayUrl: overlayUrl, loading: false, element: null});\n        } else if (traceInfo.type === 'image') {\n            if (!traceInfo.tileSource.ready) {\n                this.setState({url: null, overlayUrl: null, loading: true, element: null});\n                traceInfo.tileSource.addOnceHandler('ready', () => {\n                    this.setState({loading: false});\n                });\n            } else {\n                let canvas = document.createElement('canvas');\n                canvas.width = chartSize * window.devicePixelRatio;\n                canvas.height = chartSize * window.devicePixelRatio;\n                const context = canvas.getContext('2d');\n                context.scale(window.devicePixelRatio, window.devicePixelRatio);\n                drawEmbeddingImage(context, {\n                    width: chartSize,\n                    height: chartSize\n                }, traceInfo, userPoints, markerOpacity, unselectedMarkerOpacity, chartOptions, categoricalNames, obsCat, cachedData, getSpotRadius(traceInfo, pointSize));\n                this.setState({url: canvas.toDataURL(), overlayUrl: null, loading: false, element: null});\n                canvas = null;\n            }\n        } else {\n            const containerElement = this.elementRef.current;\n            containerElement.innerHTML = '';\n            const svg = traceInfo.gallerySource;\n            svg.setAttribute('width', chartSize);\n            svg.setAttribute('height', chartSize);\n            containerElement.append(svg);\n            this.setState({url: null, overlayUrl: null, loading: false});\n        }\n\n        // canvas.toBlob(function (blob) {\n        //     // let newImg = document.createElement('img');\n        //     let url = URL.createObjectURL(blob);\n        //     _this.setState({url: url});\n        //     // newImg.onload = function () {\n        //     //     // no longer need to read the blob so it's revoked\n        //     //     URL.revokeObjectURL(url);\n        //     // };\n        //     //\n        //     // newImg.src = url;\n        //     // document.body.appendChild(newImg);\n        // });\n\n    }\n\n\n    componentDidMount() {\n        this.zoomFactor = getScaleFactor(this.props.primaryChartSize);\n        this.draw();\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.primaryChartSize !== this.props.primaryChartSize) {\n            this.zoomFactor = getScaleFactor(this.props.primaryChartSize);\n        }\n        this.draw();\n    }\n\n\n    onSelect = (event) => {\n        event.preventDefault();\n        this.props.onSelect(this.props.traceInfo);\n    };\n\n    render() {\n\n        let name = this.props.traceInfo.name;\n        if (name === '__count') {\n            name = '';\n        }\n        return (\n            <Box borderColor=\"text.primary\" border={1}\n                 style={{display: 'inline-block', margin: 2}}>\n                <div style={{\n                    position: 'relative',\n                    width: this.props.chartSize,\n                    height: this.props.chartSize,\n                    cursor: 'pointer'\n                }}>\n\n                    <Tooltip title={\"Embedding: \" + this.props.traceInfo.embedding.name}>\n                        <Typography color=\"textPrimary\" component={\"h4\"}\n                                    onClick={this.onSelect}\n                                    style={{\n                                        marginTop: '3.2px',\n                                        position: 'absolute',\n                                        right: 4,\n                                        zIndex: 1000\n                                    }}>{name}</Typography>\n                    </Tooltip>\n\n\n                    {this.state.loading && <CircularProgress\n                        style={{position: 'absolute', left: this.props.chartSize / 2, top: this.props.chartSize / 2}}\n                        size={20}/>}\n\n                    <div onClick={this.onSelect} ref={this.elementRef}\n                         style={{position: 'absolute', left: 0, top: 0}}></div>\n\n                    {this.state.url &&\n                    <div style={{position: 'absolute', left: 0, top: 0}}>\n                        <img alt=\"\" src={this.state.url}\n                             width={this.props.chartSize * window.devicePixelRatio}\n                             height={this.props.chartSize * window.devicePixelRatio}\n                             onClick={this.onSelect}\n                             style={{\n                                 width: this.props.chartSize,\n                                 height: this.props.chartSize\n                             }}/>\n                    </div>}\n                    {this.state.overlayUrl &&\n                    <div style={{position: 'absolute', left: 0, top: 0}}>\n                        <img alt=\"\" src={this.state.overlayUrl}\n                             onClick={this.onSelect}\n                             style={{\n                                 width: this.props.chartSize,\n                                 height: this.props.chartSize\n                             }}/></div>}\n\n\n                </div>\n            </Box>\n        );\n\n    }\n}\n\nexport default GalleryImage;\n\n","import {Tooltip} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport React from 'react';\n\nimport {connect} from 'react-redux';\nimport {sortableContainer, sortableElement} from 'react-sortable-hoc';\nimport {getTraceKey, setEmbeddingData, setPrimaryTraceKey} from './actions';\nimport GalleryImage from './GalleryImage';\nimport {createScatterPlot} from './ThreeUtil';\nimport {splitSearchTokens} from './util';\n\nfunction createContainer(chartSize) {\n    const containerElement = document.createElement('div');\n    containerElement.style.position = 'absolute';\n    containerElement.style.left = '-9999px';\n    containerElement.style.width = chartSize + 'px';\n    containerElement.style.height = chartSize + 'px';\n    return containerElement;\n}\n\nclass GalleryCharts extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.containerElement = createContainer(this.props.chartSize);\n        document.body.appendChild(this.containerElement);\n        this.scatterPlot = createScatterPlot(this.containerElement, window.ApplePaySession != null, false, false);\n        this.emptySet = new Set();\n\n    }\n\n    onChartSelected = (traceInfo) => {\n        this.props.handlePrimaryTraceKey(getTraceKey(traceInfo));\n        window.scrollTo(0, 0);\n    };\n\n    onSortEnd = (galleryTraces, e) => {\n        galleryTraces[e.oldIndex].sortIndex = e.newIndex;\n        galleryTraces[e.newIndex].sortIndex = e.oldIndex;\n        this.props.handleEmbeddingData(this.props.embeddingData.slice());\n    };\n\n\n    render() {\n        let {\n            cachedData,\n            categoricalNames,\n            chartSize,\n            chartOptions,\n            embeddingData,\n            embeddingLabels,\n            markerOpacity,\n            pointSize,\n            primaryChartSize,\n            searchTokens,\n            selection,\n            unselectedMarkerOpacity\n        } = this.props;\n        if (this.containerElement.style.width !== this.props.chartSize + 'px') {\n            document.body.removeChild(this.containerElement);\n            this.containerElement = createContainer(this.props.chartSize);\n            document.body.appendChild(this.containerElement);\n            this.scatterPlot = createScatterPlot(this.containerElement, window.ApplePaySession, false, false);\n        }\n        let galleryTraces = embeddingData.filter(traceInfo => traceInfo.active);\n\n        for (let i = 0; i < galleryTraces.length; i++) {\n            if (galleryTraces[i].sortIndex == null) {\n                galleryTraces[i].sortIndex = i;\n            }\n        }\n        galleryTraces.sort((a, b) => a.sortIndex - b.sortIndex);\n        const obsCat = splitSearchTokens(searchTokens).obsCat.filter(item => embeddingLabels.indexOf(item) !== -1);\n        // const DragHandle = sortableHandle(() => <span>::</span>);\n\n        const SortableItem = sortableElement(({traceInfo}) => <GalleryImage\n            traceInfo={traceInfo}\n            obsCat={obsCat}\n            cachedData={cachedData}\n            scatterPlot={this.scatterPlot}\n            markerOpacity={markerOpacity}\n            chartOptions={chartOptions}\n            pointSize={pointSize}\n            chartSize={chartSize}\n            categoricalNames={categoricalNames}\n            primaryChartSize={primaryChartSize}\n            unselectedMarkerOpacity={unselectedMarkerOpacity}\n            selection={selection}\n            containerElement={this.containerElement}\n            onSelect={this.onChartSelected}\n            key={getTraceKey(traceInfo)}/>);\n\n        const SortableList = sortableContainer(({items}) => {\n            return (\n                <ul style={{padding: 0}}>\n                    {items.map((traceInfo, index) => (\n                        <SortableItem key={getTraceKey(traceInfo)} index={index} traceInfo={traceInfo}/>\n                    ))}\n                </ul>\n            );\n        });\n\n        return (\n            <React.Fragment><Typography variant=\"subtitle1\">Gallery<Tooltip\n                title=\"Drag gallery charts to reorder. Click chart to set primary view.\"><HelpOutlineIcon\n                style={{verticalAlign: 'text-bottom'}}/></Tooltip></Typography>\n                <SortableList\n                    distance={2}\n                    axis=\"xy\" items={galleryTraces}\n                    onSortEnd={(e) => this.onSortEnd(galleryTraces, e)}/></React.Fragment>);\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cachedData: state.cachedData,\n        categoricalNames: state.categoricalNames,\n        chartOptions: state.chartOptions,\n        chartSize: state.chartSize,\n        embeddingData: state.embeddingData,\n        embeddingLabels: state.embeddingLabels,\n        markerOpacity: state.markerOpacity,\n        pointSize: state.pointSize,\n        primaryChartSize: state.primaryChartSize,\n        primaryTraceKey: state.primaryTraceKey,\n        searchTokens: state.searchTokens,\n        selection: state.selection,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handlePrimaryTraceKey: (value) => {\n            dispatch(setPrimaryTraceKey(value));\n        },\n        handleEmbeddingData: (value) => {\n            dispatch(setEmbeddingData(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(GalleryCharts));\n\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setDialog} from './actions';\n\nclass HelpDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n        };\n    }\n\n    handleClose = () => {\n        this.props.handleClose();\n    };\n\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"help-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"help-dataset-dialog-title\">Help</DialogTitle>\n                <DialogContent>\n                    <Typography variant=\"h6\">Primary Embedding Controls</Typography>\n                    <Typography variant=\"subtitle1\">3-d Plot</Typography>\n                    Rotate: Mouse left click.<br/>\n                    Pan: Mouse right click.<br/>\n                    Zoom: Mouse wheel.<br/>\n\n                    <Typography variant=\"subtitle1\">2-d Plot</Typography>\n                    Pan: Mouse left click.<br/>\n                    Zoom: Mouse wheel.<br/>\n                    <Divider/>\n                    <Typography variant=\"h6\">Gallery</Typography>\n                    Drag chart to reorder. Click plot to set primary view.\n                    <Divider/>\n                    <Typography variant=\"h6\">Dot Plot</Typography>\n                    Enter one or more categorical observations and one or more features.\n                    <Divider/>\n                    <Typography variant=\"h6\">Additional documentation is available <a target=\"_blank\"\n                                                                                      rel=\"noopener noreferrer\"\n                                                                                      href=\"http://cirrocumulus.readthedocs.io/\">here</a>.</Typography>\n                </DialogContent>\n\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n\n\n        handleClose: value => {\n            dispatch(setDialog(null));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(HelpDialog));\n\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport {debounce} from 'lodash';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setChartOptions, setDialog} from './actions';\n\n\nclass MoreOptionsDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {labelFontSize: '', labelStrokeWidth: ''};\n        this.onLabelFontSizeUpdate = debounce(this.onLabelFontSizeUpdate, 500);\n        this.onLabelStrokeWidthUpdate = debounce(this.onLabelStrokeWidthUpdate, 500);\n    }\n\n    componentDidMount() {\n        this.setState({\n            labelFontSize: this.props.chartOptions.labelFontSize,\n            labelStrokeWidth: this.props.chartOptions.labelStrokeWidth\n        });\n    }\n\n    handleClose = () => {\n        this.props.handleClose();\n    };\n\n    onLabelFontSizeUpdate = (value) => {\n        if (!isNaN(value) && value > 0) {\n            this.props.chartOptions.labelFontSize = value;\n            this.props.handleChartOptions(this.props.chartOptions);\n            this.setState({labelFontSize: value});\n        }\n    };\n\n    onLabelFontSize = (event) => {\n        this.setState({labelFontSize: event.target.value});\n        this.onLabelFontSizeUpdate(event.target.value);\n    };\n\n    onLabelStrokeWidth = (event) => {\n        this.setState({labelStrokeWidth: event.target.value});\n    };\n\n    onLabelStrokeWidthUpdate = (value) => {\n        if (!isNaN(value) && value >= 0) {\n            this.props.chartOptions.labelStrokeWidth = value;\n            this.props.handleChartOptions(this.props.chartOptions);\n            this.setState({labelStrokeWidth: value});\n        }\n\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"more-options-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"more-options-dialog-title\">More Options</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        value={this.state.labelFontSize}\n                        onChange={this.onLabelFontSize}\n                        margin=\"dense\"\n                        label=\"Label Font Size\"\n                        fullWidth\n                    />\n\n                    <TextField\n                        value={this.state.labelStrokeWidth}\n                        onChange={this.onLabelStrokeWidth}\n                        margin=\"dense\"\n                        label=\"Label Shadow Size\"\n                        fullWidth\n                    />\n\n                </DialogContent>\n\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        chartOptions: state.chartOptions,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleChartOptions: value => {\n            dispatch(setChartOptions(value));\n        },\n        handleClose: () => {\n            dispatch(setDialog(null));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(MoreOptionsDialog));\n\n","import {Table, TableBody, TableCell, TableHead, TableRow} from '@material-ui/core';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setDistributionPlotOptions} from './actions';\n\n\nclass PrecomputedResultsPanel extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = (event, row) => {\n        event.stopPropagation();\n        // this.props.xx();\n    };\n\n    render() {\n        const selectedId = null;\n        const {dataset} = this.props;\n        if (dataset == null || dataset.results == null) {\n            return null;\n        }\n        const columns = dataset.results.columns;\n        const rows = dataset.results.rows;\n        return <React.Fragment>\n            <div style={{maxHeight: 600, overflow: 'auto'}}>\n                <Table stickyHeader size={\"small\"}>\n                    <TableHead>\n                        <TableRow>\n                            {columns.map(column => {\n                                return <TableCell key={column.field}>{column.field}</TableCell>;\n                            })}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {rows.map(row => {\n                            return <TableRow\n                                hover\n                                onClick={(event) => this.handleClick(event, row)}\n                                role=\"checkbox\"\n                                aria-checked={false}\n                                tabIndex={-1}\n                                key={row.id}\n                                selected={row.id === selectedId}\n                            >\n                                {columns.map(column => {\n                                    return <TableCell key={column.field}>{row[column.field]}</TableCell>;\n                                })}\n                            </TableRow>;\n                        })}\n\n                    </TableBody>\n                </Table>\n            </div>\n            <div></div>\n        </React.Fragment>;\n    }\n}\n\n\nconst mapStateToProps = state => {\n        return {\n            dataset: state.dataset\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            onDistributionPlotOptions: (payload) => {\n                dispatch(setDistributionPlotOptions(payload));\n            },\n        };\n    }\n;\n\nexport default connect(\n    mapStateToProps, mapDispatchToProps,\n)(PrecomputedResultsPanel);\n\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {saveDatasetFilter, setDialog, setMessage} from './actions';\n\nclass SaveDatasetFilterDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            name: '',\n            notes: ''\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.savedFilter == null) {\n            this.setState({name: '', notes: '', create: true});\n        } else {\n            this.setState({name: this.props.savedFilter.name, notes: this.props.savedFilter.notes});\n        }\n    }\n\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n\n    onNotesChanged = (event) => {\n        this.setState({notes: event.target.value});\n    };\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        let name = this.state.name.trim();\n        let notes = this.state.notes;\n        if (notes != null) {\n            notes = notes.trim();\n        }\n        this.setState({loading: true});\n        this.props.handleSave({name: name, notes: notes});\n    };\n\n\n    render() {\n        let {name, notes, create} = this.state;\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-dataset-filter-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"edit-dataset-filter-dialog-title\">{create\n                    ? 'Create'\n                    : 'Edit'} Filter</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        required={true}\n                        value={name}\n                        autoComplete=\"off\"\n                        onChange={this.onNameChanged}\n                        margin=\"dense\"\n                        label=\"Name\"\n                        fullWidth\n                    />\n\n                    <TextField\n                        required={false}\n                        autoComplete=\"off\"\n                        value={notes}\n                        onChange={this.onNotesChanged}\n                        margin=\"dense\"\n                        label=\"Notes\"\n                        fullWidth\n                    />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={name.trim().length === 0} onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        savedFilter: state.savedDatasetFilter,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveDatasetFilter(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(SaveDatasetFilterDialog));\n\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {saveFeatureSet, setDialog, setMessage} from './actions';\n\nclass SaveSetDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            name: '',\n            category: ''\n        };\n    }\n\n\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n\n    onCategoryChanged = (event) => {\n        this.setState({category: event.target.value});\n    };\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        let name = this.state.name.trim();\n        let category = this.state.category;\n        if (category != null) {\n            category = category.trim();\n        }\n        this.setState({loading: true});\n        this.props.handleSave({name: name, category: category});\n    };\n\n\n    render() {\n        let {name, category} = this.state;\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-set-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"edit-set-dialog-title\">Create Set</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        required={true}\n                        autoComplete=\"off\"\n                        value={name}\n                        onChange={this.onNameChanged}\n                        margin=\"dense\"\n                        label=\"Set Name\"\n                        fullWidth\n                    />\n\n                    <TextField\n                        required={true}\n                        autoComplete=\"off\"\n                        value={category}\n                        onChange={this.onCategoryChanged}\n                        margin=\"dense\"\n                        label=\"Set Category\"\n                        fullWidth\n                    />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={name.trim().length === 0 || category.trim().length === 0}\n                            onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        savedFilter: state.savedDatasetFilter,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveFeatureSet(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(SaveSetDialog));\n\n","import {Typography} from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {VariableSizeList} from 'react-window';\n\nconst LISTBOX_PADDING = 0; // px\n\nfunction renderRow(props) {\n    const {data, index, style} = props;\n    return React.cloneElement(data[index], {\n        style: {\n            ...style,\n            top: style.top + LISTBOX_PADDING,\n        },\n    });\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n    const outerProps = React.useContext(OuterElementContext);\n    return <div ref={ref} {...props} {...outerProps} />;\n});\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n    const {children, ...other} = props;\n    const itemData = React.Children.toArray(children);\n    const theme = useTheme();\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'), {noSsr: true});\n    const itemCount = itemData.length;\n    const itemSize = smUp ? 24 : 36;\n\n    const getChildSize = (child) => {\n        // if (React.isValidElement(child) && child.type === ListSubheader) {\n        //     return 48;\n        // }\n\n        return itemSize;\n    };\n\n    const getHeight = () => {\n        if (itemCount > 8) {\n            return 8 * itemSize;\n        }\n        return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n    };\n\n    return (\n        <div ref={ref}>\n            <OuterElementContext.Provider value={other}>\n                <VariableSizeList\n                    itemData={itemData}\n                    height={getHeight() + LISTBOX_PADDING}\n                    width=\"100%\"\n                    key={itemCount}\n                    outerElementType={OuterElementType}\n                    innerElementType=\"ul\"\n                    itemSize={(index) => getChildSize(itemData[index])}\n                    overscanCount={5}\n                    itemCount={itemCount}\n                >\n                    {renderRow}\n                </VariableSizeList>\n            </OuterElementContext.Provider>\n        </div>\n    );\n});\n\nListboxComponent.propTypes = {\n    children: PropTypes.node,\n};\n\n\nconst useStyles = makeStyles({\n    paper: {width: 230},\n    listbox: {\n        '& ul': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\n\nconst renderGroup = (params) => [\n    <ListSubheader disableGutters component=\"div\">\n        <Typography noWrap>{params.group}</Typography>\n    </ListSubheader>,\n    params.children,\n];\n\n\nexport default function AutocompleteVirtualized(props) {\n    const classes = useStyles();\n    const ref = React.createRef();\n\n    function onDrop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        let dt = event.dataTransfer;\n        let files = dt.files;\n        let reader = new FileReader();\n        reader.onload = function (event) {\n            let text = event.target.result;\n            let tokens = text.split(/[\\n,\\t]/);\n            enterTokens(event, tokens);\n        };\n\n        reader.onerror = function (event) {\n            alert(\"Unable to read file.\");\n        };\n\n        reader.readAsText(files[0]);\n        showDragIndicator(false);\n    };\n\n    function enterTokens(event, tokens) {\n        let results = [];\n        tokens.forEach(token => {\n            token = token.toLowerCase().trim().replace(/\"/g, '');\n            if (token !== '') {\n                for (let i = 0; i < props.options.length; i++) {\n                    const option = props.options[i];\n                    const text = option.text != null ? option.text : option;\n                    if (text.toLowerCase() === token) {\n                        results.push(option);\n                        break;\n                    }\n\n                }\n            }\n        });\n        props.onChange(event, results);\n    }\n\n    function onPaste(event) {\n        let text = event.clipboardData.getData('text/plain');\n        if (text != null && text.length > 0) {\n            event.preventDefault();\n            event.stopPropagation();\n            let tokens = text.split(/[\\n,\\t]/);\n            enterTokens(event, tokens);\n        }\n    };\n\n    function showDragIndicator(show) {\n        ref.current.style.background = show ? '#1976d2' : '';\n    }\n\n    function onDragOver(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        showDragIndicator(true);\n\n    };\n\n    function onDragEnd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        showDragIndicator(false);\n    };\n\n    const filterOptions = createFilterOptions({matchFrom: 'any'});\n    const onChipClick = props.onChipClick ? (event, option) => {\n        props.onChipClick(event, option);\n    } : null;\n\n    let getOptionSelected = props.getOptionSelected;\n    if (getOptionSelected == null) {\n        getOptionSelected = props.groupBy ? (option, value) => option.id === value.id && option.group === value.group : (option, value) => option === value;\n    }\n    let getChipText = props.getChipText;\n    if (getChipText == null) {\n        getChipText = (option) => option;\n    }\n    let getChipIcon = props.getChipIcon;\n    if (getChipIcon == null) {\n        getChipIcon = (option) => null;\n    }\n    let getChipTitle = props.getChipTitle;\n    if (getChipTitle == null) {\n        getChipTitle = (option) => null;\n    }\n    let getOptionLabel = props.getOptionLabel;\n    if (getOptionLabel == null) {\n        getOptionLabel = props.groupBy ? (option) => option.text : (option) => option;\n    }\n    let renderOption = props.renderOption;\n    if (renderOption == null) {\n\n        renderOption = props.groupBy ? (option) => <Typography title={option.text}\n                                                               noWrap>{option.text}</Typography> : (option) =>\n            <Typography\n                title={option} noWrap>{option}</Typography>;\n    }\n    return (\n        <Autocomplete\n            multiple\n            ref={ref}\n            filterOptions={filterOptions}\n            disableListWrap\n            classes={classes}\n            getOptionSelected={getOptionSelected}\n            value={props.value}\n            openOnFocus={true}\n            filterSelectedOptions={true}\n            getOptionLabel={getOptionLabel}\n            groupBy={props.groupBy ? (option) => option.group : null}\n            blurOnSelect={true}\n            ChipProps={{size: 'small'}}\n            ListboxComponent={ListboxComponent}\n            renderGroup={renderGroup}\n            options={props.options}\n            autoHighlight={true}\n            onChange={props.onChange}\n            renderTags={(value, getTagProps) =>\n                value.map((option, index) => {\n                    return (\n                        <Chip\n                            variant=\"default\"\n                            onClick={onChipClick ? event => onChipClick(event, option) : null}\n                            label={getChipText(option)}\n                            title={getChipTitle(option)}\n                            size=\"small\"\n                            icon={getChipIcon(option)}\n                            {...getTagProps({index})}\n                        />);\n                })\n            }\n            renderInput={(params) => <TextField margin=\"dense\" {...params} label={props.label}\n                                                helperText={props.helperText}/>}\n            renderOption={renderOption}\n            onPaste={onPaste}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            onDragEnd={onDragEnd}\n            onDragLeave={onDragEnd}\n        />\n    );\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport memoize from 'memoize-one';\nimport natsort from 'natsort';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setDistributionPlotOptions} from './actions';\nimport AutocompleteVirtualized from './AutocompleteVirtualized';\n\nconst sorter = natsort({insensitive: true});\nconst getOptions = memoize(\n    (rows, field) => {\n        const uniqueOptions = new Set();\n        rows.forEach(item => {\n            uniqueOptions.add(item[field]);\n        });\n        const options = Array.from(uniqueOptions);\n        options.sort(sorter);\n        return options;\n    }\n);\nconst styles = theme => ({\n    formControl: {\n        display: 'block',\n        minWidth: 200,\n        margin: theme.spacing(0, 1)\n    }\n});\n// cirro computed result: {type:['de', 'corr'], params:{}, results:[]}\n// for de results is an array of features cluster1_q. cluster_1_fc, cluster_1_percent_expressed, etc.\n// facet to pick result, for user submitted jobs: date, name, type\n// another facet to filter result (e.g. LFC)\n// for custom results\nclass PrecomputedResultsSelector extends React.PureComponent {\n\n    onChange = (event, value, field) => {\n        this.props.dataset.results.facets[field] = value;\n        const columns = this.props.dataset.results.columns;\n    };\n\n    render() {\n        const {dataset, classes} = this.props;\n        const results = dataset ? dataset.results : null;\n        if (results == null) {\n            return null;\n        }\n        const {columns} = results;\n\n        if (results.facets == null) {\n            results.facets = {};\n        }\n        if (results.allRows == null) {\n            results.allRows = results.rows;\n        }\n\n        return columns.map(column => {\n            return <FormControl key={column.field} className={classes.formControl}>\n                <AutocompleteVirtualized\n                    label={column.field}\n                    multiple={true}\n                    options={getOptions(results.allRows, column.field)}\n                    value={results.facets[column.field]}\n                    onChange={(event, value) => this.onChange(event, value, column.field)}\n                />\n            </FormControl>;\n        });\n\n    }\n}\n\nconst mapStateToProps = state => {\n        return {\n            dataset: state.dataset\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            onDistributionPlotOptions: (payload) => {\n                dispatch(setDistributionPlotOptions(payload));\n            },\n        };\n    }\n;\n\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(PrecomputedResultsSelector));\n","import {InputLabel, Switch, Typography} from '@material-ui/core';\nimport MuiAccordionPanel from '@material-ui/core/Accordion';\nimport MuiAccordionPanelDetails from '@material-ui/core/AccordionDetails';\nimport MuiAccordionPanelSummary from '@material-ui/core/AccordionSummary';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Slider from '@material-ui/core/Slider';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport CompareIcon from '@material-ui/icons/Compare';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FontDownloadRoundedIcon from '@material-ui/icons/FontDownloadRounded';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport SaveIcon from '@material-ui/icons/Save';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport {debounce, findIndex} from 'lodash';\nimport memoize from \"memoize-one\";\nimport natsort from 'natsort';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    deleteDatasetFilter,\n    deleteFeatureSet,\n    downloadSelectedIds,\n    exportDatasetFilters,\n    getDatasetFilterArray,\n    getEmbeddingKey,\n    getTraceKey,\n    MORE_OPTIONS_DIALOG,\n    openDatasetFilter,\n    removeDatasetFilter,\n    SAVE_DATASET_FILTER_DIALOG,\n    SAVE_FEATURE_SET_DIALOG,\n    setBinSummary,\n    setBinValues,\n    setChartSize,\n    setCombineDatasetFilters,\n    setDialog,\n    setDistributionPlotOptions,\n    setInterpolator,\n    setMarkerOpacity,\n    setNumberOfBins,\n    setPointSize,\n    setPrimaryTraceKey,\n    setSearchTokens,\n    setSelectedEmbedding,\n    setTab,\n    setUnselectedMarkerOpacity,\n    submitJob,\n    toggleEmbeddingLabel\n} from './actions';\nimport AutocompleteVirtualized from './AutocompleteVirtualized';\nimport ColorSchemeSelector from './ColorSchemeSelector';\nimport {intFormat} from './formatters';\nimport PrecomputedResultsSelector from './PrecomputedResultsSelector';\nimport {\n    FEATURE_SET_SEARCH_TOKEN,\n    getFeatureSets,\n    METAFEATURE_SEARCH_TOKEN,\n    OBS_SEARCH_TOKEN,\n    splitSearchTokens,\n    X_SEARCH_TOKEN\n} from './util';\n\nconst sorter = natsort({insensitive: true});\nconst pointSizeOptions = [{value: 0.1, label: '10%'}, {value: 0.25, label: '25%'}, {value: 0.5, label: '50%'}, {\n    value: 0.75,\n    label: '75%'\n}, {value: 1, label: '100%'}, {value: 1.5, label: '150%'}, {value: 2, label: '200%'}, {\n    value: 3,\n    label: '300%'\n}, {value: 4, label: '400%'}];\nconst gallerySizeOptions = [{value: 300, label: 'Small'}, {value: 500, label: 'Medium'}, {\n    value: 800,\n    label: 'Large'\n}];\nconst summaryOptions = [\n    {value: 'max', label: 'Maximum'},\n    {value: 'mean', label: 'Mean'},\n    {value: 'sum', label: 'Sum'}];\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column'\n    },\n    formControl: {\n        display: 'block',\n        minWidth: 200,\n        margin: theme.spacing(0, 1)\n    },\n    select: {\n        minWidth: 200,\n    },\n\n    toolbar: {\n        '& hr': {\n            margin: theme.spacing(0, 0.5),\n        }\n    }\n});\n\n\nconst getAnnotationOptions = memoize(\n    (obs, obsCat) => {\n        const options = [];\n        obs.forEach(item => {\n            options.push({group: 'Continuous', text: item, id: item});\n        });\n        obsCat.forEach(item => {\n            options.push({group: 'Categorical', text: item, id: item});\n        });\n        options.sort((item1, item2) => {\n            const c = sorter(item1.group, item2.group);\n            if (c !== 0) {\n                return c;\n            }\n            return sorter(item1.text, item2.text);\n        });\n        return options;\n    }\n);\nconst getEmbeddingOptions = memoize(\n    (embeddings) => {\n        const options = [];\n        embeddings.forEach(item => {\n            options.push({text: item.name + (item.dimensions === 3 ? ' 3d' : ''), id: getEmbeddingKey(item)});\n        });\n\n        options.sort((item1, item2) => {\n            return sorter(item1.text.toLowerCase(), item2.text.toLowerCase());\n        });\n        return options;\n    }\n);\nconst getMetafeaturesOptions = memoize((items) => {\n        if (items) {\n            const options = items.slice();\n            options.sort(sorter);\n            return options;\n        }\n    }\n);\nconst getFeatureSetOptions = memoize((items, categoricalNames) => {\n        const options = items.map(item => ({group: item.category, text: item.name, id: item.id}));\n\n        options.forEach(item => {\n            let group = item.group;\n            let index = group.lastIndexOf(' (');\n            if (index !== -1) {\n                group = group.substring(0, index);\n            }\n            let map = categoricalNames[group] || {};\n            let newName = map[item.text];\n            if (newName != null) {\n                item.text = newName;\n            }\n        });\n        options.sort((item1, item2) => {\n            const c = sorter(item1.group, item2.group);\n            if (c !== 0) {\n                return c;\n            }\n            return sorter(item1.text, item2.text);\n        });\n        return options;\n    }\n);\nconst Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiAccordionPanel);\n\nconst AccordionPanelSummary = withStyles({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, .03)',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        marginBottom: -1,\n        minHeight: 43,\n        '&$expanded': {\n            minHeight: 43,\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiAccordionPanelSummary);\n\nconst AccordionPanelDetails = withStyles(theme => ({\n    root: {\n        padding: 0,\n    },\n}))(MuiAccordionPanelDetails);\n\n\nclass SideBar extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            featureSetAnchorEl: null,\n            featureSet: null,\n            featureSetView: false,\n            opacity: props.markerOpacity,\n            unselectedOpacity: props.unselectedMarkerOpacity\n        };\n        this.updateMarkerOpacity = debounce(this.updateMarkerOpacity, 500);\n        this.updateUnselectedMarkerOpacity = debounce(this.updateUnselectedMarkerOpacity, 500);\n        // this.updateNumberOfBins = debounce(this.updateNumberOfBins, 200);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.markerOpacity !== this.props.markerOpacity) {\n            this.setState({opacity: this.props.markerOpacity});\n        }\n        if (prevProps.unselectedMarkerOpacity !== this.props.unselectedMarkerOpacity) {\n            this.setState({unselectedOpacity: this.props.unselectedMarkerOpacity});\n        }\n    }\n\n    onMarkerOpacityChange = (event, value) => {\n\n        this.setState({opacity: value});\n        this.updateMarkerOpacity(value);\n    };\n\n    updateMarkerOpacity = (value) => {\n        let opacity = parseFloat(value);\n        if (opacity >= 0 && opacity <= 1) {\n            this.props.handleMarkerOpacity(opacity);\n        }\n    };\n\n    onUnselectedMarkerOpacityChange = (event, value) => {\n        this.setState({unselectedOpacity: value});\n        this.updateUnselectedMarkerOpacity(value);\n    };\n\n    updateUnselectedMarkerOpacity = (value) => {\n        let opacity = parseFloat(value);\n        if (opacity >= 0 && opacity <= 1) {\n            this.props.handleUnselectedMarkerOpacity(opacity);\n        }\n\n    };\n\n\n    openDatasetFilter = (filterId) => {\n        this.props.handleOpenDatasetFilter(filterId);\n    };\n\n    deleteDatasetFilter = (filterId) => {\n        this.props.handleDeleteDatasetFilter(filterId);\n    };\n\n    onPointSizeChange = (event) => {\n        this.props.handlePointSize(event.target.value);\n    };\n\n    onFeaturesChange = (event, value) => {\n        this.props.handleSearchTokens(value, X_SEARCH_TOKEN);\n    };\n\n    onMetafeaturesChange = (event, value) => {\n        this.props.handleSearchTokens(value, METAFEATURE_SEARCH_TOKEN);\n    };\n\n    onObservationsIconClick = (event, option) => {\n        this.props.handleEmbeddingLabel(option);\n        event.stopPropagation();\n    };\n\n    onObservationsChange = (event, value) => {\n        let values = [];\n        value.forEach(val => {\n            if (val.text !== undefined) {\n                values.push(val.text);\n            } else {\n                values.push(val);\n            }\n        });\n        this.props.handleSearchTokens(values, OBS_SEARCH_TOKEN);\n    };\n\n    onSaveFeatureList = () => {\n        this.props.handleDialog(SAVE_FEATURE_SET_DIALOG);\n    };\n\n    onEmbeddingsChange = (event, value) => {\n        const selection = [];\n        const embeddingKeys = this.props.dataset.embeddings.map(item => getEmbeddingKey(item));\n        value.forEach(val => {\n            const id = val.id !== undefined ? val.id : val;\n            const index = embeddingKeys.indexOf(id);\n            let embedding = this.props.dataset.embeddings[index];\n            if (!embedding.precomputed) {\n                embedding = Object.assign(embedding, {\n                    bin: this.props.binValues,\n                    nbins: this.props.numberOfBins,\n                    agg: this.props.binSummary\n                });\n            }\n            selection.push(embedding);\n        });\n\n\n        this.props.handleEmbeddings(selection);\n    };\n\n    onFeatureSetsChange = (event, value) => {\n        let values = [];\n        value.forEach(val => {\n            if (val.id !== undefined) {\n                values.push(val.id);\n            } else {\n                values.push(val);\n            }\n        });\n        this.props.handleSearchTokens(values, FEATURE_SET_SEARCH_TOKEN);\n    };\n\n    onFeatureSetClick = (event, option) => {\n        const id = option.id;\n        const target = event.target;\n        let markers = this.props.markers;\n\n        let featureSet = null;\n        for (let i = 0; i < markers.length; i++) {\n            if (markers[i].id === id) {\n                featureSet = markers[i];\n                break;\n            }\n        }\n        if (featureSet == null) {\n            console.log(id + ' not found');\n        }\n        event.stopPropagation();\n        this.setState({featureSetAnchorEl: target, featureSet: featureSet});\n\n    };\n\n    onFeatureSetMenuClose = (event) => {\n        this.setState({featureSetAnchorEl: null, featureSet: null});\n    };\n\n    onViewFeatureSet = (event) => {\n        event.stopPropagation();\n        this.setState({featureSetAnchorEl: null, featureSetView: true});\n    };\n\n    onCloseViewFeatureSetDialog = (event) => {\n        event.stopPropagation();\n        this.setState({featureSet: null, featureSetView: false});\n    };\n\n    onDeleteFeatureSet = (event) => {\n        event.stopPropagation();\n        let searchTokens = this.props.searchTokens;\n        const featureSetId = this.state.featureSet.id;\n        let value = searchTokens.filter(token => token.type === FEATURE_SET_SEARCH_TOKEN && token.value.id !== featureSetId);\n        this.props.handleSearchTokens(value, FEATURE_SET_SEARCH_TOKEN);\n        this.props.handleDeleteFeatureSet(featureSetId);\n        this.setState({featureSetAnchorEl: null, featureSet: null});\n    };\n\n    onFilterChipClicked = (event) => {\n        this.onFeatureClick(event, event.target.innerText);\n    };\n\n    onFeatureClick = (event, option) => {\n        event.stopPropagation();\n\n        const value = option.text !== undefined ? option.text : option;\n        let galleryTraces = this.props.embeddingData.filter(traceInfo => traceInfo.active);\n        for (let i = 0; i < galleryTraces.length; i++) {\n            if (galleryTraces[i].name == value) {\n                if (this.props.tab !== 'embedding') {\n                    this.props.handleTab('embedding');\n                }\n                this.props.handlePrimaryTraceKey(getTraceKey(galleryTraces[i]));\n                break;\n            }\n        }\n    };\n\n    // onNumberOfBinsChange = (event) => {\n    //     this.props.handleNumberOfBinsUI(event.target.value);\n    //     this.updateNumberOfBins(event.target.value);\n    // };\n    //\n    // updateNumberOfBins = (value) => {\n    //\n    //     value = parseInt(value);\n    //     if (value >= 0) {\n    //         this.props.handleNumberOfBins(value);\n    //         let embeddings = this.props.embeddings;\n    //         for (let i = 0; i < embeddings.length; i++) {\n    //             if (!embeddings[i].precomputed) {\n    //                 embeddings[i] = Object.assign(embeddings[i], {nbins: value, _nbins: value});\n    //             }\n    //         }\n    //         this.props.handleEmbeddings(embeddings.slice(0));\n    //\n    //     }\n    // };\n\n    onChartSizeChange = (event) => {\n        const value = event.target.value;\n        this.props.handleChartSize(value);\n\n    };\n\n    onBinSummaryChange = (event) => {\n        const value = event.target.value;\n        this.props.handleBinSummary(value);\n        let embeddings = this.props.embeddings;\n        for (let i = 0; i < embeddings.length; i++) {\n            if (!embeddings[i].precomputed) {\n                embeddings[i] = Object.assign(embeddings[i], {agg: value});\n            }\n        }\n        this.props.handleEmbeddings(embeddings.slice(0));\n    };\n\n    handleBinValuesChange = (event) => {\n        const value = event.target.checked;\n        this.props.handleBinValues(value);\n        let embeddings = this.props.embeddings;\n        for (let i = 0; i < embeddings.length; i++) {\n            if (!embeddings[i].precomputed) {\n                embeddings[i] = Object.assign(embeddings[i], {bin: value});\n            }\n        }\n        this.props.handleEmbeddings(embeddings.slice(0));\n    };\n\n    handleSelectedCellsClick = (event) => {\n        event.preventDefault();\n        this.props.downloadSelectedIds();\n    };\n\n    handleDifferentialExpression = (event) => {\n        event.preventDefault();\n        this.props.handleDifferentialExpression();\n    };\n\n\n    onDatasetFilterChipDeleted = (name) => {\n        this.props.removeDatasetFilter(name);\n    };\n\n    onDatasetFilterCleared = () => {\n        this.props.removeDatasetFilter(null);\n    };\n\n    onDatasetFilterSaved = () => {\n        this.props.handleDialog(SAVE_DATASET_FILTER_DIALOG);\n    };\n\n    handleCombineDatasetFilters = (event) => {\n        this.props.handleCombineDatasetFilters(event.target.checked ? 'or' : 'and');\n    };\n\n    onChartTypeChange = (event) => {\n        this.props.onDistributionPlotOptions({chartType: event.target.value});\n    };\n\n    onViolinScaleChange = (event) => {\n        this.props.onDistributionPlotOptions({violinScale: event.target.value});\n    };\n\n    onViolinShowBoxplot = (event) => {\n        this.props.onDistributionPlotOptions({violinShowBoxplot: event.target.checked});\n    };\n\n\n    render() {\n        const {\n            binSummary,\n            binValues,\n            categoricalNames,\n            chartSize,\n            classes,\n            combineDatasetFilters,\n            dataset,\n            datasetFilter,\n            datasetFilters,\n            distributionPlotOptions,\n            embeddingLabels,\n            embeddings,\n            interpolator,\n            markers,\n            pointSize,\n            searchTokens,\n            selection,\n            serverInfo,\n            tab,\n        } = this.props;\n        const chartType = distributionPlotOptions.chartType;\n        let currentDatasetFilters = getDatasetFilterArray(datasetFilter);\n        const datasetFilterKeys = [];\n        let isBrushing = false;\n        currentDatasetFilters.forEach(f => {\n            if (typeof f[0] === 'object') {\n                isBrushing = true;\n            } else {\n                datasetFilterKeys.push(f[0]);\n            }\n        });\n        datasetFilterKeys.sort((a, b) => {\n            a = a.toLowerCase();\n            b = b.toLowerCase();\n            return a < b ? -1 : (a === b ? 0 : 1);\n        });\n        if (isBrushing) {\n            datasetFilterKeys.push('selection');\n        }\n\n        // for filters we only need one embedding trace per feature\n        // const traceNames = new Set();\n        // const filterTraces = [];\n        // let primaryTraceName;\n        // embeddingData.forEach(trace => {\n        //     if (primaryTraceKey === getTraceKey(trace)) {\n        //         primaryTraceName = trace.name;\n        //     }\n        //     if (trace.active && trace.name !== '__count' && !traceNames.has(trace.name)) {\n        //         traceNames.add(trace.name);\n        //         filterTraces.push(trace);\n        //     }\n        // });\n        // // put active trace 1st\n        // filterTraces.sort((a, b) => {\n        //     if (a.name === primaryTraceName) {\n        //         return -1;\n        //     }\n        //     if (b.name === primaryTraceName) {\n        //         return 1;\n        //     }\n        //     a = a.name.toLowerCase();\n        //     b = b.name.toLowerCase();\n        //     return a < b ? -1 : (a === b ? 0 : 1);\n        // });\n\n\n        let savedDatasetFilter = this.props.savedDatasetFilter;\n        if (savedDatasetFilter == null) {\n            savedDatasetFilter = {};\n        }\n        const splitTokens = splitSearchTokens(searchTokens);\n        const featureSets = getFeatureSets(markers, splitTokens.featureSets);\n        const featureOptions = dataset.features;\n        const metafeatureOptions = getMetafeaturesOptions(dataset.metafeatures);\n        const isSummarized = dataset.precomputed != null;\n        const obsCat = dataset.obsCat;\n        const obs = dataset.obs;\n        const annotationOptions = getAnnotationOptions(obs, obsCat);\n        const featureSetOptions = getFeatureSetOptions(markers, categoricalNames);\n        const embeddingOptions = getEmbeddingOptions(dataset.embeddings);\n        const selectedEmbeddings = getEmbeddingOptions(embeddings);\n        const fancy = serverInfo.fancy;\n        const showBinPlot = false;\n        const featureSetAnchorEl = this.state.featureSetAnchorEl;\n        const featureSet = this.state.featureSet;\n        return (\n            <div className={classes.root}>\n                <Dialog\n                    open={this.state.featureSetView}\n                    onClose={this.onCloseViewFeatureSetDialog}\n                    aria-labelledby=\"view-set-dialog-title\"\n                    fullWidth={true}\n                    maxWidth={'lg'}\n                >\n                    <DialogTitle id=\"view-set-dialog-title\">{featureSet ? featureSet.name : ''}</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            value={featureSet ? featureSet.features.join('\\n') : ''}\n                            margin=\"dense\"\n                            fullWidth\n                            readOnly={true}\n                            variant=\"outlined\"\n                            multiline={true}\n                        />\n                    </DialogContent>\n                </Dialog>\n                <Menu\n                    id=\"feature-set-menu\"\n                    anchorEl={featureSetAnchorEl}\n                    open={Boolean(featureSetAnchorEl)}\n                    onClose={this.onFeatureSetMenuClose}\n                >\n                    <MenuItem onClick={this.onViewFeatureSet}>View</MenuItem>\n                    <MenuItem divider={true}/>\n                    <MenuItem disabled={featureSet && featureSet.readonly}\n                              onClick={this.onDeleteFeatureSet}>Delete</MenuItem>\n\n\n                </Menu>\n                <Accordion style={tab === 'embedding' || tab === 'distribution' ? null : {display: 'none'}}\n                           defaultExpanded>\n                    <AccordionPanelSummary>\n                        <div>View</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails style={{flexDirection: 'column'}}>\n                        <div>\n                            {tab === 'embedding' && embeddingOptions.length > 0 &&\n                            <FormControl className={classes.formControl}>\n\n                                <AutocompleteVirtualized label={\"Embeddings\"}\n                                                         options={embeddingOptions}\n                                                         getChipTitle={(option) => {\n                                                             return option.text;\n                                                         }}\n                                                         value={selectedEmbeddings}\n                                                         getChipText={(option) => option.text}\n                                                         renderOption={(option) => <Typography\n                                                             noWrap>{option.text}</Typography>}\n                                                         getOptionLabel={(option) => option.text}\n                                                         getOptionSelected={(option, value) => findIndex(selectedEmbeddings, item => item.id === option.id) !== -1}\n                                                         onChange={this.onEmbeddingsChange}\n                                />\n                            </FormControl>}\n                            {featureOptions.length > 0 && <FormControl className={classes.formControl}>\n                                <AutocompleteVirtualized onChipClick={this.onFeatureClick}\n                                                         label={\"Genes/Features\"}\n                                                         options={featureOptions}\n                                                         value={splitTokens.X}\n                                                         onChange={this.onFeaturesChange}\n                                                         helperText={\"Enter or paste list\"}\n                                />\n                            </FormControl>}\n\n                            {annotationOptions.length > 0 && <FormControl className={classes.formControl}>\n\n                                <AutocompleteVirtualized label={\"Cell Metadata\"}\n                                                         options={annotationOptions}\n                                                         value={splitTokens.obsCat.concat(splitTokens.obs)}\n                                                         onChipClick={this.onFeatureClick}\n                                                         groupBy={true}\n                                                         getChipIcon={(option) => {\n                                                             return splitTokens.obsCat.indexOf(option) !== -1 ?\n                                                                 <FontDownloadRoundedIcon\n                                                                     onClick={(event) => {\n                                                                         this.onObservationsIconClick(event, option);\n                                                                     }}\n                                                                     title={\"Toggle Show/Hide Labels\"}\n                                                                     style={{\n                                                                         marginLeft: 4,\n                                                                         marginTop: 0,\n                                                                         marginRight: 0,\n                                                                         marginBottom: 0\n                                                                     }}\n                                                                     className={\"MuiChip-deleteIcon MuiChip-deleteIconSmall\" + (embeddingLabels.indexOf(option) !== -1 ? ' cirro-active' : '')}/> : null;\n                                                         }}\n                                                         getOptionSelected={(option, value) => option.id === value}\n                                                         onChange={this.onObservationsChange}/>\n                            </FormControl>}\n\n                            {metafeatureOptions && metafeatureOptions.length > 0 &&\n                            <FormControl className={classes.formControl}>\n                                <AutocompleteVirtualized onChipClick={this.onMetaFeatureClick}\n                                                         label={\"Metagenes/Features\"}\n                                                         options={metafeatureOptions}\n                                                         value={splitTokens.metafeatures}\n                                                         onChange={this.onMetafeaturesChange}\n                                />\n                            </FormControl>}\n                            {(fancy && featureSetOptions.length > 0) && <FormControl className={classes.formControl}>\n\n                                <AutocompleteVirtualized label={\"Sets\"}\n                                                         options={featureSetOptions}\n                                                         value={featureSets}\n                                                         onChipClick={this.onFeatureSetClick}\n                                                         getChipTitle={(option) => {\n                                                             return option.category + ', ' + option.name;\n                                                         }}\n                                                         getChipIcon={(option) => {\n                                                             return <ArrowDropDownIcon onClick={(event) => {\n                                                                 this.onFeatureSetClick(event, option);\n                                                             }}/>;\n                                                         }}\n                                                         groupBy={true}\n                                                         onChange={this.onFeatureSetsChange}\n                                                         getOptionSelected={(option, value) => option.id === value.id}\n                                                         getChipText={option => option.name}/>\n                                {fancy && splitTokens.X.length > 0 &&\n                                <Tooltip title={\"Save Current Feature List\"}>\n                                    <IconButton size={'small'} onClick={this.onSaveFeatureList}>\n                                        <SaveIcon/>\n                                    </IconButton>\n                                </Tooltip>\n                                }\n                            </FormControl>}\n                        </div>\n                    </AccordionPanelDetails>\n                </Accordion>\n\n                <Accordion style={tab === 'embedding' || tab === 'distribution' ? null : {display: 'none'}}\n                           defaultExpanded>\n                    <AccordionPanelSummary>\n                        <div>Filters</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails>\n                        <div style={{marginLeft: 10, maxHeight: 500}}>\n\n                            <Grid component=\"label\" alignContent={\"flex-start\"} container alignItems=\"center\"\n                                  spacing={0}>\n                                <Grid item><InputLabel shrink={true} variant={\"standard\"}>Combine\n                                    Filters</InputLabel></Grid>\n                                <Grid item>AND</Grid>\n                                <Grid item>\n                                    <Switch\n                                        size=\"small\"\n                                        checked={combineDatasetFilters === 'or'}\n                                        onChange={this.handleCombineDatasetFilters}\n                                    />\n                                </Grid>\n                                <Grid item>OR</Grid>\n                            </Grid>\n\n                            {datasetFilterKeys.length > 0 && !isNaN(selection.count) &&\n                            <React.Fragment>\n                                <div style={{marginBottom: 2}}>\n                                    {intFormat(selection.count) + \" / \" + intFormat(dataset.shape[0]) + \": \"}\n                                    {datasetFilterKeys.map(key => {\n                                        return <Chip\n                                            onDelete={() => {\n                                                this.onDatasetFilterChipDeleted(key);\n                                            }}\n                                            onClick={this.onFilterChipClicked} size={\"small\"} variant={\"default\"}\n                                            style={{marginRight: 2, verticalAlign: 'bottom'}}\n                                            key={key}\n                                            label={key}\n\n                                        />;\n                                    })}\n                                    <Divider/>\n                                    <Grid container alignItems=\"center\" className={classes.toolbar}>\n                                        <Tooltip title={\"Clear All\"}>\n                                            <IconButton size={'small'} disabled={datasetFilterKeys.length === 0}\n                                                        onClick={this.onDatasetFilterCleared}><HighlightOffIcon/></IconButton>\n                                        </Tooltip>\n                                        {fancy && <Tooltip title={\"Save Filter\"}>\n                                            <IconButton size={'small'} disabled={datasetFilterKeys.length === 0}\n                                                        onClick={this.onDatasetFilterSaved}><SaveIcon/></IconButton>\n                                        </Tooltip>}\n                                        <Tooltip title={\"Download Selected IDs\"}>\n                                            <IconButton size={'small'} disabled={datasetFilterKeys.length === 0}\n                                                        onClick={this.handleSelectedCellsClick}><CloudDownloadIcon/></IconButton>\n                                        </Tooltip>\n                                        {false && fancy && <Divider orientation=\"vertical\" flexItem/>}\n                                        {false && fancy && <Tooltip title={\"Differential Expression\"}>\n                                            <IconButton size={'small'}\n                                                        onClick={this.handleDifferentialExpression}><CompareIcon/></IconButton>\n                                        </Tooltip>}\n                                    </Grid>\n                                </div>\n                            </React.Fragment>\n                            }\n\n\n                        </div>\n                    </AccordionPanelDetails>\n                </Accordion>\n                <Accordion style={tab === 'distribution' ? null : {display: 'none'}} defaultExpanded>\n                    <AccordionPanelSummary>\n                        <div>Distribution Options</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails>\n                        <div style={{marginTop: 8}}>\n                            {chartType === 'violin' && <FormControl className={classes.formControl}>\n                                <InputLabel id=\"violin-scale-label\">Scale</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    labelId=\"violin-scale-label\"\n                                    value={distributionPlotOptions.violinScale}\n                                    onChange={this.onViolinScaleChange}\n                                >\n                                    <MenuItem value={'area'}>Area</MenuItem>\n                                    <MenuItem value={'width'}>Width</MenuItem>\n                                </Select>\n                                <FormHelperText>If \"area\", violins have the same area. If \"width\", violins have the\n                                    same\n                                    maximum\n                                    width.</FormHelperText>\n                            </FormControl>}\n\n                            {chartType === 'violin' && <div><FormControlLabel\n                                control={\n                                    <Switch\n                                        value={\"violinShowBoxplot\"}\n                                        checked={distributionPlotOptions.violinShowBoxplot}\n                                        onChange={this.onViolinShowBoxplot}\n                                    />\n                                }\n                                label=\"Show Box Plot\"\n                            /></div>}\n\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"dist-chart-type-label\">Chart Type</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    labelId=\"dist-chart-type-label\"\n                                    value={chartType}\n                                    onChange={this.onChartTypeChange}\n                                >\n                                    <MenuItem value={'dotplot'}>Dot Plot</MenuItem>\n                                    <MenuItem value={'heatmap'}>Heatmap</MenuItem>\n                                    <MenuItem value={'violin'}>Violin</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </div>\n                    </AccordionPanelDetails>\n                </Accordion>\n\n                <Accordion style={tab === 'embedding' ? null : {display: 'none'}} defaultExpanded>\n                    <AccordionPanelSummary>\n                        <div>Embedding Options</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails>\n                        <div>\n                            <InputLabel style={{marginLeft: 8, marginTop: 8}} shrink={true}>Marker\n                                Opacity</InputLabel>\n                            <Slider\n                                min={0.0}\n                                max={1}\n                                step={0.01}\n                                style={{marginLeft: 10, width: '86%'}}\n                                valueLabelDisplay=\"auto\"\n                                value={this.state.opacity}\n                                onChange={this.onMarkerOpacityChange} aria-labelledby=\"continuous-slider\"/>\n\n\n                            <InputLabel style={{marginLeft: 8, marginTop: 8}} shrink={true}>Filtered Marker\n                                Opacity</InputLabel>\n                            <Slider\n                                min={0.0}\n                                max={1}\n                                step={0.01}\n                                style={{marginLeft: 10, width: '86%'}}\n                                valueLabelDisplay=\"auto\"\n                                value={this.state.unselectedOpacity}\n                                onChange={this.onUnselectedMarkerOpacityChange}\n                                aria-labelledby=\"continuous-slider\"/>\n\n\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"point_size\">Marker Size</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    input={<Input id=\"point_size\"/>}\n                                    onChange={this.onPointSizeChange}\n                                    value={pointSize}\n                                    multiple={false}>\n                                    {pointSizeOptions.map(item => (\n                                        <MenuItem key={item.label} value={item.value}>\n                                            <ListItemText primary={item.label}/>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"chart_size\">Gallery Chart Size</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    input={<Input id=\"chart_size\"/>}\n                                    onChange={this.onChartSizeChange}\n                                    value={chartSize}\n                                    multiple={false}>\n                                    {gallerySizeOptions.map(item => (\n                                        <MenuItem key={item.label} value={item.value}>\n                                            <ListItemText primary={item.label}/>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"color-scheme\">Color Scale</InputLabel>\n                                <ColorSchemeSelector handleInterpolator={this.props.handleInterpolator}\n                                                     interpolator={interpolator}/>\n                            </FormControl>\n                            <Tooltip title={\"More Options\"}>\n                                <IconButton edge={false} size={'small'}\n                                            aria-label=\"More Options\" onClick={this.props.onMoreOptions}>\n                                    <SettingsIcon/>\n                                </IconButton>\n                            </Tooltip>\n                            {!isSummarized && showBinPlot && <div><FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={binValues}\n                                        value={'binPlot'}\n                                        onChange={this.handleBinValuesChange}\n                                    />\n                                }\n                                label=\"Bin Plot\"\n                            /></div>}\n\n                            {/*{!isSummarized && binValues &&*/}\n                            {/*<TextField max=\"1000\" min=\"20\" step=\"100\"*/}\n                            {/*           value={numberOfBins}*/}\n                            {/*           onChange={this.onNumberOfBinsChange} label=\"# Bins Per Axis\"*/}\n                            {/*           className={classes.formControl}/>}*/}\n\n\n                            {!isSummarized && binValues && <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"summary\">Bin Summary</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    input={<Input id=\"summary\"/>}\n                                    onChange={this.onBinSummaryChange}\n                                    value={binSummary}\n                                >\n                                    {summaryOptions.map(c => (\n                                        <MenuItem key={c.value} value={c.value}>\n                                            <ListItemText primary={c.label}/>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>}\n\n\n                            {/*<Typography*/}\n                            {/*    color=\"textSecondary\"*/}\n                            {/*    display=\"block\"*/}\n                            {/*    variant=\"caption\"*/}\n                            {/*>*/}\n                            {/*    Unselected Chart Properties*/}\n                            {/*</Typography>*/}\n\n\n                        </div>\n\n                    </AccordionPanelDetails>\n                </Accordion>\n                {fancy && <Accordion style={tab === 'embedding' || tab === 'distribution' ? null : {display: 'none'}}\n                                     defaultExpanded>\n                    <AccordionPanelSummary>\n                        <div>Saved Filters</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails>\n                        <div style={{width: '100%'}}>\n                            {datasetFilters.length === 0 &&\n                            <Box color=\"text.secondary\" style={{paddingLeft: 10}}>No saved filters</Box>}\n                            {datasetFilters.length > 0 &&\n                            <React.Fragment>\n                                <List dense={true}>\n                                    {datasetFilters.map(item => (\n                                        <ListItem key={item.id} data-key={item.id} button\n                                                  selected={item.id === savedDatasetFilter.id}\n                                                  onClick={e => this.openDatasetFilter(item.id)}>\n                                            <ListItemText primary={item.name}/>\n                                            <ListItemSecondaryAction\n                                                onClick={e => this.deleteDatasetFilter(item.id)}>\n                                                <IconButton edge=\"end\" aria-label=\"delete\">\n                                                    <DeleteIcon/>\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    ))}\n                                </List>\n\n\n                                <div style={{marginLeft: 10}}>\n                                    <Divider/>\n                                    <Tooltip title={\"Export Filters\"}>\n                                        <IconButton size={'small'}\n                                                    onClick={this.props.handleExportDatasetFilters}><CloudDownloadIcon/></IconButton>\n                                    </Tooltip>\n\n                                </div>\n                            </React.Fragment>}\n                        </div>\n                    </AccordionPanelDetails>\n                </Accordion>}\n                <Accordion style={tab === 'precomputed_results' ? null : {display: 'none'}}\n                           defaultExpanded>\n                    <AccordionPanelSummary>\n                        <div>Filter</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails style={{flexDirection: 'column'}}>\n                        <PrecomputedResultsSelector/>\n                    </AccordionPanelDetails>\n                </Accordion>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n        return {\n            binSummary: state.binSummary,\n            binValues: state.binValues,\n            categoricalNames: state.categoricalNames,\n            chartSize: state.chartSize,\n            combineDatasetFilters: state.combineDatasetFilters,\n            dataset: state.dataset,\n            datasetFilter: state.datasetFilter,\n            datasetFilters: state.datasetFilters,\n            distributionPlotOptions: state.distributionPlotOptions,\n            embeddingData: state.embeddingData,\n            embeddingLabels: state.embeddingLabels,\n            embeddings: state.embeddings,\n            interpolator: state.interpolator,\n            markerOpacity: state.markerOpacity,\n            markers: state.markers,\n            numberOfBins: state.numberOfBins,\n            pointSize: state.pointSize,\n            primaryTraceKey: state.primaryTraceKey,\n            savedDatasetFilter: state.savedDatasetFilter,\n            searchTokens: state.searchTokens,\n            selection: state.selection,\n            serverInfo: state.serverInfo,\n            tab: state.tab,\n            unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n        };\n    }\n;\nconst mapDispatchToProps = (dispatch, ownProps) => {\n        return {\n            handleDialog: (value) => {\n                dispatch(setDialog(value));\n            },\n            handleTab: (value) => {\n                dispatch(setTab(value));\n            },\n            handlePrimaryTraceKey: (value) => {\n                dispatch(setPrimaryTraceKey(value));\n            },\n            handleInterpolator: value => {\n                dispatch(setInterpolator(value));\n            },\n            handleChartSize: (value) => {\n                dispatch(setChartSize(value));\n            },\n            handleCombineDatasetFilters: (value) => {\n                dispatch(setCombineDatasetFilters(value));\n            },\n            downloadSelectedIds: () => {\n                dispatch(downloadSelectedIds());\n            },\n            removeDatasetFilter: (filter) => {\n                dispatch(removeDatasetFilter(filter));\n            },\n            handleEmbeddings: value => {\n                dispatch(setSelectedEmbedding(value));\n            },\n\n            handleNumberOfBins: value => {\n                dispatch(setNumberOfBins(value));\n            },\n            handlePointSize: value => {\n                dispatch(setPointSize(value));\n            },\n\n            handleMarkerOpacity: value => {\n                dispatch(setMarkerOpacity(value));\n            },\n\n            handleEmbeddingLabel: value => {\n                dispatch(toggleEmbeddingLabel(value));\n            },\n            handleUnselectedMarkerOpacity: value => {\n                dispatch(setUnselectedMarkerOpacity(value));\n            },\n\n            onMoreOptions: () => {\n                dispatch(setDialog(MORE_OPTIONS_DIALOG));\n            },\n            handleBinSummary: value => {\n                dispatch(setBinSummary(value));\n            },\n            handleBinValues: value => {\n                dispatch(setBinValues(value));\n            },\n            handleSearchTokens: (value, type) => {\n                dispatch(setSearchTokens(value == null ? [] : value, type));\n            },\n            handleOpenDatasetFilter: value => {\n                dispatch(openDatasetFilter(value));\n            },\n            handleDeleteDatasetFilter: value => {\n                dispatch(deleteDatasetFilter(value));\n            },\n            handleExportDatasetFilters: () => {\n                dispatch(exportDatasetFilters());\n            },\n            handleDeleteFeatureSet: value => {\n                dispatch(deleteFeatureSet(value));\n            },\n            handleDifferentialExpression: value => {\n                dispatch(submitJob(value));\n            },\n            onDistributionPlotOptions: (payload) => {\n                dispatch(setDistributionPlotOptions(payload));\n            },\n\n        };\n    }\n;\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(SideBar));\n\n\n","import {IconButton, Snackbar} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {createMuiTheme, withStyles} from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {ThemeProvider} from '@material-ui/styles';\nimport React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    DELETE_DATASET_DIALOG,\n    EDIT_DATASET_DIALOG,\n    HELP_DIALOG,\n    IMPORT_DATASET_DIALOG,\n    MORE_OPTIONS_DIALOG,\n    SAVE_DATASET_FILTER_DIALOG,\n    SAVE_FEATURE_SET_DIALOG,\n    setDialog,\n    setMessage,\n} from './actions';\nimport AppHeader from './AppHeader';\nimport DeleteDatasetDialog from './DeleteDatasetDialog';\nimport DistributionPlots from './DistributionPlots';\nimport EditDatasetDialog from './EditDatasetDialog';\nimport EmbeddingCharts from './EmbeddingCharts';\nimport GalleryCharts from './GalleryCharts';\nimport HelpDialog from './HelpDialog';\nimport MoreOptionsDialog from './MoreOptionsDialog';\nimport PrecomputedResultsPanel from './PrecomputedResultsPanel';\nimport SaveDatasetFilterDialog from './SaveDatasetFilterDialog';\nimport SaveSetDialog from './SaveSetDialog';\nimport SideBar from './SideBar';\n\nconst lightTheme = createMuiTheme(\n    {\n        \"palette\": {\n            \"type\": \"light\"\n        }\n    }\n);\n\nconst darkTheme = createMuiTheme(\n    {\n        \"palette\": {\n            \"type\": \"dark\"\n        }\n    }\n);\nexport const drawerWidth = 240;\n\n\nconst styles = (theme) => {\n    return {\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        toolbar: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            paddingTop: theme.spacing(6.5),\n            paddingLeft: theme.spacing(1)\n        }\n    };\n};\n\nclass App extends PureComponent {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {tab: 'embedding'};\n        this.galleryRef = React.createRef();\n    }\n\n    handleMessageClose = () => {\n        this.props.setMessage(null);\n    };\n\n\n    onGallery = () => {\n        window.scrollTo(0, this.galleryRef.current.offsetTop);\n    };\n\n\n    render() {\n\n        // tabs: 1. embedding, 2. grouped table with kde per feature, dotplot\n        // need to add filter, selection\n        const {classes, chartOptions, dataset, dialog, loading, loadingApp, message, tab} = this.props;\n        const theme = !chartOptions.darkMode ? lightTheme : darkTheme;\n        const color = theme.palette.primary.main;\n        const bgcolor = chartOptions.darkMode ? 'black' : 'white';\n        return (<ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    {(dialog === EDIT_DATASET_DIALOG || dialog === IMPORT_DATASET_DIALOG) &&\n                    <EditDatasetDialog/>}\n                    {dialog === DELETE_DATASET_DIALOG && <DeleteDatasetDialog/>}\n                    {dialog === SAVE_DATASET_FILTER_DIALOG && <SaveDatasetFilterDialog/>}\n                    {dialog === HELP_DIALOG && <HelpDialog/>}\n                    {dialog === MORE_OPTIONS_DIALOG && <MoreOptionsDialog/>}\n                    {dialog === SAVE_FEATURE_SET_DIALOG && <SaveSetDialog/>}\n                    <AppHeader/>\n                    <Drawer\n                        className={classes.drawer}\n                        variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        anchor=\"left\"\n                    >\n                        {dataset != null && <SideBar key={dataset.id}/>}\n                    </Drawer>\n\n                    <main style={{backgroundColor: bgcolor, color: color}} className={classes.content}>\n                        {loadingApp.loading &&\n                        <div><h2>Loading<LinearProgress style={{width: '90%'}} variant=\"determinate\"\n                                                        value={loadingApp.progress}/></h2>\n                        </div>}\n\n                        {dataset != null && <React.Fragment>\n                            <div\n                                role=\"tabpanel\"\n                                hidden={tab !== 'embedding'}\n                            >\n                                <EmbeddingCharts onGallery={this.onGallery}/>\n                                <div ref={this.galleryRef}>\n                                    <GalleryCharts/>\n                                </div>\n\n                            </div>\n                            <div\n                                role=\"tabpanel\"\n                                hidden={tab !== 'distribution'}\n                            >\n                                <DistributionPlots/>\n                            </div>\n                            <div\n                                role=\"tabpanel\"\n                                hidden={tab !== 'precomputed_results'}\n                            >\n                                <PrecomputedResultsPanel/>\n                            </div>\n                        </React.Fragment>}\n\n\n                    </main>\n\n                    {loading && <Dialog aria-labelledby=\"loading-dialog-title\" open={true}>\n                        <DialogTitle id=\"loading-dialog-title\"><CircularProgress size={20}/> Loading...</DialogTitle>\n                    </Dialog>}\n\n\n                    {message != null && <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        ContentProps={{\n                            'aria-describedby': 'message-id',\n                        }}\n                        onClose={this.handleMessageClose}\n                        open={true}\n                        autoHideDuration={6000}\n                        action={[\n                            <IconButton\n                                key=\"close\"\n                                aria-label=\"Close\"\n                                color=\"inherit\"\n                                onClick={this.handleMessageClose}\n                            >\n                                <CloseIcon/>\n                            </IconButton>,\n                        ]}\n                        message={<span id=\"message-id\">{message instanceof Error\n                            ? message.message\n                            : message}</span>}\n                    />}\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        dialog: state.dialog,\n        loading: state.loading,\n        loadingApp: state.loadingApp,\n        message: state.message,\n        tab: state.tab,\n        chartOptions: state.chartOptions\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n\n        setMessage: (value) => {\n            dispatch(setMessage(value));\n        }\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(App));\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {initGapi} from './actions';\nimport App from './App';\nimport rootReducer from './reducers';\n// import * as serviceWorker from './serviceWorker';\n\n\nconst logger = store => next => action => {\n    console.log(action);\n    let result = next(action);\n    return result;\n};\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware\n    ),\n);\n\nfunction main() {\n    render(\n        <Provider store={store}>\n            {/*<React.StrictMode>*/}\n            <App/>\n            {/*</React.StrictMode>*/}\n        </Provider>,\n        document.getElementById('root'),\n    );\n}\n\n// if (module.hot) {\n//   if (process.env.NODE_ENV !== 'production' && module.hot) {\n//     module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n//   }\n//   if (process.env.NODE_ENV !== 'production' && module.hot) {\n//     module.hot.accept('./App', main);\n//   }\n// }\nstore.dispatch(initGapi());\nmain();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}