{"version":3,"sources":["CustomError.js","SlicedVector.js","VectorUtil.js","dataset_filter.js","Vector.js","JsonDataset.js","RestDataset.js","RestServerApi.js","ChartToolbar.js","formatters.js","ColorSchemeLegend.js","ChartUtil.js","LegendDrawer.js","util.js","ThreeUtil.js","ScatterChartThree.js","actions/index.js","DatasetSelector.js","reducers/index.js","AppHeader.js","DeleteDatasetDialog.js","ColorSchemeSelector.js","SizeLegend.js","DotPlotCanvas.js","DotPlotGroup.js","DotPlots.js","EditDatasetDialog.js","CategoricalLegend.js","ContinuousLegend.js","MeasureFilter.js","ColorSchemeLegendWrapper.js","CanvasOverlayHd.js","OpenseadragonSvgOverlay.js","ImageChart.js","EmbeddingChart.js","EmbeddingCharts.js","GalleryImage.js","GalleryCharts.js","HelpDialog.js","MoreOptionsDialog.js","SaveDatasetFilterDialog.js","SaveSetDialog.js","AutocompleteVirtualized.js","SideBar.js","App.js","index.js"],"names":["CustomError","Error","SlicedVector","vector","indices","this","getName","length","i","get","getIndices","v","f","result","Set","size","add","groupedStats","dimensions","varMeasures","allResults","forEach","valueToIndices","value","undefined","push","categories","Object","keys","sort","natsort","results","values","fractionExpressed","mean","name","category","index","slicedVector","xStats","stats","numExpressed","min","Number","MAX_VALUE","max","sum","combine","a","b","op","filter","x","has","getPassingFilterIndices","df","data_filter","passingIndices","user_filters","filters","combine_filters","filter_obj","field","keep","isObject","selected_points_basis","getBasis","nbins","agg","ndim","precomputed","coordinate_columns","points","selection_keep","path","j","p","xKeep","val","width","yKeep","y","height","z","zKeep","depth","applyFunction","series","d","Array","from","Vector","getVarNameType","key","indexOf","type","key_type","substring","basis","parseInt","full_name","splitDataFilter","var_keys","obs_keys","basis_list","user_filter","X","obs","splitMeasures","measures","obsMeasures","getStats","valueToCount","count","counts","map","valueCounts","JsonDataset","id","url","key2vector","schema","endsWith","baseUrl","lastIndexOf","Promise","resolve","reject","fetch","then","r","json","promises","_fetch","data","isArray","Float32Array","shape","n","all","q","dataFilter","embedding","concat","fetchData","idVector","getVector","ids","obj","basisKeys","selection","embeddings","mappedEmbeddings","coordinates","asArray","Int8Array","fill","summary","getVectors","dotplot","file","RestDataset","API","body","JSON","stringify","method","headers","getIdToken","response","RestServerApi","datasetId","dataset","isEdit","importDatasetResponse","isUpdate","setId","ds_id","ok","text","filterId","active","ChartToolbar","props","setDragMode","mode","onDragMode","onShowLabels","onShowAxis","onShowFog","onGallery","handleMoreOptions","onMoreOptions","setEditSelection","onEditSelection","handleSaveImageMenu","event","setState","saveImageEl","currentTarget","handleSaveImageMenuClose","handleSaveImage","format","onSaveImage","state","dragmode","editSelection","showLabels","showAxis","Fragment","onZoomIn","Tooltip","title","IconButton","edge","aria-label","onClick","onZoomOut","onHome","className","viewBox","transform","is3d","animating","toggleAnimation","showFog","aria-controls","aria-haspopup","Menu","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","e","React","PureComponent","numberFormat","intFormat","numberFormat0","drawColorScheme","context","colorScale","label","nsteps","textColor","domain","stepSize","legendHeight","gradient","createLinearGradient","valueToFraction","scaleLinear","range","clamp","isNaN","color","addColorStop","fillStyle","fillRect","strokeStyle","strokeRect","textBaseline","textAlign","fillText","ColorSchemeLegend","ref","createRef","backingScale","current","getContext","clearRect","scale","font","setTransform","redraw","prevProps","prevState","snapshot","window","devicePixelRatio","style","assign","saveImage","traceInfo","chartSize","draw","canvas","totalSize","document","createElement","C2S","continuous","legendSize","maxWidth","measureText","Math","getCategoricalLegendSize","translate","drawCategoricalLegend","svg","getSerializedSvg","blob","Blob","saveAs","toBlob","interpolators","CATEGORY_20B","CATEGORY_20C","updateTraceColors","isImage","colors","colorMapper","rgb","formatHex","npoints","trace","RGBA_NUM_ELEMENTS","rgbScale","dst","c","g","getColors","rankIndexArray","rank","Uint32Array","indexSort","array","ascending","pairs","indexSortPairs","randomSeq","start","shuffle","isPointInside","point","vs","inside","xi","yi","xj","yj","arrayToSvgPath","lassoPathArray","simplify","svgPath","fixInterpolatorName","startsWith","getInterpolator","scaleChromatic","convertBinsToIndices","bins","selectedBins","addFeatureSetsToX","featureSets","uniqueX","featureSet","features","feature","getFeatureSets","markers","featureSetIds","featureSetId","splitSearchTokens","tokens","obsCat","token","console","log","smoothstep","edge0","edge1","t","min_v","max_v","mix","drawLabels","labelsPositions","chartOptions","camera","pos","Vector3","darkMode","lineWidth","labelStrokeWidth","widthHalf","heightHalf","k","labels","positions","project","strokeText","getVisualizer","scatterPlot","visualizers","ScatterChartThree","bind","drawContext","setChartOptions","axes","scene","getObjectByName","visible","spriteVisualizer","POINT_VISUALIZER_ID","styles","fog","enabled","setInteractionMode","rectangleSelector","setSelectionMode","onToggleAnimation","orbitIsAnimating","stopOrbitAnimation","startOrbitAnimation","containerElementRef","tooltipElementRef","lastHoverIndex","forceUpdate","resize","init","updateFromCameraDef","pointSize","markerOpacity","unselectedMarkerOpacity","categoricalNames","isCategorical","calculatePointSize","scaleFactor","PI2","PI","outputPointSize","outNorm","atan","zoom","projectionMatrix","elements","cameraSpacePos","Vector4","object","modelViewMatrix","clone","multiplyMatrices","matrixWorldInverse","matrixWorld","gl_PointSize","isSelectionEmpty","isSelected","w","applyMatrix4","fogDepth","fogFactor","near","far","round","beginPath","arc","closePath","getCategoryLabelsPositions","labelFontSize","containerElement","createScatterPlot","ApplePaySession","hoverCallback","innerHTML","selectedIndex","abs","categoryObject","renamedValue","lassoCallback","selectedIndices","onDeselect","getEmbeddingKey","onSelected","clear","boxCallback","rect","interactionMode","selectedPoints","querySelector","outline","addEventListener","preventDefault","updateScatterChart","classes","root","onCopyImage","Typography","display","paddingLeft","verticalAlign","withStyles","theme","margin","spacing","padding","position","top","left","whiteSpace","overflow","LABELS_VISUALIZER_ID","domainDifference","rangeDifference","getScaleFactor","ORTHO_CAMERA_FRUSTUM_HALF_EXTENT","aspectRatio","right","bottom","OrthographicCamera","up","updateProjectionMatrix","premultipliedAlpha","interactive","makeStyles","label3D","fontSize","ScatterPlot","selectEnabled","ScatterPlotVisualizerSprites","ScatterPlotVisualizerSvgLabels","setActiveVisualizers","categoryToPosition","ncategories","labelStrings","labelPositions","positionIndex","renamedCategory","mid","background","Color","setDimensions","setPointColors","setPointPositions","setPointScaleFactors","labelsVisualizer","labelsActive","shadowColor","shadowStroke","setLabels","render","authScopes","SET_DOT_PLOT_INTERPOLATOR","SET_CHART_OPTIONS","SET_COMBINE_DATASET_FILTERS","SET_DATASET_FILTERS","SET_PRIMARY_TRACE_KEY","SET_CHART_SIZE","SET_PRIMARY_CHART_SIZE","SET_SERVER_INFO","SET_DATASET_FILTER","ADD_DATASET","DELETE_DATASET","UPDATE_DATASET","SET_GLOBAL_FEATURE_SUMMARY","SET_SAVED_DATASET_STATE","SET_DOMAIN","SET_CATEGORICAL_COLOR","SET_CATEGORICAL_NAME","SET_MARKER_OPACITY","SET_UNSELECTED_MARKER_OPACITY","SET_SELECTION","SET_FEATURE_SUMMARY","SET_SEARCH_TOKENS","SET_SELECTED_EMBEDDING","SET_NUMBER_OF_BINS","SET_BIN_VALUES","SET_BIN_SUMMARY","SET_MESSAGE","SET_INTERPOLATOR","SET_POINT_SIZE","SET_EMAIL","SET_USER","SET_DATASET","SET_MARKERS","SET_DIALOG","MORE_OPTIONS_DIALOG","EDIT_DATASET_DIALOG","IMPORT_DATASET_DIALOG","SAVE_DATASET_FILTER_DIALOG","SAVE_FEATURE_SET_DIALOG","HELP_DIALOG","DELETE_DATASET_DIALOG","SET_DATASET_CHOICES","RESTORE_VIEW","SET_DOT_PLOT_DATA","SET_SELECTED_DOT_PLOT_DATA","SET_DOT_PLOT_SORT_ORDER","SET_EMBEDDING_DATA","SET_LOADING","SET_TAB","SET_LOADING_APP","SET_NUMBER_OF_BINS_UI","SET_MARKER_OPACITY_UI","SET_UNSELECTED_MARKER_OPACITY_UI","isEmbeddingBinned","bin","fullName","getTraceKey","getEmbeddingJson","logout","dispatch","getState","gapi","auth2","getAuthInstance","signOut","payload","_setDataset","getDatasetFilterArray","datasetFilter","allPoints","operation","getFilterJson","combineDatasetFilters","setDotPlotSortOrder","setCombineDatasetFilters","_setCombineDatasetFilters","handleFilterUpdated","setPrimaryChartSize","setPrimaryTraceKey","setDatasetFilter","setSelection","setFeatureSummary","_setLoading","searchTokens","item","isCurrentSelectionEmpty","chart","dotPlotData","_setDotPlotData","slice","_setSelectedDotPlotData","selectedEmbeddings","api","getDataPromise","handleSelectionResult","catch","err","handleError","finally","handleBrushFilterUpdated","cachedData","convertIndicesToBins","update","_handleCategoricalNameChange","setUser","loadDefaultDatasetEmbedding","embeddingNames","priority","setSelectedEmbedding","loadDefaultDataset","datasetChoices","setDataset","restoreSavedView","savedView","colorScheme","interpolator","uiValue","names","_updateCharts","setMessage","_loadSavedView","location","search","parse","decodeURIComponent","initLogin","loadSavedView","isSignedIn","email","currentUser","getBasicProfile","getEmail","_setEmail","serverInfo","getUserPromise","user","listDatasets","getAuthResponse","id_token","saveDataset","readers","description","updatePermissions","permissionsResponse","upsertDatasetPromise","importDatasetResult","dsUpdate","owner","updateDataset","_addDataset","setDialog","deleteDataset","deleteDatasetPromise","_deleteDataset","setEmbeddingData","setMarkers","_setLoadingApp","prior","setDatasetFilters","loadDefaultView","setLoading","savedDatasetState","selectedChoice","categoryNameResults","newDataset","datasetFilters","isByteRangeDataset","categoriesRenamePromise","getCategoryNamesPromise","filtersPromise","getFiltersPromise","schemaPromise","getSchemaPromise","_nbins","var","toLowerCase","oldValue","original","new","onPromisesComplete","selectionResult","chartSelection","selectedIndicesOrBins","indices_or_bins","userPoints","selectionSummary","featureSummary","selectedDotPlotData","updateDotPlotData","newDotplotData","categoryKeys","join","dotPlotKeys","categoryItem","uniqBy","categoryIndex","nfeatures","featureSortOrder","onError","selectionStats","embeddingData","globalFeatureSummary","embeddingCoordinatesToFetch","valuesToFetch","binnedEmbeddingValuesToFetch","embeddingKeys","selectedEmbedding","embeddingKey","date","Date","dotplotMeasuresCacheMiss","dotPlotCategories","dotPlotCategoryKeys","selectedMeasuresCacheMiss","cachedDotPlotKeys","dotPlotDataItem","datum","cachedSelectedDotPlotMeasures","embeddingCoordinatesToFetchKeys","embeddingJson","coords","binnedEmbeddingValuesToFetchKeys","globalFeatureSummaryXCacheMiss","globalFeatureSummaryObsContinuousCacheMiss","globalFeatureSummaryDimensionsCacheMiss","filterJson","newSummary","existingKeys","embeddingDatum","isBinned","featureKey","isSpatial","spatial","traceSummary","purity","traceUniqueValues","schemeCategory10","schemePaired","scaleOrdinal","isPlainObject","newValues","customMin","customMax","scaleSequential","chartData","ranks","xExtent","Infinity","yExtent","zExtent","getRange","extent","xRange","yRange","zRange","maxRange","makeScaleRange","base","xScale","SCATTER_PLOT_CUBE_LENGTH","yScale","zScale","getPositions","getFileUrl","image","tileSource","OpenSeadragon","ImageTileSource","buildPyramid","crossOriginPolicy","updateEmbedingData","activeEmbedding","activeTrace","splice","message","status","getDatasetsPromise","choices","DatasetSelector","handleClick","searchText","handleClose","handleListItemClick","onChange","handleClearSearchText","onSearchChange","target","selectedId","filteredChoices","searchTextLower","trim","choice","Button","variant","startIcon","Popover","anchorOrigin","vertical","horizontal","transformOrigin","TextField","placeholder","fullWidth","InputProps","endAdornment","InputAdornment","List","dense","disablePadding","component","ListItem","alignItems","selected","button","ListItemText","primary","textOverflow","connect","DEFAULT_BIN_SUMMARY","DEFAULT_NUMBER_BINS","DEFAULT_UNSELECTED_MARKER_OPACITY","DEFAULT_INTERPOLATOR","DEFAULT_DOT_PLOT_INTERPOLATOR","DEFAULT_INTERPOLATOR_OBJ","DEFAULT_DOT_PLOT_INTERPOLATOR_OBJ","DEFAULT_PRIMARY_CHART_SIZE","innerWidth","innerHeight","DEFAULT_CHART_OPTIONS","updateDotPlotDataRange","fractionRange","meanRange","combineReducers","binSummary","action","binValues","dialog","sortBy","dotPlotInterpolator","stateIndex","loading","loadingApp","progress","markerOpacityUI","newResults","categoryName","readonly","markers_read_only","numberOfBins","numberOfBinsUI","primaryChartSize","primaryTraceKey","traces","tab","unselectedMarkerOpacityUI","AntTab","minWidth","textTransform","fontWeight","typography","fontWeightRegular","marginRight","opacity","fontWeightMedium","Tab","disableRipple","AppHeader","handleTabChange","handleTab","handleEmbeddingsChange","handleEmbeddings","handleUserMenuClose","userMenuOpen","handleMoreMenuClose","moreMenuOpen","handleHelp","handleDialog","handleUserMenuOpen","userMenuAnchorEl","handleMoreMenuOpen","moreMenuAnchorEl","getLinkJson","_bin","chartRef","getCameraDef","jsonChartOptions","defaultChartOptions","datasetFilterJson","sortOrder","handleDataset","link","handleSavedDatasetState","copyLink","linkText","protocol","host","pathname","encodeURIComponent","container","activeElement","fakeElem","isRTL","documentElement","getAttribute","border","setAttribute","yPosition","pageYOffset","scrollTop","appendChild","select","setSelectionRange","execCommand","fakeHandlerCallback","blur","getSelection","removeAllRanges","removeChild","removeEventListener","onDarkMode","handleChartOptions","handleLogout","handleImportDataset","handleSettings","handleDelete","handleShowDatasetDetails","datasetDetailsEl","handleCloseDatasetDetails","datasetDetailsOpen","hasDatasetDetails","hasSelection","showNewDataset","importer","showEditDeleteDataset","showMoreMenu","isSignedOut","clientId","AppBar","appBar","Toolbar","linkTarget","children","aria-owns","Tabs","indicatorColor","marginLeft","Divider","handleLogin","flexWrap","drawerWidth","ownProps","signIn","DeleteDatasetDialog","handleCancel","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogActions","disabled","stripInterpolate","ColorSchemeSelector","handleInterpolatorChange","handleInterpolator","Select","input","Input","multiple","divider","getScale","formControl","drawSizeLegend","steps","valueToX","valueToRadius","pix","radius","stroke","SizeLegend","svgFont","canvasFont","DotPlotCanvas","onSortOrderChanged","getSize","colorScaleHeight","sizeScale","divRef","node","maxRadius","getBoundingClientRect","xy","clientX","clientLeft","clientY","clientTop","col","floor","row","featureDatum","categoryOrder","append","renamedCategories","drawCircles","diameter","featureIndex","xpix","ypix","frac","newName","save","rotate","restore","maxFeatureWidth","xoffset","renamed","sortByDatum","val1","val2","sorter","renamed1","renamed2","sortChoices","subtitle","FormControl","InputLabel","shrink","DotPlotGroup","onMinChange","onMinKeyPress","minCustom","parseFloat","onMinSizeChange","minSize","onHeatmapChange","checked","onMinSizeKeyPress","minSizeCustom","onMaxSizeChange","sizeMax","onMaxSizeKeyPress","maxSizeCustom","onMaxChange","onMaxKeyPress","maxCustom","selectedData","legend","float","InputLabelProps","onKeyPress","paddingTop","marginTop","maxSize","Grid","alignContent","Switch","DotPlots","selectedDotPlotNameToData","TabPanel","other","role","hidden","Box","EditDatasetDialog","handleSave","split","s","getUniqueArray","onTabChanged","tabValue","onEmailChanged","onUrlChanged","onNameChanged","onDescriptionChanged","onTitleChanged","myIndex","CircularProgress","autoComplete","required","helperText","inputProps","maxLength","FormHelperText","Link","href","rows","rowsMax","multiline","CategoricalLegend","handlePopoverClose","contextmenuEl","handleColorChange","handleNameChange","handleColorChangeApply","categoryValue","handleNameChangeApply","handleEditColor","menu","handleEditName","handleContextmenuClose","clickEnabled","shiftKey","metaKey","handleContextmenu","stopPropagation","maxHeight","nObs","nObsSelected","categoricalFilterValues","selectedDimensionToCount","globalDimensionSummary","renamedCategoryValue","categoryCount","selectedCategoryCount","fractionSelected","globalTitle","categoryText","selectionTitle","cursor","onContextMenu","userSelect","ContinuousLegend","summaryNames","globalSummary","summaryName","getTable","MeasureFilter","handleOperationChanged","handleUpdate","handleValueKeyPress","getFilter","handleValueChange","NaN","labelId","ColorSchemeLegendWrapper","handleDomain","CanvasOverlayHd","viewer","options","_viewer","_containerWidth","_containerHeight","_canvas","onRedraw","clearBeforeRedraw","addHandler","_updateCanvas","backingScaleUpdated","clientWidth","clientHeight","viewportZoom","viewport","getZoom","world","getItemCount","getItemAt","viewportToImageZoom","vp","imageToViewportCoordinates","pixelFromPoint","webPoint","viewportPos","pointFromPixel","tiledImage","viewportPosRect","Rect","tileSourcePos","_viewportToTiledImageRectangle","getTopLeft","source","svgNS","OpenseadragonSvgOverlay","self","_svg","createElementNS","_node","evt","Point","rotation","getRotation","getSpotRadius","spot_diameter","ceil","drawSpots","spotRadius","setLineDash","globalAlpha","ImageChart","img","levels","context2D","zoomBy","zoomPerClick","applyConstraints","goHome","uniqueId","x2","y2","px","py","findPointIndex","drawImage","_drawOverlay","opts","destroy","ready","addOnceHandler","src","gestureSettingsMouse","dblClickToZoom","clickToZoom","autoResize","showFullPageControl","collectionMode","showNavigationControl","tileSources","_this","canvasOverlay","startCoordinates","lastBoundingBox","innerTracker","moveHandler","viewportPoint","imagePoint","viewportToImageCoordinates","setTooltip","preventDefaultAction","lassoPath","rectElement","findPointsInPolygon","findPointsInRectangle","removeAttribute","svgOverlay","elem","createViewer","zIndex","EmbeddingChart","setChartRef","element","handleExpandClick","showDetails","onChartOptions","onDomain","onDimensionFilterUpdated","onColorChange","onNameChange","onMeasureFilterUpdated","onSelect","displayName","showColorScheme","onInitialized","embeddingChartSize","onPrimaryChartSize","selectedValues","lastIndex","currentIndex","dataset_id","fancy","setCategoryNamePromise","o","emptySet","EmbeddingCharts","resizeListener","handlePrimaryChartSize","primaryTraces","primaryTrace","GalleryImage","overlayUrl","canvasRef","toDataURL","zoomFactor","labelCanvas","borderColor","alt","createContainer","GalleryCharts","onChartSelected","handlePrimaryTraceKey","scrollTo","onSortEnd","galleryTraces","oldIndex","sortIndex","newIndex","handleEmbeddingData","SortableItem","sortableElement","SortableList","sortableContainer","items","distance","axis","HelpDialog","rel","MoreOptionsDialog","onLabelFontSizeKeyPress","onLabelFontSize","onLabelStrokeWidth","onLabelStrokeWidthKeyPress","SaveDatasetFilterDialog","onNotesChanged","notes","savedFilter","create","savedDatasetFilter","filterValue","requestBody","sendRequest","isEqual","upsertDatasetFilterPromise","SaveSetDialog","onCategoryChanged","upsertFeatureSet","renderRow","cloneElement","OuterElementContext","createContext","OuterElementType","forwardRef","outerProps","useContext","ListboxComponent","itemData","Children","toArray","useTheme","smUp","useMediaQuery","breakpoints","noSsr","itemCount","itemSize","getChildSize","child","Provider","reduce","outerElementType","innerElementType","overscanCount","useStyles","paper","listbox","renderGroup","params","ListSubheader","disableGutters","noWrap","group","AutocompleteVirtualized","enterTokens","replace","showDragIndicator","show","onDragEnd","filterOptions","createFilterOptions","matchFrom","getOptionSelected","groupBy","option","getChipText","Autocomplete","disableListWrap","openOnFocus","filterSelectedOptions","getOptionLabel","blurOnSelect","ChipProps","autoHighlight","renderTags","onChipClick","getTagProps","Chip","renderInput","renderOption","onPaste","clipboardData","getData","onDrop","files","dataTransfer","reader","FileReader","onload","onerror","alert","readAsText","onDragOver","onDragLeave","pointSizeOptions","gallerySizeOptions","summaryOptions","getEmbeddingKeys","memoize","getAnnotationOptions","item1","item2","getFeatureSetOptions","Accordion","boxShadow","borderBottom","expanded","MuiAccordionPanel","AccordionPanelSummary","backgroundColor","marginBottom","minHeight","content","MuiAccordionPanelSummary","AccordionPanelDetails","MuiAccordionPanelDetails","SideBar","openDatasetFilter","handleOpenDatasetFilter","deleteDatasetFilter","handleDeleteDatasetFilter","onMarkerOpacityChange","handleMarkerOpacityUI","onPointSizeChange","handlePointSize","onFeaturesChange","handleSearchTokens","onObservationsChange","onSaveFeatureList","onFeatureSetsChange","onFeatureClick","onFeatureSetClick","isReadOnly","found","featureSetAnchorEl","onFeatureSetMenuClose","onDeleteFeatureSet","handleDeleteFeatureSet","onFilterChipClicked","innerText","onMarkerOpacityKeyPress","handleMarkerOpacity","onUnselectedMarkerOpacityChange","handleUnselectedMarkerOpacityUI","onUnselectedMarkerOpacityKeyPress","handleUnselectedMarkerOpacity","onNumberOfBinsChange","handleNumberOfBinsUI","onNumberOfBinsKeyPress","handleNumberOfBins","onChartSizeChange","handleChartSize","onBinSummaryChange","handleBinSummary","handleBinValuesChange","handleBinValues","handleSelectedCellsClick","downloadSelectedIds","onDatasetFilterChipDeleted","removeDatasetFilter","onDatasetFilterCleared","onDatasetFilterSaved","handleCombineDatasetFilters","currentDatasetFilters","datasetFilterKeys","isBrushing","splitTokens","featureOptions","availableEmbeddings","isSummarized","annotationOptions","featureSetOptions","renderValue","Checkbox","defaultExpanded","onDelete","htmlFor","step","data-key","ListItemSecondaryAction","handleExportDatasetFilters","flexDirection","getSelectedIdsPromise","filterKey","removeType","setSearchTokens","getDatasetFilterPromise","filterOperation","slashIndex","deleteDatasetFilterPromise","exportDatasetFiltersPromise","deleteFeatureSet","lightTheme","createMuiTheme","darkTheme","App","handleMessageClose","galleryRef","offsetTop","palette","main","bgcolor","ThemeProvider","Drawer","drawer","drawerPaper","anchor","LinearProgress","Snackbar","ContentProps","autoHideDuration","flexShrink","toolbar","mixins","flexGrow","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","startTime","getTime","setTimeout","loadingAppProgress","elapsed","script","load","client","scope","getElementsByTagName","getElementById"],"mappings":"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","file":"static/js/main.85d54d37.chunk.js","sourcesContent":["class CustomError extends Error {\n\n}\n\nexport default CustomError;\n","export class SlicedVector {\n    constructor(vector, indices) {\n        this.vector = vector;\n        this.indices = indices;\n    }\n\n    getName() {\n        return this.vector.getName();\n    }\n\n    size() {\n        return this.indices.length;\n    }\n\n    get(i) {\n        return this.vector.get(this.indices[i]);\n    }\n}\n","import natsort from 'natsort';\nimport {SlicedVector} from './SlicedVector';\n\n\nexport function valueCounts(v) {\n    let valueToCount = {};\n    for (let i = 0, size = v.size(); i < size; i++) {\n        let value = v.get(i);\n        let count = valueToCount[value] || 0;\n        valueToCount[value] = count + 1;\n    }\n    let keys = Object.keys(valueToCount);\n    keys.sort(natsort());\n    let counts = keys.map(key => valueToCount[key]);\n    return {categories: keys, counts: counts};\n}\n\nexport function getIndices(v, f) {\n    let result = new Set();\n    for (let i = 0, size = v.size(); i < size; i++) {\n        if (f(v.get(i))) {\n            result.add(i);\n        }\n    }\n    return result;\n}\n\nexport function groupedStats(dimensions, varMeasures) {\n    let allResults = [];\n    dimensions.forEach(v => {\n\n        let valueToIndices = {};\n        for (let i = 0, size = v.size(); i < size; i++) {\n            let value = v.get(i);\n            let indices = valueToIndices[value];\n            if (indices === undefined) {\n                indices = [];\n                valueToIndices[value] = indices;\n            }\n            indices.push(i);\n        }\n        let categories = Object.keys(valueToIndices);\n        categories.sort(natsort());\n        const results = {'categories': categories, 'name': v.getName(), 'values': []};\n        varMeasures.forEach(v => {\n            results.values.push({fractionExpressed: [], mean: [], name: v.getName()});\n        });\n        categories.forEach(category => {\n            let indices = valueToIndices[category];\n            varMeasures.forEach((v, index) => {\n                let slicedVector = new SlicedVector(v, indices);\n                let xStats = stats(slicedVector);\n                results.values[index].mean.push(xStats.mean);\n                results.values[index].fractionExpressed.push(xStats.numExpressed / slicedVector.size());\n            });\n        });\n\n        allResults.push(results);\n    });\n    return allResults;\n}\n\nexport function stats(v) {\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    let sum = 0;\n    let numExpressed = 0;\n\n    for (let i = 0, size = v.size(); i < size; i++) {\n        const value = v.get(i);\n        min = value < min ? value : min;\n        max = value > max ? value : max;\n        sum += value;\n        if (value !== 0) {\n            numExpressed++;\n        }\n    }\n    return {\n        'min': min, 'max': max, 'sum': sum, 'mean': sum / v.size(), 'numExpressed': numExpressed,\n    };\n}\n\n\n\n","import {isObject} from 'lodash';\nimport {getBasis} from './JsonDataset';\nimport {getIndices} from './VectorUtil';\n\nfunction combine(a, b, op) {\n    return op === 'or' ? new Set([...a, ...b]) : new Set(\n        [...a].filter(x => b.has(x)));\n}\n\n\nexport function getPassingFilterIndices(df, data_filter) {\n    let passingIndices = null;\n    if (data_filter) {\n        let user_filters = data_filter.filters || [];\n        let combine_filters = data_filter.combine || 'and';\n        for (let i = 0; i < user_filters.length; i++) {\n            let filter_obj = user_filters[i];\n            let field = filter_obj[0];\n            let op = filter_obj[1];\n            let value = filter_obj[2];\n            let keep = null;\n            if (isObject(field)) { // selection box\n\n                let selected_points_basis = getBasis(field['basis'], field.nbins,\n                    field.agg, field.ndim || 2, field.precomputed);\n                let coordinate_columns = selected_points_basis.coordinate_columns;\n                if (value.points) {\n                    // let p = new Set(value.points);\n                    let field = selected_points_basis['nbins'] ? selected_points_basis['full_name'] : 'index';\n                    if (field == 'index') {\n                        keep = value.points;\n                    } else {\n                        throw 'Not implemented';\n                    }\n                    // keep = getIndices(df[field], (val) => p.has(val));\n                } else {\n                    let selection_keep;\n                    let path = value.path;\n                    for (let j = 0; j < path.length; j++) {\n                        let p = path[j];\n                        let xKeep = getIndices(df[coordinate_columns[0]], (val) => val >= p.x && val <= p.x + p.width);\n                        let yKeep = getIndices(df[coordinate_columns[1]], (val) => val >= p.y && val <= p.y + p.height);\n                        selection_keep = combine(xKeep, yKeep, 'and');\n                        if (p.z) {  // 3d\n                            let zKeep = getIndices(df[coordinate_columns[2]], (val) => val >= p.z && val <= p.z + p.depth);\n                            selection_keep = combine(selection_keep, zKeep, 'and');\n                        }\n                    }\n                    keep = keep ? combine(selection_keep, keep, combine_filters) : selection_keep;\n                }\n            } else {\n                let series = df[field];\n                let applyFunction;\n                if (op === 'in') {\n                    value = new Set(value);\n                    applyFunction = (d) => value.has(d);\n                } else if (op === '>') {\n                    applyFunction = (d) => d > value;\n                } else if (op === '=') {\n                    applyFunction = (d) => d === value;\n                } else if (op === '<') {\n                    applyFunction = (d) => d < value;\n                } else if (op === '!=') {\n                    applyFunction = (d) => d !== value;\n                } else if (op === '>=') {\n                    applyFunction = (d) => d >= value;\n                } else if (op === '<=') {\n                    applyFunction = (d) => d <= value;\n                } else {\n                    throw('Unknown filter');\n                }\n                keep = getIndices(series, applyFunction);\n            }\n\n\n            if (passingIndices) {\n                passingIndices = combine(passingIndices, keep, combine_filters);\n            } else {\n                passingIndices = keep;\n            }\n        }\n    }\n\n    return passingIndices != null ? Array.from(passingIndices) : null;\n}\n","export class Vector {\n    constructor(name, values) {\n        this.name = name;\n        this.values = values;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    size() {\n        return this.values.length;\n    }\n\n    get(i) {\n        return this.values[i];\n    }\n\n    asArray() {\n        return this.values;\n    }\n\n\n}\n","import {isArray, isObject} from 'lodash';\nimport {getPassingFilterIndices} from './dataset_filter';\nimport {SlicedVector} from './SlicedVector';\nimport {Vector} from './Vector';\nimport {groupedStats, stats, valueCounts} from './VectorUtil';\n\n\nfunction getVarNameType(key) {\n    let index = key.indexOf('/');\n    if (index === -1) {\n        return {name: key, type: 'X'};\n    } else {\n        let key_type = key.substring(0, index);\n        let name = key.substring(index + 1);\n        return {name: name, type: key_type};\n    }\n}\n\nexport function getBasis(basis, nbins = null, agg = null, dimensions = 2, precomputed = false) {\n    dimensions = parseInt(dimensions);\n    let coordinate_columns = [];\n    for (let i = 0; i < dimensions; i++) {\n        coordinate_columns.push(basis + '_' + i + 1);\n    }\n    let full_name = basis + '_' + dimensions;\n    if (nbins != null) {\n        full_name = full_name + '_' + nbins + '_' + agg;\n    }\n    return {\n        'name': basis, 'dimensions': dimensions, 'coordinate_columns': coordinate_columns, 'nbins': nbins,\n        'agg': agg, 'full_name': full_name, 'precomputed': precomputed\n    };\n}\n\nfunction splitDataFilter(data_filter) {\n    let var_keys = new Set();\n    let obs_keys = new Set();\n    let basis_list = [];\n    if (data_filter) {\n        let user_filters = data_filter.filters || [];\n        for (let i = 0; i < user_filters.length; i++) {\n            let user_filter = user_filters[i];\n            let key = user_filter[0];\n            if (isObject(key)) {\n                let basis = getBasis(key.basis, key.nbins, key.agg,\n                    key.ndim || 2, key.precomputed);\n                basis_list.push(basis);\n            } else {\n\n                const {name, type} = getVarNameType(key);\n\n                user_filter[0] = name;\n                if (type === 'X') {\n                    var_keys.add(name);\n                } else {\n                    obs_keys.add(name);\n                }\n            }\n        }\n    }\n    return {basis: basis_list, X: Array.from(var_keys), obs: Array.from(obs_keys)};\n//    return list(var_keys), list(obs_keys), basis_list\n}\n\nfunction splitMeasures(measures) {\n    let obsMeasures = [];\n    let varMeasures = [];\n    for (let i = 0; i < measures.length; i++) {\n        const {name, type} = getVarNameType(measures[i]);\n        if (type === 'X') {\n            varMeasures.push(name);\n        } else if (type === 'obs') {\n            obsMeasures.push(name);\n        } else {\n            throw('Unknown key type ' + type);\n        }\n    }\n    return {obsMeasures: obsMeasures, varMeasures: varMeasures};\n}\n\n\nfunction getStats(dimensions, obsMeasures, varMeasures) {\n    const results = {};\n    dimensions.forEach(v => {\n        results[v.getName()] = valueCounts(v);\n    });\n    obsMeasures.forEach(v => {\n        results[v.getName()] = stats(v);\n    });\n    varMeasures.forEach(v => {\n        results[v.getName()] = stats(v);\n    });\n    return results;\n}\n\nexport class JsonDataset {\n\n    init(id, url) {\n        this.id = id;\n        this.key2vector = {}; // maps key to vector\n\n        this.schema = null;\n        if (!url.endsWith('.json')) {\n            url = url + 'schema.json';\n        }\n        this.url = url;\n        this.baseUrl = this.url.substring(0, this.url.lastIndexOf('/') + 1);\n        // return new Promise((resolve, reject) => {\n        //     fetch(url + '.idx.json').then(r => r.json()).then(result => {\n        //         this.key2bytes = result.index;\n        //     }).then(() => {\n        //         fetch(url, this.getByteRange('schema')).then(response => {\n        //             return response.json();\n        //         }).then(result => {\n        //             this.schema = result[\"schema\"];\n        //             resolve();\n        //         });\n        //     });\n        // });\n        return new Promise((resolve, reject) => {\n            fetch(url).then(r => r.json()).then(result => {\n                this.schema = result;\n                resolve();\n            });\n        });\n    }\n\n    // getByteRange(key) {\n    //     let range = this.key2bytes[key];\n    //     if (!range) {\n    //         throw key + ' not found';\n    //     }\n    //     return {headers: {'Range': 'bytes=' + range[0] + '-' + range[1]}};\n    // }\n\n    _fetch(key) {\n        return fetch(this.baseUrl + key + '.json').then(r => r.json());\n    }\n\n    fetchData(keys) {\n        let promises = [];\n        keys.forEach(key => {\n            if (this.key2vector[key] == null && key !== '__count') {\n                let p = this._fetch(key).then(data => {\n                    if (isArray(data)) {\n                        this.key2vector[key] = new Vector(key, data);\n                    } else {\n                        // sparse\n                        if (data.index) {\n                            let values = new Float32Array(this.schema.shape[0]);\n                            for (let i = 0, n = data.index.length; i < n; i++) {\n                                values[data.index[i]] = data.value[i];\n                            }\n                            this.key2vector[key] = new Vector(key, values);\n                        } else {\n                            this.key2vector[key] = new Vector(key, data);\n                        }\n                    }\n\n                });\n                promises.push(p);\n            }\n        });\n        return new Promise(resolve => {\n            Promise.all(promises).then(() => resolve());\n        });\n\n    }\n\n    getSelectedIdsPromise(q) {\n        const dataFilter = q.filter;\n        const {basis, X, obs} = splitDataFilter(dataFilter);\n        let keys = [];\n        basis.forEach(embedding => {\n            keys.push(embedding.name);\n        });\n        keys.push('index');\n\n        keys = keys.concat(X).concat(obs);\n        return new Promise(resolve => {\n            this.fetchData(keys).then(() => {\n                let indices = getPassingFilterIndices(this.key2vector, dataFilter);\n                let idVector = this.getVector('index', indices);\n                let ids = [];\n                for (let i = 0, n = idVector.size(); i < n; i++) {\n                    ids.push(idVector.get(i));\n                }\n                resolve({ids: ids});\n            });\n\n        });\n    }\n\n    getDataPromise(q) {\n        let dimensions = [];\n        let measures = [];\n        let queryKeys = ['stats', 'groupedStats', 'embedding', 'selection'];\n        const results = {};\n        queryKeys.forEach(key => {\n            if (key in q) {\n                let obj = q[key];\n                if (!isArray(obj)) {\n                    obj = [obj];\n                }\n                obj.forEach(value => {\n                    if (value.dimensions) {\n                        dimensions = dimensions.concat(value.dimensions);\n                    }\n                    if (value.measures) {\n                        measures = measures.concat(value.measures);\n                    }\n                });\n\n            }\n        });\n\n        const {obsMeasures, varMeasures} = splitMeasures(measures);\n        let basisKeys = new Set();\n\n        if (q.selection) { // get any embeddings\n            const dataFilter = q.selection.filter;\n            const {basis, X, obs} = splitDataFilter(dataFilter);\n\n            dimensions = dimensions.concat(obs);\n            measures = measures.concat(X);\n            const embeddings = q.selection.embeddings || [];\n            let mappedEmbeddings = [];\n            embeddings.forEach(embedding => {\n                let basis = getBasis(embedding.basis, embedding.nbins, embedding.agg,\n                    embedding.ndim || 2, embedding.precomputed);\n                basisKeys.add(basis.name);\n                mappedEmbeddings.push(basis);\n            });\n            q.selection.embeddings = mappedEmbeddings;\n            basis.forEach(embedding => {\n                basisKeys.add(embedding.name);\n            });\n\n        }\n        if (q.embedding) {\n            q.embedding.forEach(embedding => {\n                let basis = getBasis(embedding.basis, embedding.nbins, embedding.agg,\n                    embedding.ndim || 2, embedding.precomputed);\n                basisKeys.add(basis.name);\n                embedding.basis = basis;\n            });\n\n        }\n\n\n        return new Promise(resolve => {\n\n            this.fetchData(dimensions.concat(obsMeasures).concat(varMeasures).concat(Array.from(basisKeys))).then(() => {\n\n                if (q.embedding) {\n                    results.embedding = [];\n                    q.embedding.forEach(embedding => {\n                        let dimensions = embedding.dimensions || [];\n                        let measures = embedding.measures || [];\n                        const {obsMeasures, varMeasures} = splitMeasures(measures);\n                        let values = {};\n                        let coordinates = this.getVector(embedding.basis.name).asArray();\n                        dimensions.concat(obsMeasures).concat(varMeasures).forEach(key => {\n                            if (key === '__count') {\n                                values[key] = new Int8Array(coordinates[Object.keys(coordinates)[0]].length);\n                                values[key].fill(1);\n                            } else {\n                                values[key] = this.getVector(key).asArray();\n                            }\n                        });\n                        results.embedding.push({coordinates: coordinates, values: values});\n                    });\n                }\n                if (q.stats) {\n                    let dimensions = q.stats.dimensions || [];\n                    let measures = q.stats.measures || [];\n                    const {obsMeasures, varMeasures} = splitMeasures(measures);\n                    results.summary = getStats(this.getVectors(dimensions), this.getVectors(obsMeasures), this.getVectors(varMeasures));\n                }\n\n                if (q.groupedStats) {\n                    let dimensions = q.groupedStats.dimensions || [];\n                    let measures = q.groupedStats.measures || [];\n                    if (dimensions.length > 0 && measures.length > 0) {\n                        results.dotplot = groupedStats(this.getVectors(dimensions), this.getVectors(measures));\n                    }\n\n                }\n\n                if (q.selection) {\n                    let dimensions = q.selection.dimensions || [];\n                    let measures = q.selection.measures || [];\n                    const embeddings = q.selection.embeddings || [];\n                    const {obsMeasures, varMeasures} = splitMeasures(measures);\n                    results.selection = {};\n\n                    let indices = getPassingFilterIndices(this.key2vector, q.selection.filter);\n\n                    if (embeddings.length > 0) {\n                        results.selection.coordinates = {};\n                        embeddings.forEach(embedding => {\n                            results.selection.coordinates[embedding.full_name] = {'indices_or_bins': indices};\n                        });\n                    }\n\n                    if (dimensions.length > 0 && varMeasures.length > 0) {\n                        results.selection.dotplot = groupedStats(this.getVectors(dimensions, indices), this.getVectors(measures, indices));\n                    }\n\n                    results.selection.count = indices.length;\n                    results.selection.summary = getStats(this.getVectors(dimensions, indices), this.getVectors(obsMeasures, indices), this.getVectors(varMeasures, indices));\n                }\n                resolve(results);\n            });\n        });\n    }\n\n    getSchemaPromise() {\n        return Promise.resolve(this.schema);\n    }\n\n    getVector(key, indices = null) {\n        let v = this.key2vector[key];\n        return indices == null ? v : new SlicedVector(v, indices);\n    }\n\n    getFileUrl(file) {\n        return this.baseUrl + file;\n    }\n\n    getVectors(keys, indices = null) {\n        let result = [];\n        keys.forEach(key => {\n            let v = this.key2vector[key];\n            if (indices != null) {\n                v = new SlicedVector(v, indices);\n            }\n            result.push(v);\n        });\n        return result;\n    }\n\n\n}\n\n\n\n\n","import {API, getIdToken} from './actions';\n\nexport class RestDataset {\n\n    init(id) {\n        this.id = id;\n        return Promise.resolve();\n    }\n\n    getSelectedIdsPromise(data) {\n        data.id = this.id;\n        return fetch(API + '/selected_ids',\n            {\n                body: JSON.stringify(data),\n                method: 'POST',\n                headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + getIdToken()},\n            }).result(result => result.json());\n    }\n\n    getFileUrl(file) {\n        return API + '/file?id=' + this.id + '&file=' + file + '&access_token=' + getIdToken();\n    }\n\n    getDataPromise(data) {\n        data.id = this.id;\n        return fetch(API + '/data',\n            {\n                body: JSON.stringify(data),\n                method: 'POST',\n                headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + getIdToken()},\n            }).then(result => result.json());\n    }\n\n    getSchemaPromise() {\n        return fetch(API + '/schema?id=' + this.id, {headers: {'Authorization': 'Bearer ' + getIdToken()}}).then(response => {\n            return response.json();\n        });\n    }\n}\n\n\n\n\n\n","// general server stuff\n\nimport {API, getIdToken} from './actions';\n\nexport class RestServerApi {\n\n    getUserPromise() {\n        return fetch(API + '/user', {\n            headers: {\n                'Authorization': 'Bearer ' + getIdToken(),\n                'Content-Type': 'application/json'\n            }\n        }).then(result => result.json());\n    }\n\n\n    getDatasetsPromise() {\n        return fetch(API + '/datasets', {headers: {'Authorization': 'Bearer ' + getIdToken()}})\n            .then(response => {\n                return response.json();\n            });\n    }\n\n    deleteDatasetPromise(datasetId) {\n        return fetch(API + '/dataset',\n            {\n                body: JSON.stringify(\n                    {id: datasetId}),\n                method: 'DELETE',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            });\n    }\n\n    upsertDatasetPromise(datasetId, dataset) {\n        let isEdit = datasetId != null;\n        if (datasetId != null) {\n            dataset.id = datasetId;\n        }\n        return fetch(API + '/dataset',\n            {\n                body: JSON.stringify(dataset),\n                method: isEdit ? 'PUT' : 'POST',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(importDatasetResponse => importDatasetResponse.json());\n    }\n\n\n    getDatasetPromise(datasetId) {\n        return fetch(API + '/dataset?id=' + datasetId,\n            {\n                method: 'GET',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(result => result.json());\n    }\n\n\n// categories and filters\n    setCategoryNamePromise(data) {\n        return fetch(API + '/category_name',\n            {\n                body: JSON.stringify(data),\n                method: 'PUT',\n                headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + getIdToken()},\n            });\n    }\n\n    upsertDatasetFilterPromise(data, isUpdate) {\n        return fetch(API + '/filter',\n            {\n                body: JSON.stringify(data),\n                method: isUpdate ? 'PUT' : 'POST',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(response => response.json());\n    }\n\n    upsertFeatureSet(data, isUpdate) {\n        return fetch(API + '/feature_set',\n            {\n                body: JSON.stringify(data),\n                method: isUpdate ? 'PUT' : 'POST',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(response => response.json());\n    }\n\n    deleteFeatureSet(setId, datasetId) {\n        return fetch(API + '/feature_set',\n            {\n                body: JSON.stringify({id: setId, ds_id: datasetId}),\n                method: 'DELETE',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            });\n    }\n\n\n    exportDatasetFiltersPromise(datasetId) {\n        return fetch(API + '/export_filters?id=' + datasetId, {\n            headers: {'Authorization': 'Bearer ' + getIdToken()},\n        }).then(result => {\n            if (!result.ok) {\n                return null;\n            }\n            return result.text();\n        });\n    }\n\n    deleteDatasetFilterPromise(filterId, datasetId) {\n        return fetch(API + '/filter',\n            {\n                body: JSON.stringify({id: filterId, ds_id: datasetId}),\n                method: 'DELETE',\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            });\n    }\n\n    getDatasetFilterPromise(filterId, datasetId) {\n        return fetch(API + '/filter?id=' + filterId + '&ds_id=' + datasetId,\n            {\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(response => response.json());\n    }\n\n    getCategoryNamesPromise(datasetId) {\n        return fetch(API + '/category_name?id=' + datasetId,\n            {\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(result => result.json());\n    }\n\n    getFiltersPromise(datasetId) {\n        return fetch(API + '/filters?id=' + datasetId,\n            {\n                headers: {'Authorization': 'Bearer ' + getIdToken()},\n            }).then(result => result.json());\n    }\n\n}\n","import {Tooltip} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport BorderInnerIcon from '@material-ui/icons/BorderInner';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport ExposureIcon from '@material-ui/icons/Exposure';\nimport FontDownloadIcon from '@material-ui/icons/FontDownload';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary';\nimport PhotoSizeSelectSmallIcon from '@material-ui/icons/PhotoSizeSelectSmall';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ZoomInIcon from '@material-ui/icons/ZoomIn';\nimport ZoomOutIcon from '@material-ui/icons/ZoomOut';\nimport React from 'react';\n\nconst active = 'cirro-active';\n\n\n//\"zoom\" | \"pan\" | \"select\" | \"lasso\" | \"orbit\" | \"turntable\"\nclass ChartToolbar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {saveImageEl: null};\n    }\n\n    setDragMode = (mode) => {\n        this.props.onDragMode(mode);\n    };\n\n    onShowLabels = () => {\n        this.props.onShowLabels();\n    };\n\n    onShowAxis = () => {\n        this.props.onShowAxis();\n    };\n\n\n    onShowFog = () => {\n        this.props.onShowFog();\n    };\n\n\n    onGallery = () => {\n        this.props.onGallery();\n    };\n\n    handleMoreOptions = () => {\n        this.props.onMoreOptions();\n    };\n\n    setEditSelection = () => {\n        this.props.onEditSelection();\n    };\n    handleSaveImageMenu = (event) => {\n        this.setState({saveImageEl: event.currentTarget});\n    };\n    handleSaveImageMenuClose = (event) => {\n        this.setState({saveImageEl: null});\n    };\n\n    handleSaveImage = (format) => {\n        this.setState({saveImageEl: null});\n        this.props.onSaveImage(format);\n    };\n\n    render() {\n\n        const {dragmode, editSelection, showLabels, showAxis} = this.props;\n        const {saveImageEl} = this.state;\n        return (<React.Fragment>\n\n            {this.props.onZoomIn && <Tooltip title={\"Zoom In\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Zoom In\" onClick={this.props.onZoomIn}>\n                    <ZoomInIcon/>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onZoomOut && <Tooltip title={\"Zoom Out\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Zoom In\" onClick={this.props.onZoomOut}>\n                    <ZoomOutIcon/>\n                </IconButton>\n            </Tooltip>}\n\n            {this.props.onHome && <Tooltip title={\"Home\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Home\" onClick={this.props.onHome}>\n                    <HomeIcon/>\n                </IconButton>\n            </Tooltip>}\n\n\n            <Tooltip title={\"Lasso Select\"}>\n                <IconButton edge={false} size={'small'} className={dragmode === 'lasso' ? active : ''}\n                            aria-label=\"Lasso Select\" onClick={() => this.setDragMode('lasso')}>\n                    <svg className={\"MuiSvgIcon-root\"} width=\"24\" height=\"21\" viewBox=\"0 0 1031 1000\">\n                        <path\n                            d=\"m1018 538c-36 207-290 336-568 286-277-48-473-256-436-463 10-57 36-108 76-151-13-66 11-137 68-183 34-28 75-41 114-42l-55-70 0 0c-2-1-3-2-4-3-10-14-8-34 5-45 14-11 34-8 45 4 1 1 2 3 2 5l0 0 113 140c16 11 31 24 45 40 4 3 6 7 8 11 48-3 100 0 151 9 278 48 473 255 436 462z m-624-379c-80 14-149 48-197 96 42 42 109 47 156 9 33-26 47-66 41-105z m-187-74c-19 16-33 37-39 60 50-32 109-55 174-68-42-25-95-24-135 8z m360 75c-34-7-69-9-102-8 8 62-16 128-68 170-73 59-175 54-244-5-9 20-16 40-20 61-28 159 121 317 333 354s407-60 434-217c28-159-121-318-333-355z\"\n                            transform=\"matrix(1 0 0 -1 0 850)\"></path>\n\n                    </svg>\n                </IconButton>\n            </Tooltip>\n            <Tooltip title={\"Box Select\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"Box Select\" onClick={() => this.setDragMode('select')}>\n                    <PhotoSizeSelectSmallIcon className={dragmode === 'select' ? active : ''}/>\n                </IconButton>\n            </Tooltip>\n\n            <Tooltip title={\"Append to selection\"}>\n                <IconButton edge={false} size={'small'} aria-label=\"Append to selection\"\n                            onClick={this.setEditSelection}>\n                    <ExposureIcon className={editSelection ? active : ''}/>\n                </IconButton>\n            </Tooltip>\n            {this.props.is3d && <Tooltip title={this.props.animating ? 'Pause' : 'Animate'}>\n                <IconButton edge={false} size={'small'}\n                            aria-label={this.props.animating ? 'Pause' : 'Animate'}\n                            onClick={this.props.toggleAnimation}>\n                    {!this.props.animating && <PlayArrowIcon/>}\n                    {this.props.animating && <PauseIcon/>}\n                </IconButton>\n            </Tooltip>}\n\n            <Tooltip title={\"Pan\"}>\n                <IconButton edge={false} size={'small'} className={dragmode === 'pan' ? active : ''}\n                            aria-label=\"Pan\" onClick={() => this.setDragMode('pan')}>\n                    <svg className={\"MuiSvgIcon-root\"} viewBox=\"0 0 1000 1000\" height=\"16\" width=\"16\">\n                        <path\n                            d=\"m1000 350l-187 188 0-125-250 0 0 250 125 0-188 187-187-187 125 0 0-250-250 0 0 125-188-188 186-187 0 125 252 0 0-250-125 0 187-188 188 188-125 0 0 250 250 0 0-126 187 188z\"\n                            transform=\"matrix(1 0 0 -1 0 850)\"></path>\n                    </svg>\n                </IconButton>\n            </Tooltip>\n\n            {this.props.onShowLabels && <Tooltip title={\"Show Categorical Labels\"}>\n                <IconButton edge={false} size={'small'} className={showLabels ? active : ''}\n                            aria-label=\"Show Labels\" onClick={() => this.onShowLabels()}>\n                    <FontDownloadIcon/>\n                </IconButton>\n            </Tooltip>}\n\n\n            {this.props.is3d && this.props.onShowAxis && <Tooltip title={\"Show Axis\"}>\n                <IconButton edge={false} size={'small'} className={showAxis ? active : ''}\n                            aria-label=\"Show Axis\" onClick={() => this.onShowAxis()}>\n                    <BorderInnerIcon/>\n                </IconButton>\n            </Tooltip>}\n\n\n            {this.props.is3d && this.props.onShowFog && <Tooltip title={\"Show Fog\"}>\n                <IconButton edge={false} size={'small'} className={this.props.showFog ? active : ''}\n                            aria-label=\"Show Fog\" onClick={() => this.onShowFog()}>\n                    <CloudQueueIcon/>\n                </IconButton>\n            </Tooltip>}\n\n\n            {/*<Tooltip title={\"Zoom\"}>*/}\n            {/*    <IconButton className={dragmode === 'zoom' ? active : ''}*/}\n            {/*                aria-label=\"Zoom\" onClick={() => this.setDragMode('zoom')}>*/}\n            {/*        <svg viewBox=\"0 0 1000 1000\" height=\"16\" width=\"16\">*/}\n            {/*            <path*/}\n            {/*                d=\"m1000-25l-250 251c40 63 63 138 63 218 0 224-182 406-407 406-224 0-406-182-406-406s183-406 407-406c80 0 155 22 218 62l250-250 125 125z m-812 250l0 438 437 0 0-438-437 0z m62 375l313 0 0-312-313 0 0 312z\"*/}\n            {/*                transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n            {/*        </svg>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n            {/*<IconButton className={dragmode === ChartToolbar.MODE_ZOOM_OUT ? active : ''}*/}\n            {/*            aria-label=\"Zoom Out\" onClick={this.onZoomOut}>*/}\n            {/*    <svg viewBox=\"0 0 875 1000\" height=\"16\" width=\"16\">*/}\n            {/*        <path d=\"m0 788l0-876 875 0 0 876-875 0z m688-500l-500 0 0 125 500 0 0-125z\"*/}\n            {/*              transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n            {/*    </svg>*/}\n            {/*</IconButton>*/}\n\n            <Tooltip title={\"Save Image\"}>\n                <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false} size={'small'}\n                            aria-label=\"Save Image\" onClick={this.handleSaveImageMenu}>\n                    <PhotoCameraIcon/>\n                </IconButton>\n            </Tooltip>\n\n            <Menu\n                id=\"save-image-menu\"\n                anchorEl={saveImageEl}\n                keepMounted\n                open={Boolean(saveImageEl)}\n                onClose={this.handleSaveImageMenuClose}\n            >\n                <MenuItem onClick={e => this.handleSaveImage('png')}>PNG</MenuItem>\n                <MenuItem onClick={e => this.handleSaveImage('svg')}>SVG</MenuItem>\n\n            </Menu>\n\n\n            <Tooltip title={\"More Options\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"More Options\" onClick={this.handleMoreOptions}>\n                    <SettingsIcon/>\n                </IconButton>\n            </Tooltip>\n\n\n            <Tooltip title={\"View Gallery\"}>\n                <IconButton edge={false} size={'small'}\n                            aria-label=\"View Gallery\" onClick={this.onGallery}>\n                    <PhotoLibraryIcon/>\n                </IconButton>\n            </Tooltip>\n            {/*<Tooltip title={\"Copy Image\"}>*/}\n            {/*    <IconButton edge={false} size={'small'} aria-label=\"Copy Image\" onClick={this.props.onCopyImage}>*/}\n            {/*        <FileCopyIcon/>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n\n            {/*<Tooltip title={*/}\n            {/*    <React.Fragment>*/}\n            {/*        <h6>3D controls</h6>*/}\n            {/*        <b>Rotate</b> Mouse left click.*/}\n            {/*        <b>Pan</b> Mouse right click.*/}\n            {/*        <b>Zoom</b> Mouse wheel.*/}\n            {/*        Holding <b>ctrl</b> reverses the mouse clicks.*/}\n            {/*        <h6>2D controls</h6>*/}\n            {/*        <b>Pan</b> Mouse left click.*/}\n            {/*        <b>Zoom</b> Mouse wheel.*/}\n            {/*    </React.Fragment>*/}\n            {/*}>*/}\n            {/*    <IconButton edge={false} size={'small'} aria-label=\"Help\">*/}\n            {/*        <HelpIcon/>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n            {/*<Tooltip title={\"Reset\"}>*/}\n            {/*    <IconButton aria-label=\"Reset\" onClick={this.props.onHome}>*/}\n            {/*        <svg viewBox=\"0 0 928.6 1000\" height=\"16\" width=\"16\">*/}\n            {/*            <path*/}\n            {/*                d=\"m786 296v-267q0-15-11-26t-25-10h-214v214h-143v-214h-214q-15 0-25 10t-11 26v267q0 1 0 2t0 2l321 264 321-264q1-1 1-4z m124 39l-34-41q-5-5-12-6h-2q-7 0-12 3l-386 322-386-322q-7-4-13-4-7 2-12 7l-35 41q-4 5-3 13t6 12l401 334q18 15 42 15t43-15l136-114v109q0 8 5 13t13 5h107q8 0 13-5t5-13v-227l122-102q5-5 6-12t-4-13z\"*/}\n            {/*                transform=\"matrix(1 0 0 -1 0 850)\"></path>*/}\n\n            {/*        </svg>*/}\n            {/*    </IconButton>*/}\n            {/*</Tooltip>*/}\n        </React.Fragment>);\n    }\n}\n\n\nexport default ChartToolbar;\n","import {format} from 'd3-format';\n\nexport const numberFormat = format('.1f');\nexport const intFormat = format(',');\nexport const numberFormat0 = format('.0f');","import {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport {numberFormat} from './formatters';\n\nexport function drawColorScheme(context, width, height, colorScale, label, nsteps = 10, textColor = 'black') {\n    let domain = colorScale.domain();\n    if (domain[0] === domain[1]) {\n        return;\n    }\n    let value = domain[0];\n    let stepSize = (domain[1] - domain[0]) / nsteps;\n    let legendHeight = 18;\n    let gradient = context.createLinearGradient(0, 0, width, legendHeight);\n    let valueToFraction = scaleLinear().range([0, 1]).domain(domain).clamp(true);\n    for (let i = 0; i < nsteps; i++) {\n        if (i === (nsteps - 1)) {\n            value = domain[1];\n        }\n        let f = valueToFraction(value);\n        if (!isNaN(f)) {\n            let color = colorScale(value);\n            gradient.addColorStop(f, color);\n        }\n        value += stepSize;\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, legendHeight);\n    context.strokeStyle = 'LightGrey';\n    context.strokeRect(0, 0, width, legendHeight);\n    if (label > 0) {\n\n        context.textBaseline = 'top';\n        context.fillStyle = textColor;\n\n        context.textAlign = 'left';\n        context.fillText(numberFormat(domain[0]), 0, legendHeight + 2);\n        context.textAlign = 'right';\n        context.fillText(numberFormat(domain[1]), width, legendHeight + 2);\n    }\n}\n\nclass ColorSchemeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.backingScale = 1;\n    }\n\n    redraw() {\n        let backingScale = this.backingScale;\n        let node = this.ref.current;\n        const context = node.getContext('2d');\n        const height = this.props.height;\n        const width = this.props.width;\n        const textColor = this.props.textColor || 'black';\n        context\n            .clearRect(0, 0, width * backingScale, height * backingScale);\n        context.scale(backingScale, backingScale);\n\n        const colorScale = this.props.scale;\n        if (colorScale == null) {\n            return;\n        }\n\n        context.font = '12px Roboto Condensed,Helvetica,Arial,sans-serif';\n        drawColorScheme(context, width, height, colorScale, this.props.label, 10, textColor);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    render() {\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            this.backingScale = window.devicePixelRatio;\n        }\n\n        let height = this.props.height;\n        let width = this.props.width;\n        let style = {width: width, height: height};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n        return (\n            <canvas width={width * this.backingScale} height={height * this.backingScale} ref={this.ref}\n                    style={style}></canvas>\n        );\n\n    }\n}\n\nexport default ColorSchemeLegend;\n\n","import C2S from 'canvas2svg';\nimport {drawColorScheme} from './ColorSchemeLegend';\nimport {drawCategoricalLegend, getCategoricalLegendSize} from './LegendDrawer';\n\nexport function saveImage(traceInfo, chartSize, draw, format) {\n\n    let context;\n    let canvas = null;\n    const totalSize = {width: chartSize.width, height: chartSize.height};\n    let name = traceInfo.name;\n    if (name === '__count') {\n        name = 'count';\n    }\n    if (format !== 'svg') {\n        canvas = document.createElement('canvas');\n        canvas.width = 100;\n        canvas.height = 100;\n        context = canvas.getContext('2d');\n    } else {\n        context = new C2S(100, 100);\n    }\n    if (!traceInfo.continuous) {\n        const legendSize = getCategoricalLegendSize(context, name, traceInfo.colorScale.domain());\n        totalSize.width += legendSize.width;\n        totalSize.height = Math.max(legendSize.height, chartSize.height);\n    } else {\n        totalSize.height += 150;\n\n    }\n    if (format === 'svg') {\n        context = new window.C2S(totalSize.width, totalSize.height);\n    } else {\n        canvas.width = totalSize.width * window.devicePixelRatio;\n        canvas.height = totalSize.height * window.devicePixelRatio;\n        context = canvas.getContext('2d');\n        context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        context.fillStyle = 'white';\n        context.fillRect(0, 0, totalSize.width, totalSize.height);\n    }\n\n    draw(context, chartSize, format);\n\n    if (!traceInfo.continuous) {\n        context.translate(chartSize.width, 2);\n        drawCategoricalLegend(context, traceInfo.colorScale, name, traceInfo.colorScale.domain());\n    } else {\n        context.translate(chartSize.width / 2 - 75, chartSize.height + 2);\n        drawColorScheme(context, 150, 20, traceInfo.colorScale, true);\n    }\n\n    if (format === 'svg') {\n        let svg = context.getSerializedSvg();\n        // let prefix = [];\n        // prefix.push('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n');\n        // prefix.push('<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"' +\n        //     ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n        // svg = prefix.join('') + svg;\n        let blob = new Blob([svg], {\n            type: 'text/plain;charset=utf-8'\n        });\n        window.saveAs(blob, name + '.svg');\n    } else {\n        canvas.toBlob(blob => {\n            window.saveAs(blob, name + '.png', true);\n        });\n    }\n\n}","export function getCategoricalLegendSize(context, name, categories) {\n    context.font = '14px Helvetica';\n    let maxWidth = context.measureText(name).width;\n    categories.forEach(value => maxWidth = Math.max(maxWidth, context.measureText(value).width));\n    return {width: maxWidth + 14, height: categories.length * 12 + 4};\n}\n\nexport function drawCategoricalLegend(context, scale, name, categories) {\n\n    context.font = '14px Helvetica';\n    context.textAlign = 'left';\n    context.textBaseline = 'bottom';\n    const height = 12;\n    for (let i = 0; i < categories.length; i++) {\n        const category = categories[i];\n        context.fillStyle = scale(category);\n        context.fillRect(0, i * height, 10, 10);\n        context.fillStyle = 'black';\n        context.fillText('' + category, 12, i * height + height);\n    }\n}\n\n\n","import {shuffle} from 'd3-array';\nimport {color} from 'd3-color';\nimport {scaleLinear} from 'd3-scale';\nimport * as scaleChromatic from 'd3-scale-chromatic';\nimport simplify from 'simplify-js';\nimport {getColors} from './ThreeUtil';\n\nexport const interpolators = {};\ninterpolators['Diverging'] = [\n    'interpolateBrBG',\n    'interpolatePRGn',\n    'interpolatePiYG',\n    'interpolatePuOr',\n    'interpolateRdBu',\n    'interpolateRdGy',\n    'interpolateRdYlBu',\n    'interpolateRdYlGn',\n    'interpolateSpectral'];\n\ninterpolators['Sequential (Single Hue)'] = [\n    'interpolateBlues',\n    'interpolateGreens',\n    'interpolateGreys',\n    'interpolateOranges',\n    'interpolatePurples',\n    'interpolateReds'];\n\ninterpolators['Sequential (Multi-Hue)'] = [\n    'interpolateViridis',\n    'interpolateInferno',\n    'interpolateMagma',\n    'interpolatePlasma',\n    'interpolateWarm',\n    'interpolateCool',\n    'interpolateCubehelixDefault',\n    'interpolateBuGn',\n    'interpolateBuPu',\n    'interpolateGnBu',\n    'interpolateOrRd',\n    'interpolatePuBuGn',\n    'interpolatePuBu',\n    'interpolatePuRd',\n    'interpolateRdPu',\n    'interpolateYlGnBu',\n    'interpolateYlGn',\n    'interpolateYlOrBr',\n    'interpolateYlOrRd'];\n\ninterpolators['Cyclical'] = ['interpolateRainbow', 'interpolateSinebow'];\n\n\n// const TWENTY_COLORS = [\n//     '#1f77b4', '#aec7e8', '#ff7f0e',\n//     '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd',\n//     '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f',\n//     '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\nexport const CATEGORY_20B = [\n    '#393b79', '#5254a3', '#6b6ecf',\n    '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31',\n    '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b',\n    '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\nexport const CATEGORY_20C = [\n    '#3182bd', '#6baed6', '#9ecae1',\n    '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354',\n    '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc',\n    '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n\n/**\n *\n * @param array. Array of format,data\n */\nexport function setClipboardData(clipboardData) {\n    const container = document.activeElement;\n    const isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n    const fakeElem = document.createElement('div');\n    fakeElem.contentEditable = true;\n\n    // Prevent zooming on iOS\n    fakeElem.style.fontSize = '12pt';\n    // Reset box model\n\n    fakeElem.style.border = '0';\n    fakeElem.style.padding = '0';\n    fakeElem.style.margin = '0';\n    // Move element out of screen horizontally\n    fakeElem.style.position = 'absolute';\n    fakeElem.style[isRTL ? 'right' : 'left'] = '-999999px';\n    // Move element to the same position vertically\n    fakeElem.style.top = (window.pageYOffset || document.documentElement.scrollTop) + 'px';\n    fakeElem.setAttribute('readonly', '');\n    //fakeElem.innerHTML = html;\n    const copyListener = (e) => {\n\n        clipboardData.forEach(function (elem) {\n            e.clipboardData.setData(elem.format, elem.data);\n        });\n\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        fakeElem.removeEventListener('copy', copyListener);\n    };\n    fakeElem.addEventListener('copy', copyListener);\n\n    container.appendChild(fakeElem);\n\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(fakeElem);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    const fakeHandlerCallback = (event) => {\n        container.removeChild(fakeElem);\n        container.removeEventListener('click', fakeHandlerCallback);\n    };\n    document.execCommand('copy');\n    container.addEventListener('click', fakeHandlerCallback);\n};\n\nexport function updateTraceColors(traceInfo) {\n    if (traceInfo.isImage) {\n        let colors = [];\n        let colorScale = traceInfo.colorScale;\n        const colorMapper = rgb => rgb.formatHex();\n        for (let i = 0, n = traceInfo.npoints; i < n; i++) {\n            let rgb = color(colorScale(traceInfo.values[i]));\n            colors.push(colorMapper(rgb));\n        }\n        traceInfo.colors = colors;\n    } else {\n        traceInfo.colors = getColors(traceInfo);\n    }\n}\n\n\n/**\n * Computes the rank using the given index array. The index array can be\n * obtained from the indexSort method. Does not handle ties.\n *\n */\nexport function rankIndexArray(index) {\n    const n = index.length;\n    const rank = new Uint32Array(n);\n    for (let j = 0; j < n; j++) {\n        rank[index[j]] = j + 1;\n    }\n    return rank;\n};\n\nexport function indexSort(array, ascending) {\n    const pairs = [];\n    for (let i = 0, length = array.length; i < length; i++) {\n        pairs.push({\n            value: array[i],\n            index: i\n        });\n    }\n    return indexSortPairs(pairs, ascending);\n};\n\nfunction indexSortPairs(array, ascending) {\n    if (ascending) {\n        array.sort(function (a, b) {\n            return (a.value < b.value ? -1 : (a.value === b.value ? (a.index < b.index ? -1 : 1) : 1));\n        });\n    } else {\n        array.sort(function (a, b) {\n            return (a.value < b.value ? 1 : (a.value === b.value ? (a.index < b.index ? 1 : -1) : -1));\n        });\n    }\n    const indices = new Uint32Array(array.length);\n    for (let i = 0, n = array.length; i < n; i++) {\n        indices[i] = array[i].index;\n    }\n    return indices;\n};\n\nexport function randomSeq(n, start = 0) {\n    const indices = new Uint32Array(n);\n    for (let i = 0; i < n; i++, start++) {\n        indices[i] = start;\n    }\n    shuffle(indices);\n    return indices;\n}\n\n/**\n * Computes the False Discovery Rate using the BH procedure.\n *\n * @param nominalPValues\n *            Array of nominal p-values.\n */\nexport function fdr(nominalPValues) {\n    const size = nominalPValues.length;\n    const pValueIndices = indexSort(nominalPValues, true);\n    const ranks = rankIndexArray(pValueIndices);\n\n    // check for ties\n    for (let i = pValueIndices.length - 1; i > 0; i--) {\n        const bigPValue = nominalPValues[pValueIndices[i]];\n        const smallPValue = nominalPValues[pValueIndices[i - 1]];\n        if (bigPValue === smallPValue) {\n            ranks[pValueIndices[i - 1]] = ranks[pValueIndices[i]];\n        }\n    }\n\n    const fdr = new Float32Array(size);\n    for (let i = 0; i < size; i++) {\n        const rank = ranks[i];\n        const p = nominalPValues[i];\n        fdr[i] = (p * size) / rank;\n    }\n\n    // ensure fdr is monotonically decreasing\n    const pIndices = indexSort(nominalPValues, false);\n    for (let i = 0; i < pIndices.length - 1; i++) {\n        const highIndex = pIndices[i];\n        const lowIndex = pIndices[i + 1];\n        fdr[lowIndex] = Math.min(fdr[lowIndex], fdr[highIndex]);\n    }\n    for (let i = 0; i < size; i++) {\n        fdr[i] = Math.min(fdr[i], 1);\n    }\n    return fdr;\n};\n\nexport function isPointInside(point, vs) {\n    // ray-casting algorithm based on\n    // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n    const x = point.x, y = point.y;\n\n    let inside = false;\n    for (let i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        const xi = vs[i].x, yi = vs[i].y;\n        const xj = vs[j].x, yj = vs[j].y;\n\n        const intersect = ((yi > y) != (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) {\n            inside = !inside;\n        }\n    }\n\n    return inside;\n}\n\n\nexport function arrayToSvgPath(lassoPathArray) {\n    if (lassoPathArray.length > 1) {\n        lassoPathArray = simplify(lassoPathArray);\n    }\n    let svgPath = 'M ' + lassoPathArray[0].x + ' ' + lassoPathArray[0].y;\n    for (let i = 1; i < lassoPathArray.length; i++) {\n        svgPath += ' L ' + lassoPathArray[i].x + ' ' + lassoPathArray[i].y;\n    }\n    svgPath += ' Z';\n    return svgPath;\n}\n\nexport function getRgbScale() {\n    return scaleLinear().domain([0, 255]).range([0, 1]);\n}\n\nexport function fixInterpolatorName(name) {\n    if (!name.startsWith(\"interpolate\")) {\n        name = \"interpolate\" + name;\n    }\n    return name;\n}\n\nexport function getInterpolator(name) {\n    return scaleChromatic[fixInterpolatorName(name)];\n}\n\nexport function convertIndicesToBins(points, bins) {\n    let selectedBins = [];\n    for (let i = 0, n = points.length; i < n; i++) {\n        selectedBins.push(bins[points[i]]);\n    }\n    return selectedBins;\n}\n\nexport function convertBinsToIndices(bins, selectedBins) {\n    let points = [];\n    selectedBins = new Set(selectedBins);\n    for (let i = 0, n = bins.length; i < n; i++) {\n        if (selectedBins.has(bins[i])) {\n            points.push(i);\n        }\n    }\n\n    return points;\n}\n\n// add to X, maintaining insertion order\nexport function addFeatureSetsToX(featureSets, X) {\n    const uniqueX = new Set(X);\n    featureSets.forEach(featureSet => {\n        let features = featureSet.features;\n        if (features) {\n            features.forEach(feature => {\n                if (!uniqueX.has(feature)) {\n                    X.push(feature);\n                    uniqueX.add(feature);\n                }\n            });\n        }\n\n    });\n}\n\nexport function getFeatureSets(markers, featureSetIds) {\n    let featureSets = [];\n    featureSetIds.forEach(featureSetId => {\n        for (let i = 0; i < markers.length; i++) {\n            if (markers[i].id === featureSetId) {\n                featureSets.push(markers[i]);\n                break;\n            }\n        }\n    });\n    return featureSets;\n}\n\nexport function splitSearchTokens(tokens) {\n    let X = [];\n    let obs = [];\n    let obsCat = [];\n    let featureSets = [];\n    tokens.forEach(token => {\n        if (token.type === 'X') {\n            X.push(token.value);\n        } else if (token.type === 'obs') {\n            obs.push(token.value);\n        } else if (token.type === 'obsCat') {\n            obsCat.push(token.value);\n        } else if (token.type === 'featureSet') {\n            featureSets.push(token.value);\n        } else {\n            console.log('Unknown type: ' + token);\n        }\n    });\n    return {X: X, obs: obs, obsCat: obsCat, featureSets: featureSets};\n}\n","import {color} from 'd3-color';\nimport {makeStyles, ScatterPlot, ScatterPlotVisualizerSprites, ScatterPlotVisualizerSvgLabels} from 'scatter-gl';\nimport {Color, OrthographicCamera, Vector3} from 'three';\nimport {getVisualizer} from './ScatterChartThree';\nimport {getRgbScale, indexSort, randomSeq, rankIndexArray} from './util';\n\nexport const POINT_VISUALIZER_ID = 'SPRITES';\n\nexport const LABELS_VISUALIZER_ID = 'SVG_LABELS';\n\nfunction scaleLinear(value, domain, range) {\n    const domainDifference = domain[1] - domain[0];\n    const rangeDifference = range[1] - range[0];\n\n    const percentDomain = (value - domain[0]) / domainDifference;\n    return percentDomain * rangeDifference + range[0];\n}\n\n\nexport function getScaleFactor(size) {\n    const ORTHO_CAMERA_FRUSTUM_HALF_EXTENT = 1.2;\n    const aspectRatio = size.width / size.height;\n    let left = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let right = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let bottom = -ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    let top = ORTHO_CAMERA_FRUSTUM_HALF_EXTENT;\n    // Scale up the larger of (w, h) to match the aspect ratio.\n    if (aspectRatio > 1) {\n        left *= aspectRatio;\n        right *= aspectRatio;\n    } else {\n        top /= aspectRatio;\n        bottom /= aspectRatio;\n    }\n    let camera = new OrthographicCamera(\n        left,\n        right,\n        top,\n        bottom,\n        -1000,\n        1000\n    );\n    camera.up = new Vector3(0, 0, 1);\n\n    camera.updateProjectionMatrix();\n    return camera.projectionMatrix.elements[0];\n}\n\nexport function createScatterPlot(containerElement, premultipliedAlpha, labels, interactive = true) {\n    const styles = makeStyles();\n    styles.label3D.fontSize = 40;\n\n    const scatterPlot = new ScatterPlot(containerElement, {\n        camera: {},\n        selectEnabled: false,\n        styles: styles,\n        interactive: interactive\n\n    }, premultipliedAlpha); // toDataUrl images are flipped on Safari when premultipliedAlpha is false\n    let visualizers = [new ScatterPlotVisualizerSprites(styles)];\n    if (labels) {\n        // visualizers.push(new ScatterPlotVisualizerCanvasLabels(containerElement, styles));\n        visualizers.push(new ScatterPlotVisualizerSvgLabels(containerElement, styles));\n    }\n    scatterPlot.setActiveVisualizers(visualizers);\n    return scatterPlot;\n}\n\nexport function getColors(trace) {\n    const RGBA_NUM_ELEMENTS = 4;\n    const rgbScale = getRgbScale();\n\n    let dst = 0;\n    let colorScale = trace.colorScale;\n    const n = trace.x.length;\n    const colors = new Float32Array(n * RGBA_NUM_ELEMENTS);\n\n    for (let i = 0; i < n; ++i) {\n        let c = color(colorScale(trace.values[i]));\n        colors[dst++] = rgbScale(c.r);\n        colors[dst++] = rgbScale(c.g);\n        colors[dst++] = rgbScale(c.b);\n        colors[dst++] = 1;\n    }\n    return colors;\n}\n\nexport function getPositions(trace) {\n    const SCATTER_PLOT_CUBE_LENGTH = 2;\n    let xExtent = [Infinity, -Infinity];\n    let yExtent = [Infinity, -Infinity];\n    let zExtent = [Infinity, -Infinity];\n    const npoints = trace.x.length;\n    const is3d = trace.z != null;\n    let ranks;\n    if (!is3d) {\n        ranks = !trace.isCategorical ? rankIndexArray(indexSort(trace.values, true)) : randomSeq(trace.values.length, 1);\n        // ranks go from 1 to values.length. Higher rank means higher value.\n        zExtent[0] = 0;\n        zExtent[1] = 1;\n    }\n    // Determine max and min of each axis of our data.\n    for (let i = 0; i < npoints; i++) {\n        const x = trace.x[i];\n        if (x < xExtent[0]) {\n            xExtent[0] = x;\n        }\n        if (x > xExtent[1]) {\n            xExtent[1] = x;\n        }\n\n        const y = trace.y[i];\n        if (y < yExtent[0]) {\n            yExtent[0] = y;\n        }\n        if (y > yExtent[1]) {\n            yExtent[1] = y;\n        }\n        if (is3d) {\n            const z = trace.z[i];\n            if (z < zExtent[0]) {\n                zExtent[0] = z;\n            }\n            if (z > zExtent[1]) {\n                zExtent[1] = z;\n            }\n        }\n    }\n\n    const getRange = (extent) => Math.abs(extent[1] - extent[0]);\n    const xRange = getRange(xExtent);\n    const yRange = getRange(yExtent);\n    const zRange = getRange(zExtent);\n    const maxRange = Math.max(xRange, yRange, zRange);\n    const halfCube = SCATTER_PLOT_CUBE_LENGTH / 2;\n    const makeScaleRange = (range, base) => [\n        -base * (range / maxRange),\n        base * (range / maxRange),\n    ];\n    const xScale = makeScaleRange(xRange, halfCube);\n    const yScale = makeScaleRange(yRange, halfCube);\n    const zScale = makeScaleRange(zRange, halfCube);\n\n    const positions = new Float32Array(npoints * 3);\n    let dst = 0;\n\n    for (let i = 0; i < npoints; i++) {\n\n        positions[dst++] = scaleLinear(trace.x[i], xExtent, xScale);\n        positions[dst++] = scaleLinear(trace.y[i], yExtent, yScale);\n        positions[dst++] = scaleLinear(is3d ? trace.z[i] : ranks[i] / (ranks.length + 1), zExtent, zScale);\n    }\n    return positions;\n\n}\n\nexport function getCategoryLabelsPositions(traceInfo, categoricalNames) {\n    const categoryToPosition = {};\n    let ncategories = 0;\n    const isImage = traceInfo.isImage;\n    for (let i = 0, j = 0; i < traceInfo.npoints; i++, j += 3) {\n        let value = traceInfo.values[i];\n        let p = categoryToPosition[value];\n        if (p === undefined) {\n            p = {x: [], y: [], z: []};\n            categoryToPosition[value] = p;\n            ncategories++;\n        }\n        p.count++;\n        if (isImage) {\n            p.x.push(traceInfo.x[i]);\n            p.y.push(traceInfo.y[i]);\n        } else {\n            p.x.push(traceInfo.positions[j]);\n            p.y.push(traceInfo.positions[j + 1]);\n            p.z.push(traceInfo.positions[j + 2]);\n        }\n    }\n    let labelStrings = [];\n    let labelPositions = new Float32Array(ncategories * 3);\n    let positionIndex = 0;\n    let categoryObject = categoricalNames[traceInfo.name];\n    if (categoryObject === undefined) {\n        categoryObject = {};\n    }\n    for (let category in categoryToPosition) {\n        let renamedCategory = categoryObject[category];\n        if (renamedCategory !== undefined) {\n            labelStrings.push(renamedCategory);\n        } else {\n            labelStrings.push(category);\n        }\n        let p = categoryToPosition[category];\n        p.x.sort((a, b) => a - b);\n        p.y.sort((a, b) => a - b);\n        p.z.sort((a, b) => a - b);\n        const mid = p.x.length / 2;\n        labelPositions[positionIndex] = mid % 1 ? p.x[mid - 0.5] : (p.x[mid - 1] + p.x[mid]) / 2;\n        labelPositions[positionIndex + 1] = mid % 1 ? p.y[mid - 0.5] : (p.y[mid - 1] + p.y[mid]) / 2;\n        labelPositions[positionIndex + 2] = mid % 1 ? p.z[mid - 0.5] : (p.z[mid - 1] + p.z[mid]) / 2;\n        positionIndex += 3;\n    }\n\n    return {labels: labelStrings, positions: labelPositions};\n}\n\nexport function updateScatterChart(scatterPlot, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, pointSize, categoricalNames = {}, chartOptions) {\n    const colors = traceInfo.colors;\n    let positions = traceInfo.positions;\n\n    const npoints = traceInfo.npoints;\n    const isSelectionEmpty = selection.size === 0;\n\n    for (let i = 0, j = 3, k = 2; i < npoints; i++, j += 4, k += 3) {\n        const isSelected = isSelectionEmpty || selection.has(i);\n        colors[j] = isSelected ? markerOpacity : unselectedMarkerOpacity;\n    }\n    scatterPlot.scene.background = chartOptions.darkMode ? new Color(\"rgb(0, 0, 0)\") : null;\n    scatterPlot.setDimensions(traceInfo.dimensions);\n    let spriteVisualizer = getVisualizer(scatterPlot, POINT_VISUALIZER_ID);\n    spriteVisualizer.styles.fog.enabled = chartOptions.showFog;\n    const axes = scatterPlot.scene.getObjectByName('axes');\n    if (axes) {\n        axes.visible = chartOptions.showAxis;\n    }\n    scatterPlot.setPointColors(colors);\n    scatterPlot.setPointPositions(positions);\n\n    // const {scaleDefault, scaleSelected, scaleHover} = scatterPlot.styles.point;\n\n    const scale = new Float32Array(traceInfo.npoints);\n    scale.fill(pointSize);\n    scatterPlot.setPointScaleFactors(scale);\n\n    const showLabels = chartOptions.showLabels && traceInfo.isCategorical;\n    const labelsVisualizer = getVisualizer(scatterPlot, LABELS_VISUALIZER_ID);\n    if (labelsVisualizer) {\n        labelsVisualizer.labelsActive = showLabels;\n        if (showLabels) {\n            const labelsPositions = getCategoryLabelsPositions(traceInfo, categoricalNames);\n            labelsVisualizer.fillStyle = chartOptions.darkMode ? 'white' : 'black';\n            labelsVisualizer.shadowColor = chartOptions.darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n            labelsVisualizer.shadowStroke = chartOptions.labelStrokeWidth;\n            labelsVisualizer.setLabels(labelsPositions.labels, labelsPositions.positions);\n            labelsVisualizer.font = 'bold ' + chartOptions.labelFontSize + 'px Roboto Condensed';\n        }\n    }\n\n    scatterPlot.render();\n}\n","import {Typography} from '@material-ui/core';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {scaleLinear} from 'd3-scale';\nimport {bind} from 'lodash';\nimport React from 'react';\nimport {Vector3, Vector4} from 'three';\nimport {getEmbeddingKey} from './actions';\nimport ChartToolbar from './ChartToolbar';\nimport {saveImage} from './ChartUtil';\nimport {numberFormat} from './formatters';\nimport {createScatterPlot, getCategoryLabelsPositions, POINT_VISUALIZER_ID, updateScatterChart} from './ThreeUtil';\nimport {isPointInside} from './util';\n\nfunction clamp(x, min_v, max_v) {\n    return Math.min(Math.max(x, min_v), max_v);\n}\n\nfunction smoothstep(edge0, edge1, x) {\n    const t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n    return t * t * (3 - 2 * t);\n};\n\nfunction mix(x, y, a) {\n    return x * (1.0 - a) + y * a;\n}\n\nexport function drawLabels(context, labelsPositions, chartOptions, chartSize, camera) {\n    const pos = new Vector3();\n    context.fillStyle = chartOptions.darkMode ? 'white' : 'black';\n    context.strokeStyle = chartOptions.darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n    context.lineWidth = chartOptions.labelStrokeWidth;\n    context.textAlign = 'center';\n    context.textBaseline = \"middle\";\n    const width = chartSize.width;\n    const height = chartSize.height;\n    const widthHalf = width / 2;\n    const heightHalf = height / 2;\n    for (let i = 0, k = 0; i < labelsPositions.labels.length; i++, k += 3) {\n        pos.x = labelsPositions.positions[k];\n        pos.y = labelsPositions.positions[k + 1];\n        pos.z = labelsPositions.positions[k + 2];\n        pos.project(camera);\n        pos.x = (pos.x * widthHalf) + widthHalf;\n        pos.y = -(pos.y * heightHalf) + heightHalf;\n\n        context.strokeText(labelsPositions.labels[i], pos.x, pos.y);\n        context.fillText(labelsPositions.labels[i], pos.x, pos.y);\n    }\n}\n\nexport function getVisualizer(scatterPlot, id) {\n    for (let i = 0; i < scatterPlot.visualizers.length; i++) {\n        if (scatterPlot.visualizers[i].id === id) {\n            return scatterPlot.visualizers[i];\n        }\n    }\n}\n\nconst styles = theme => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(.4),\n        },\n        '& > .MuiIconButton-root': {\n            padding: 0,\n        },\n        '& > .cirro-active': {\n            fill: 'rgb(220, 0, 78)',\n            color: 'rgb(220, 0, 78)',\n        },\n        '& > .cirro-inactive': {\n            fill: 'rgba(0, 0, 0, 0.26)',\n            color: 'rgba(0, 0, 0, 0.26)'\n        },\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        display: 'inline-block',\n        verticalAlign: 'top',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    }\n});\n\nclass ScatterChartThree extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.containerElementRef = React.createRef();\n        this.tooltipElementRef = React.createRef();\n        this.scatterPlot = null;\n        this.lastHoverIndex = -1;\n        this.state = {forceUpdate: false};\n\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.chartSize !== this.props.chartSize) {\n            this.scatterPlot.resize();\n        }\n        this.init();\n        this.draw();\n    }\n\n    componentDidMount() {\n        this.init();\n        this.draw(); // TODO fix 2x draw\n        this.draw();\n        if (this.props.chartOptions.camera) {\n            this.scatterPlot.updateFromCameraDef(this.props.chartOptions.camera);\n            this.props.chartOptions.camera = null;\n            this.draw();\n        }\n    }\n\n    componentWillUnmount() {\n        // if (this.scatterGL != null) {\n        //     this.scatterGL.dispose();\n        // }\n    }\n\n\n    calculatePointSize(traceInfo) {\n        const n = traceInfo.npoints;\n        const SCALE = 200;\n        const LOG_BASE = 8;\n        const DIVISOR = 1.5;\n        // Scale point size inverse-logarithmically to the number of points.\n        const pointSize = SCALE / Math.log(n) / Math.log(LOG_BASE);\n        return traceInfo.dimensions === 3 ? pointSize : pointSize / DIVISOR;\n    }\n\n    drawContext(context, chartSize, format) {\n        const {traceInfo, markerOpacity, unselectedMarkerOpacity, selection, categoricalNames, chartOptions} = this.props;\n        const showLabels = this.props.chartOptions.showLabels && traceInfo.isCategorical;\n\n        const pointSize = this.calculatePointSize(traceInfo);\n        let scaleFactor = this.props.pointSize;\n        const PI2 = 2 * Math.PI;\n        const colors = traceInfo.colors;\n        const positions = traceInfo.positions;\n        const camera = this.scatterPlot.camera;\n        const width = chartSize.width;\n        const height = chartSize.height;\n        if (chartOptions.darkMode) {\n            context.fillStyle = 'black';\n            context.fillRect(0, 0, width, height);\n        }\n        const widthHalf = width / 2;\n        const heightHalf = height / 2;\n        const colorScale = scaleLinear().domain([0, 1]).range([0, 255]);\n        const npoints = traceInfo.npoints;\n\n        const is3d = traceInfo.dimensions === 3;\n        let outputPointSize = 0;\n        let fog = this.scatterPlot.scene.fog;\n        let spriteVisualizer = getVisualizer(this.scatterPlot, POINT_VISUALIZER_ID);\n        if (!is3d) {\n            const PI = 3.1415926535897932384626433832795;\n            const minScale = 0.1;  // minimum scaling factor\n            const outSpeed = 2.0;  // shrink speed when zooming out\n            const outNorm = (1. - minScale) / Math.atan(outSpeed);\n            const maxScale = 15.0;  // maximum scaling factor\n            const inSpeed = 0.02;  // enlarge speed when zooming in\n            const zoomOffset = 0.3;  // offset zoom pivot\n            let zoom = camera.projectionMatrix.elements[0] + zoomOffset;  // zoom pivot\n            let scale = zoom < 1. ? 1. + outNorm * Math.atan(outSpeed * (zoom - 1.)) :\n                1. + 2. / PI * (maxScale - 1.) * Math.atan(inSpeed * (zoom - 1.));\n            outputPointSize = pointSize * scale;\n        }\n        const pos = new Vector3();\n        let cameraSpacePos = new Vector4();\n        // vec4 cameraSpacePos = modelViewMatrix * vec4(position, 1.0);\n        // Project vertex in camera-space to screen coordinates using the camera's\n        // projection matrix.\n        // gl_Position = projectionMatrix * cameraSpacePos;\n\n\n        let object = spriteVisualizer.points;\n        let modelViewMatrix = object.modelViewMatrix.clone();\n        modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n        let gl_PointSize = (outputPointSize * scaleFactor) / 4;\n        const showFog = chartOptions.showFog;\n        const isSelectionEmpty = selection.size === 0;\n        for (let i = 0, j = 0, k = 0; i < npoints; i++, j += 4, k += 3) {\n            const isSelected = isSelectionEmpty || selection.has(i);\n            pos.x = positions[k];\n            pos.y = positions[k + 1];\n            pos.z = positions[k + 2];\n            pos.project(camera);\n\n            let r = colors[j];\n            let g = colors[j + 1];\n            let b = colors[j + 2];\n            let a = isSelected ? markerOpacity : unselectedMarkerOpacity;\n            if (is3d) {\n                cameraSpacePos.x = positions[k];\n                cameraSpacePos.y = positions[k + 1];\n                cameraSpacePos.z = positions[k + 2];\n                cameraSpacePos.w = 1;\n                cameraSpacePos.applyMatrix4(modelViewMatrix);\n                outputPointSize = -pointSize / cameraSpacePos.z;\n                gl_PointSize = (outputPointSize * scaleFactor) / 4;\n                if (showFog) {\n                    const fogDepth = pointSize / outputPointSize * 1.2;\n                    const fogFactor = smoothstep(fog.near, fog.far, fogDepth);\n                    r = mix(r, fog.color.r, fogFactor);\n                    g = mix(g, fog.color.g, fogFactor);\n                    b = mix(b, fog.color.b, fogFactor);\n                }\n            }\n            pos.x = (pos.x * widthHalf) + widthHalf;\n            pos.y = -(pos.y * heightHalf) + heightHalf;\n\n            r = Math.round(colorScale(r));\n            g = Math.round(colorScale(g));\n            b = Math.round(colorScale(b));\n\n            context.fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n            context.beginPath();\n\n            context.arc(pos.x, pos.y, gl_PointSize, 0, PI2);\n            context.closePath();\n            context.fill();\n        }\n        if (showLabels) {\n            const labelsPositions = getCategoryLabelsPositions(traceInfo, categoricalNames);\n            let font = format === 'svg' ? 'serif' : 'Roboto Condensed';\n            context.font = 'bold ' + chartOptions.labelFontSize + 'px ' + font;\n            drawLabels(context, labelsPositions, chartOptions, chartSize, camera);\n        }\n    }\n\n    // onCopyImage = (event) => {\n    //     const size = this.chartSize;\n    //     const canvas = document.createElement('canvas');\n    //     canvas.width = size.width; // * window.devicePixelRatio;\n    //     canvas.height = size.height; // * window.devicePixelRatio;\n    //     const context = canvas.getContext('2d');\n    //     this.drawContext(context, this.chartSize);\n    //     const url = canvas.toDataURL();\n    //     setClipboardData([{\n    //         format: 'image/png',\n    //         data: '<img src=\"' + url + '\">'\n    //     }]);\n    // };\n\n\n    onSaveImage = (format) => {\n        const {traceInfo, chartSize} = this.props;\n        saveImage(traceInfo, chartSize, bind(this.drawContext, this), format);\n    };\n\n\n    onEditSelection = () => {\n        this.props.chartOptions.editSelection = !this.props.chartOptions.editSelection;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    onShowLabels = () => {\n        this.props.chartOptions.showLabels = !this.props.chartOptions.showLabels;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    onShowAxis = () => {\n        const axes = this.scatterPlot.scene.getObjectByName('axes');\n        this.props.chartOptions.showAxis = !this.props.chartOptions.showAxis;\n        if (axes) {\n            axes.visible = this.props.chartOptions.showAxis;\n        }\n\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n    onShowFog = () => {\n        let spriteVisualizer = getVisualizer(this.scatterPlot, POINT_VISUALIZER_ID);\n        this.props.chartOptions.showFog = !this.props.chartOptions.showFog;\n        spriteVisualizer.styles.fog.enabled = this.props.chartOptions.showFog;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    onDragMode = (mode) => {\n\n        if (mode === 'pan') {\n            this.scatterPlot.setInteractionMode('PAN');\n        } else if (mode === 'select') {\n            this.scatterPlot.setInteractionMode('SELECT');\n            this.scatterPlot.rectangleSelector.setSelectionMode('BOX');\n        } else if (mode === 'lasso') {\n            this.scatterPlot.rectangleSelector.setSelectionMode('LASSO');\n            this.scatterPlot.setInteractionMode('SELECT');\n        }\n        this.props.chartOptions.dragmode = mode;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n    onToggleAnimation = () => {\n        if (this.scatterPlot.orbitIsAnimating()) {\n            this.scatterPlot.stopOrbitAnimation();\n            this.props.chartOptions.animating = false;\n        } else {\n            this.scatterPlot.startOrbitAnimation();\n            this.props.chartOptions.animating = true;\n        }\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    init() {\n        if (this.scatterPlot == null) {\n            const containerElement = this.containerElementRef.current;\n            this.scatterPlot = createScatterPlot(containerElement, window.ApplePaySession, true);\n            if (this.props.chartOptions.dragmode === 'pan') {\n                this.scatterPlot.setInteractionMode('PAN');\n            } else if (this.props.chartOptions.dragmode === 'select') {\n                this.scatterPlot.setInteractionMode('SELECT');\n                this.scatterPlot.rectangleSelector.setSelectionMode('BOX');\n            } else if (this.props.chartOptions.dragmode === 'lasso') {\n                this.scatterPlot.setInteractionMode('SELECT');\n                this.scatterPlot.rectangleSelector.setSelectionMode('LASSO');\n\n            }\n            const axes = this.scatterPlot.scene.getObjectByName('axes');\n            if (axes) {\n                axes.visible = this.props.chartOptions.showAxis;\n            }\n            let spriteVisualizer = getVisualizer(this.scatterPlot, POINT_VISUALIZER_ID);\n            spriteVisualizer.styles.fog.enabled = this.props.chartOptions.showFog;\n            this.scatterPlot.hoverCallback = (point) => {\n                if (point == null) {\n                    this.tooltipElementRef.current.innerHTML = ' ';\n                } else {\n                    const traceInfo = this.props.traceInfo;\n                    const positions = traceInfo.positions;\n                    const camera = this.scatterPlot.camera;\n                    const widthHalf = this.props.chartSize.width / 2;\n                    const heightHalf = this.props.chartSize.height / 2;\n                    const pos = new Vector3();\n                    let selectedIndex = -1;\n                    const tolerance = 2;\n                    if (this.lastHoverIndex !== -1) {\n                        pos.x = positions[this.lastHoverIndex * 3];\n                        pos.y = positions[this.lastHoverIndex * 3 + 1];\n                        pos.z = positions[this.lastHoverIndex * 3 + 2];\n                        pos.project(camera);\n                        pos.x = (pos.x * widthHalf) + widthHalf;\n                        pos.y = -(pos.y * heightHalf) + heightHalf;\n                        if (Math.abs(pos.x - point.x) <= tolerance && Math.abs(pos.y - point.y) <= tolerance) {\n                            selectedIndex = this.lastHoverIndex;\n                        }\n                    }\n\n                    if (selectedIndex === -1) {\n                        for (let i = 0, j = 0, k = 0; i < traceInfo.npoints; i++, j += 4, k += 3) {\n                            pos.x = positions[k];\n                            pos.y = positions[k + 1];\n                            pos.z = positions[k + 2];\n                            pos.project(camera);\n                            pos.x = (pos.x * widthHalf) + widthHalf;\n                            pos.y = -(pos.y * heightHalf) + heightHalf;\n                            if (Math.abs(pos.x - point.x) <= tolerance && Math.abs(pos.y - point.y) <= tolerance) {\n                                selectedIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    this.lastHoverIndex = selectedIndex;\n                    if (selectedIndex !== -1) {\n                        let value = traceInfo.values[selectedIndex];\n                        let categoryObject = this.props.categoricalNames[traceInfo.name];\n                        if (categoryObject) {\n                            let renamedValue = categoryObject[value];\n                            if (renamedValue != null) {\n                                value = renamedValue;\n                            }\n                        }\n\n                        if (typeof value === 'number') {\n                            value = numberFormat(value);\n                        }\n                        this.tooltipElementRef.current.innerHTML = '' + value;\n                    } else {\n                        this.tooltipElementRef.current.innerHTML = ' ';\n                    }\n\n                }\n\n            };\n            this.scatterPlot.lassoCallback = (points) => {\n                const traceInfo = this.props.traceInfo;\n                const positions = traceInfo.positions;\n                const camera = this.scatterPlot.camera;\n                const widthHalf = this.props.chartSize.width / 2;\n                const heightHalf = this.props.chartSize.height / 2;\n                const pos = new Vector3();\n                const selectedIndices = [];\n\n                for (let i = 0, j = 0, k = 0; i < traceInfo.npoints; i++, j += 4, k += 3) {\n                    pos.x = positions[k];\n                    pos.y = positions[k + 1];\n                    pos.z = positions[k + 2];\n                    pos.project(camera);\n                    pos.x = (pos.x * widthHalf) + widthHalf;\n                    pos.y = -(pos.y * heightHalf) + heightHalf;\n                    if (isPointInside(pos, points)) {\n                        selectedIndices.push(i);\n                    }\n                }\n\n                if (selectedIndices.length === 0) {\n                    this.props.onDeselect({name: getEmbeddingKey(traceInfo.embedding)});\n                } else {\n                    this.props.onSelected({\n                        name: getEmbeddingKey(traceInfo.embedding),\n                        clear: !this.props.chartOptions.editSelection,\n                        value: {basis: traceInfo.embedding, points: selectedIndices}\n                    });\n                }\n            };\n            this.scatterPlot.boxCallback = (rect) => {\n                if (this.scatterPlot.interactionMode === 'PAN') {\n                    return;\n                }\n                const traceInfo = this.props.traceInfo;\n                const positions = traceInfo.positions;\n                const camera = this.scatterPlot.camera;\n                const widthHalf = this.props.chartSize.width / 2;\n                const heightHalf = this.props.chartSize.height / 2;\n                const pos = new Vector3();\n                const selectedPoints = [];\n\n                for (let i = 0, j = 0, k = 0; i < traceInfo.npoints; i++, j += 4, k += 3) {\n                    pos.x = positions[k];\n                    pos.y = positions[k + 1];\n                    pos.z = positions[k + 2];\n                    pos.project(camera);\n                    pos.x = (pos.x * widthHalf) + widthHalf;\n                    pos.y = -(pos.y * heightHalf) + heightHalf;\n                    if (pos.x >= rect.x && pos.x <= (rect.x + rect.width) && pos.y >= rect.y && pos.y <= (rect.y + rect.height)) {\n                        selectedPoints.push(i);\n                    }\n                }\n\n                if (selectedPoints.length === 0) {\n                    this.props.onDeselect({name: getEmbeddingKey(traceInfo.embedding)});\n                } else {\n                    this.props.onSelected({\n                        name: getEmbeddingKey(traceInfo.embedding),\n                        clear: !this.props.chartOptions.editSelection,\n                        value: {basis: traceInfo.embedding, points: selectedPoints}\n                    });\n                }\n            };\n            const canvas = this.containerElementRef.current.querySelector('canvas');\n            canvas.style.outline = '0px';\n            const webglcontextlost = (e) => {\n                e.preventDefault();\n                this.scatterPlot = null;\n            };\n            const webglcontextrestored = (e) => {\n                this.setState({forceUpdate: !this.state.forceUpdate});\n            };\n            canvas.addEventListener('webglcontextlost', webglcontextlost);\n            canvas.addEventListener('webglcontextrestored', webglcontextrestored);\n        }\n\n    }\n\n\n    draw() {\n        const {traceInfo, markerOpacity, unselectedMarkerOpacity, selection, pointSize, chartOptions, categoricalNames} = this.props;\n        updateScatterChart(this.scatterPlot, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, pointSize,\n            categoricalNames, chartOptions);\n    }\n\n\n    render() {\n        return <React.Fragment>\n            <div className={this.props.classes.root}>\n                <ChartToolbar\n                    dragmode={this.props.chartOptions.dragmode}\n                    editSelection={this.props.chartOptions.editSelection}\n                    showLabels={this.props.chartOptions.showLabels}\n                    onMoreOptions={this.props.onMoreOptions}\n                    onGallery={this.props.onGallery}\n                    animating={this.props.chartOptions.animating}\n                    showFog={this.props.chartOptions.showFog}\n                    onShowFog={this.onShowFog}\n                    is3d={this.props.traceInfo && this.props.traceInfo.z != null}\n                    toggleAnimation={this.onToggleAnimation}\n                    onSaveImage={this.onSaveImage}\n                    onShowLabels={this.onShowLabels}\n                    onDragMode={this.onDragMode}\n                    onCopyImage={this.onCopyImage}\n                    onEditSelection={this.onEditSelection}\n                    onShowAxis={this.onShowAxis}\n                    showAxis={this.props.chartOptions.showAxis}\n                >\n                </ChartToolbar>\n                <Typography color=\"textPrimary\" ref={this.tooltipElementRef} style={{\n                    display: 'inline-block',\n                    paddingLeft: 5,\n                    verticalAlign: 'top'\n                }}>&nbsp;</Typography>\n            </div>\n\n            <div style={{\n                display: 'inline-block',\n                width: this.props.chartSize.width,\n                height: this.props.chartSize.height\n            }}\n                 ref={this.containerElementRef}>\n            </div>\n        </React.Fragment>;\n    }\n}\n\nexport default withStyles(styles)(ScatterChartThree);\n\n\n","import {scaleOrdinal, scaleSequential} from 'd3-scale';\nimport {schemeCategory10, schemePaired} from 'd3-scale-chromatic';\nimport {saveAs} from 'file-saver';\nimport {isEqual, uniqBy} from 'lodash';\nimport OpenSeadragon from 'openseadragon';\nimport isPlainObject from 'react-redux/lib/utils/isPlainObject';\nimport CustomError from '../CustomError';\nimport {JsonDataset} from '../JsonDataset';\nimport {RestDataset} from '../RestDataset';\nimport {RestServerApi} from '../RestServerApi';\n\n\nimport {getPositions} from '../ThreeUtil';\n\nimport {\n    addFeatureSetsToX,\n    CATEGORY_20B,\n    CATEGORY_20C,\n    convertBinsToIndices,\n    convertIndicesToBins,\n    getFeatureSets,\n    getInterpolator,\n    indexSort,\n    randomSeq,\n    splitSearchTokens,\n    updateTraceColors\n} from '../util';\n\n// export const API = 'http://localhost:5000/api';\nexport const API = 'api';\n\nconst authScopes = [\n    'email',\n    // 'profile',\n    // 'https://www.googleapis.com/auth/userinfo.profile',\n    // 'https://www.googleapis.com/auth/contacts.readonly',\n    // 'https://www.googleapis.com/auth/devstorage.full_control',\n];\nexport const SET_DOT_PLOT_INTERPOLATOR = 'SET_DOT_PLOT_INTERPOLATOR';\nexport const SET_CHART_OPTIONS = 'SET_CHART_OPTIONS';\nexport const SET_COMBINE_DATASET_FILTERS = 'SET_COMBINE_DATASET_FILTERS';\nexport const SET_DATASET_FILTERS = 'SET_DATASET_FILTERS'; // saved dataset filters\nexport const SET_UNSELECTED_MARKER_SIZE = 'SET_UNSELECTED_MARKER_SIZE';\nexport const SET_UNSELECTED_MARKER_SIZE_UI = 'SET_UNSELECTED_MARKER_SIZE_UI';\nexport const SET_PRIMARY_TRACE_KEY = 'SET_PRIMARY_TRACE_KEY';\nexport const SET_CHART_SIZE = 'SET_CHART_SIZE';\nexport const SET_PRIMARY_CHART_SIZE = 'SET_PRIMARY_CHART_SIZE';\nexport const SET_SERVER_INFO = \"SET_SERVER_INFO\";\nexport const SET_DATASET_FILTER = 'SET_DATASET_FILTER';\nexport const ADD_DATASET = 'ADD_DATASET';\nexport const DELETE_DATASET = 'DELETE_DATASET';\nexport const UPDATE_DATASET = 'UPDATE_DATASET';\nexport const SET_GLOBAL_FEATURE_SUMMARY = 'SET_GLOBAL_FEATURE_SUMMARY';\nexport const SET_SAVED_DATASET_STATE = 'SET_SAVED_DATASET_STATE';\n\nexport const SET_DOMAIN = 'SET_DOMAIN';\nexport const SET_CATEGORICAL_COLOR = 'SET_CATEGORICAL_COLOR';\nexport const SET_CATEGORICAL_NAME = 'SET_CATEGORICAL_NAME';\nexport const SET_MARKER_SIZE = 'SET_MARKER_SIZE';\nexport const SET_MARKER_OPACITY = 'SET_MARKER_OPACITY';\n\nexport const SET_EMBEDDING_CHART_SIZE = \"SET_EMBEDDING_CHART_SIZE\";\n\nexport const SET_UNSELECTED_MARKER_OPACITY = 'SET_UNSELECTED_MARKER_OPACITY';\n\n// update chart\n\nexport const SET_SELECTION = 'SET_SELECTION';\nexport const SET_FEATURE_SUMMARY = 'SET_FEATURE_SUMMARY';\nexport const SET_SAVED_DATASET_FILTER = 'SET_SAVED_DATASET_FILTER';\nexport const SET_SEARCH_TOKENS = 'SET_SEARCH_TOKENS';\n\nexport const SET_SELECTED_EMBEDDING = 'SET_SELECTED_EMBEDDING';\nexport const SET_NUMBER_OF_BINS = 'SET_NUMBER_OF_BINS';\nexport const SET_BIN_VALUES = 'SET_BIN_VALUES';\nexport const SET_BIN_SUMMARY = 'SET_BIN_SUMMARY';\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const SET_INTERPOLATOR = 'SET_INTERPOLATOR';\nexport const SET_POINT_SIZE = 'SET_POINT_SIZE';\n\n// update ui\nexport const SET_EMAIL = 'SET_EMAIL';\nexport const SET_USER = 'SET_USER';\nexport const SET_DATASET = 'SET_DATASET';\nexport const SET_MARKERS = 'SET_MARKERS';\nexport const SET_DIALOG = 'SET_DIALOG';\n\nexport const MORE_OPTIONS_DIALOG = 'MORE_OPTIONS_DIALOG';\nexport const EDIT_DATASET_DIALOG = 'EDIT_DATASET_DIALOG';\nexport const IMPORT_DATASET_DIALOG = 'IMPORT_DATASET_DIALOG';\nexport const SAVE_DATASET_FILTER_DIALOG = 'SAVE_DATASET_FILTER_DIALOG';\nexport const SAVE_FEATURE_SET_DIALOG = 'SAVE_FEATURE_SET_DIALOG';\nexport const HELP_DIALOG = 'HELP_DIALOG';\nexport const DELETE_DATASET_DIALOG = 'DELETE_DATASET_DIALOG';\n\nexport const SET_DATASET_CHOICES = 'SET_DATASET_CHOICES';\nexport const RESTORE_VIEW = 'RESTORE_VIEW';\n\nexport const SET_DOT_PLOT_DATA = 'SET_DOT_PLOT_DATA';\nexport const SET_SELECTED_DOT_PLOT_DATA = 'SET_SELECTED_DOT_PLOT_DATA';\n\nexport const SET_DOT_PLOT_SORT_ORDER = 'SET_DOT_PLOT_SORT_ORDER';\nexport const SET_EMBEDDING_DATA = 'SET_EMBEDDING_DATA';\n\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_TAB = 'SET_TAB';\n\nexport const SET_LOADING_APP = 'LOADING_APP';\nexport const SET_CACHED_DATA = 'SET_CACHED_DATA';\n\nexport const SET_NUMBER_OF_BINS_UI = 'SET_NUMBER_OF_BINS_UI';\nexport const SET_MARKER_SIZE_UI = 'SET_MARKER_SIZE_UI';\nexport const SET_MARKER_OPACITY_UI = 'SET_MARKER_OPACITY_UI';\nexport const SET_UNSELECTED_MARKER_OPACITY_UI = 'SET_UNSELECTED_MARKER_OPACITY_UI';\n\n\nfunction isEmbeddingBinned(embedding) {\n    return embedding.bin || embedding.precomputed;\n}\n\nexport function getEmbeddingKey(embedding) {\n    let fullName = embedding.name + '_' + embedding.dimensions;\n    if (embedding.bin || embedding.precomputed) {\n        fullName = fullName + '_' + embedding.nbins + '_' + embedding.agg;\n    }\n    return fullName;\n}\n\nexport function getTraceKey(traceInfo) {\n    return traceInfo.name + '_' + getEmbeddingKey(traceInfo.embedding);\n}\n\nfunction getEmbeddingJson(embedding) {\n    let value = {basis: embedding.name, ndim: embedding.dimensions};\n    if (embedding.precomputed) {\n        value.precomputed = true;\n    }\n    if (embedding.bin) {\n        value.nbins = embedding.nbins;\n        value.agg = embedding.agg;\n    }\n\n    return value;\n}\n\n\nfunction getUser() {\n    return function (dispatch, getState) {\n        getState().serverInfo.api.getUserPromise().then(user => dispatch(setUser(user)));\n    };\n}\n\nexport function initGapi() {\n    return function (dispatch, getState) {\n        dispatch(_setLoadingApp({loading: true, progress: 0}));\n        const startTime = new Date().getTime();\n        const approximateColdBootTime = 32;\n\n        function loadingAppProgress() {\n            if (getState().loadingApp.loading) {\n                let elapsed = (new Date().getTime() - startTime) / 1000;\n                let p = Math.min(100, 100 * (elapsed / approximateColdBootTime));\n                dispatch(_setLoadingApp({loading: true, progress: p}));\n                if (p < 100) {\n                    window.setTimeout(loadingAppProgress, 300);\n                }\n            }\n        }\n\n        window.setTimeout(loadingAppProgress, 500);\n\n        return fetch(API + '/server').then(result => result.json()).then(serverInfo => {\n            serverInfo.api = new RestServerApi();\n            if (serverInfo.clientId == null) {\n                serverInfo.clientId = '';\n            }\n            if (serverInfo.fancy == null) {\n                serverInfo.fancy = true;\n            }\n            dispatch(setServerInfo(serverInfo));\n            if (serverInfo.clientId === '') { // no login required\n\n\n                dispatch(_setLoadingApp({loading: false}));\n                dispatch(_setEmail(serverInfo.mode === 'server' ? '' : null));\n                if (serverInfo.mode === 'server') {\n                    dispatch(setUser({importer: true}));\n                }\n                dispatch(listDatasets()).then(() => {\n                    dispatch(_loadSavedView());\n                });\n\n\n            } else {\n                console.log((new Date().getTime() - startTime) / 1000 + \" startup time\");\n                let script = document.createElement('script');\n                script.type = 'text/javascript';\n                script.src = 'https://apis.google.com/js/api.js';\n                script.onload = (e) => {\n                    window.gapi.load('client:auth2', () => {\n                        window.gapi.client.init({\n                            clientId: serverInfo.clientId,\n                            scope: authScopes.join(' '),\n                        }).then(() => {\n                            dispatch(_setLoadingApp({loading: false, progress: 0}));\n                            dispatch(initLogin(true));\n                        });\n                    });\n                };\n                document.getElementsByTagName('head')[0].appendChild(script);\n            }\n        }).catch(err => {\n            console.log(err);\n            dispatch(_setLoadingApp({loading: false, progress: 0}));\n            handleError(dispatch, 'Unable to load app. Please try again.');\n        });\n    };\n}\n\nexport function logout() {\n    return function (dispatch, getState) {\n        window.gapi.auth2.getAuthInstance().signOut().then(() => {\n            dispatch({type: SET_EMAIL, payload: null});\n            dispatch(_setDataset(null));\n        });\n    };\n}\n\nexport function login() {\n    return function (dispatch, getState) {\n        window.gapi.auth2.getAuthInstance().signIn().then(e => {\n            dispatch(initLogin());\n        });\n    };\n}\n\nexport function openDatasetFilter(filterId) {\n    return function (dispatch, getState) {\n\n        dispatch(_setLoading(true));\n\n        getState().serverInfo.api.getDatasetFilterPromise(filterId, getState().dataset.id)\n            .then(result => {\n                result.id = filterId;\n                let filterValue = JSON.parse(result.value);\n                let datasetFilter = {};\n\n                filterValue.filters.forEach(item => {\n                    let filterOperation = item[1];\n                    let field = item[0];\n                    let slashIndex = field.indexOf('/');\n                    if (slashIndex !== -1) {\n                        field = field.substring(slashIndex + 1);\n                    }\n                    if (filterOperation === 'in') {\n                        datasetFilter[field] = item[2];\n                    } else {\n                        datasetFilter[field] = {operation: item[1], value: item[2]};\n                    }\n                });\n                dispatch(setDatasetFilter(datasetFilter));\n                dispatch(handleFilterUpdated());\n\n\n            }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve filter. Please try again.');\n        });\n    };\n}\n\nexport function deleteDatasetFilter(filterId) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteDatasetFilterPromise(filterId, getState().dataset.id)\n            .then(() => {\n                let datasetFilters = getState().datasetFilters;\n                for (let i = 0; i < datasetFilters.length; i++) {\n                    if (datasetFilters[i].id === filterId) {\n                        datasetFilters.splice(i, 1);\n                        break;\n                    }\n                }\n\n                dispatch(setDatasetFilters(datasetFilters.slice()));\n                dispatch(setMessage('Filter deleted'));\n\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete filter. Please try again.');\n        });\n    };\n}\n\nexport function deleteFeatureSet(id) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteFeatureSet(id, getState().dataset.id)\n            .then(result => {\n\n                let markers = getState().markers;\n                for (let i = 0; i < markers.length; i++) {\n                    if (markers[i].id === id) {\n                        markers.splice(i, 1);\n                        // remove from searchTokens\n                        break;\n                    }\n                }\n                dispatch(setMarkers(markers.slice()));\n                dispatch(setMessage('Set deleted'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete set. Please try again.');\n        });\n    };\n}\n\nexport function saveFeatureSet(payload) {\n    return function (dispatch, getState) {\n        const state = getState();\n        const searchTokens = state.searchTokens;\n        const splitTokens = splitSearchTokens(searchTokens);\n        let features = splitTokens.X;\n        const requestBody = {\n            ds_id: state.dataset.id,\n            name: payload.name,\n            features: features,\n            category: payload.category\n        };\n\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.upsertFeatureSet(requestBody, false)\n            .then(result => {\n\n                let markers = getState().markers;\n                markers.push({\n                    category: payload.category,\n                    name: payload.name,\n                    features: features,\n                    id: result.id\n                });\n                dispatch(setMarkers(markers.slice()));\n                dispatch(setMessage('Set saved'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to save set. Please try again.');\n        });\n    };\n}\n\nexport function saveDatasetFilter(payload) {\n    return function (dispatch, getState) {\n        const state = getState();\n        let filterValue = getFilterJson(state, true);\n\n        let requestBody = {ds_id: state.dataset.id};\n        if (payload.filterId != null) {\n            requestBody.id = payload.filterId;\n        }\n        let savedDatasetFilter = {};\n\n        let sendRequest = false;\n        if (payload.name !== savedDatasetFilter.name) {\n            requestBody.name = payload.name;\n            sendRequest = true;\n        }\n        if (payload.notes !== savedDatasetFilter.notes) {\n            requestBody.notes = payload.notes;\n            sendRequest = true;\n        }\n        if (!isEqual(filterValue, savedDatasetFilter.value)) {\n            requestBody.value = filterValue;\n            sendRequest = true;\n        }\n        if (!sendRequest) {\n            dispatch(setDialog(null));\n            return;\n        }\n        for (let key in requestBody) {\n            savedDatasetFilter[key] = requestBody[key];\n        }\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.upsertDatasetFilterPromise(requestBody, payload.filterId != null)\n            .then(result => {\n                requestBody.id = result.id;\n                let datasetFilters = getState().datasetFilters;\n                if (payload.filterId != null) {\n                    for (let i = 0; i < datasetFilters.length; i++) {\n                        if (datasetFilters[i].id === result.id) {\n                            datasetFilters[i] = requestBody;\n                            break;\n                        }\n                    }\n                } else {\n                    datasetFilters.push(requestBody);\n                }\n                dispatch(setDatasetFilters(datasetFilters.slice()));\n                dispatch(setMessage('Filter saved'));\n            }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to save filter. Please try again.');\n        });\n    };\n}\n\nexport function removeDatasetFilter(filterKey) {\n    return function (dispatch, getState) {\n        if (filterKey == null) {\n            // clear all\n            dispatch(setDatasetFilter({}));\n        } else {\n            let datasetFilter = getState().datasetFilter;\n            if (filterKey === 'selection') {\n                for (let key in datasetFilter) {\n                    if (datasetFilter[key].basis != null) {\n                        delete datasetFilter[key];\n                    }\n                }\n            } else {\n                delete datasetFilter[filterKey];\n            }\n            dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n        }\n        dispatch(handleFilterUpdated());\n    };\n}\n\nexport function getDatasetFilterArray(datasetFilter) {\n    let filters = [];\n    for (let key in datasetFilter) {\n        // basis, path for brush filter\n        const value = datasetFilter[key];\n        let f = null;\n        if (window.Array.isArray(value)) {\n            f = [key, 'in', value];\n        } else if (value.basis != null) {\n            let points = value.points;\n            if (points.length > 1) { // take \"or\"\n                let allPoints = new Set();\n                points.forEach(p => p.forEach(i => allPoints.add(i)));\n                points = Array.from(allPoints);\n            } else {\n                points = points[0];\n            }\n\n            f = [getEmbeddingJson(value.basis), 'in', {points: points}];\n        } else {\n            if (value.operation !== '' && !isNaN(value.value) && value.value != null) {\n                f = [key, value.operation, value.value];\n            }\n        }\n\n        if (f != null) {\n            filters.push(f);\n        }\n    }\n    return filters;\n}\n\n\nfunction getFilterJson(state) {\n    let filters = getDatasetFilterArray(state.datasetFilter);\n    if (filters.length > 0) {\n        const obs = state.dataset.obs;\n        const obsCat = state.dataset.obsCat;\n        for (let i = 0; i < filters.length; i++) {\n            // add obs/ prefix\n            if (obsCat.indexOf(filters[i][0]) !== -1 || obs.indexOf(filters[i][0]) !== -1) {\n                filters[i][0] = 'obs/' + filters[i][0];\n            }\n        }\n        return {filters: filters, combine: state.combineDatasetFilters};\n    }\n}\n\n\nexport function downloadSelectedIds() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        let filter = getFilterJson(getState(), true);\n        getState().dataset.api.getSelectedIdsPromise({\n            filter: filter\n        }).then(result => {\n            const blob = new Blob([result.ids.join('\\n')], {type: \"text/plain;charset=utf-8\"});\n            saveAs(blob, \"selection.txt\");\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\nexport function exportDatasetFilters() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.exportDatasetFiltersPromise(getState().dataset.id).then(result => {\n            if (result == null) {\n                handleError(dispatch, 'Unable to export filters');\n                return;\n            }\n            const blob = new Blob([result], {type: \"text/plain;charset=utf-8\"});\n            saveAs(blob, \"filters.csv\");\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\n\nexport function setDotPlotSortOrder(payload) {\n    return {type: SET_DOT_PLOT_SORT_ORDER, payload: payload};\n}\n\nexport function setChartOptions(payload) {\n    return {type: SET_CHART_OPTIONS, payload: payload};\n}\n\n\nfunction _setCombineDatasetFilters(payload) {\n    return {type: SET_COMBINE_DATASET_FILTERS, payload: payload};\n}\n\nexport function setCombineDatasetFilters(payload) {\n    return function (dispatch, getState) {\n        dispatch(_setCombineDatasetFilters(payload));\n        dispatch(handleFilterUpdated());\n    };\n}\n\nexport function setChartSize(payload) {\n    return {type: SET_CHART_SIZE, payload: payload};\n}\n\n\nexport function setPrimaryChartSize(payload) {\n    return {type: SET_PRIMARY_CHART_SIZE, payload: payload};\n}\n\nexport function setPrimaryTraceKey(payload) {\n    return {type: SET_PRIMARY_TRACE_KEY, payload: payload};\n}\n\nfunction setGlobalFeatureSummary(payload) {\n    return {type: SET_GLOBAL_FEATURE_SUMMARY, payload: payload};\n}\n\nfunction setDatasetFilter(payload) {\n    return {type: SET_DATASET_FILTER, payload: payload};\n}\n\nfunction setSelection(payload) {\n    return {type: SET_SELECTION, payload: payload};\n}\n\nfunction setFeatureSummary(payload) {\n    return {type: SET_FEATURE_SUMMARY, payload: payload};\n}\n\n\nfunction handleFilterUpdated() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        // whenever filter is updated, we need to get selection statistics\n        const state = getState();\n\n        const searchTokens = splitSearchTokens(state.searchTokens);\n        let filter = getFilterJson(state);\n        addFeatureSetsToX(getFeatureSets(state.markers, searchTokens.featureSets), searchTokens.X);\n        let q = {\n            selection: {\n                measures: searchTokens.X.concat(searchTokens.obs.map(item => 'obs/' + item)),\n                dimensions: searchTokens.obsCat\n            }\n        };\n\n        if (filter) {\n            q.selection.filter = filter;\n        }\n        const isCurrentSelectionEmpty = state.selection.chart == null || Object.keys(state.selection.chart).length === 0;\n\n        if (filter == null) {\n            state.dotPlotData.forEach(data => {\n                data.selection = null;\n            });\n            dispatch(_setDotPlotData(state.dotPlotData.slice()));\n            if (!isCurrentSelectionEmpty) {\n                dispatch(setSelection({chart: {}}));\n            }\n            dispatch(_setSelectedDotPlotData([]));\n            dispatch(setFeatureSummary({}));\n            dispatch(_setLoading(false));\n            return;\n        }\n        let selectedEmbeddings = state.embeddings;\n        q.selection.embeddings = selectedEmbeddings.map(e => {\n            return getEmbeddingJson(e);\n        });\n\n        getState().dataset.api.getDataPromise(q).then(result => {\n            dispatch(handleSelectionResult(result.selection, true));\n        }).catch(err => {\n            handleError(dispatch, err);\n        }).finally(() => dispatch(_setLoading(false)));\n    };\n}\n\n\nexport function handleBrushFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        const name = payload.name; // full basis name\n        const value = payload.value;  // value has basis and points\n        const clear = payload.clear;\n        let datasetFilter = getState().datasetFilter;\n        if (value && isEmbeddingBinned(value.basis)) {\n            const bins = getState().cachedData[getEmbeddingKey(value.basis)].bins;\n            value.points = convertIndicesToBins(value.points, bins);\n        }\n        let update = true;\n        if (value == null) { // remove\n            update = datasetFilter[name] != null;\n            delete datasetFilter[name];\n        } else {\n            if (clear) {\n                datasetFilter[name] = {basis: value.basis, points: [value.points]};\n            } else {\n                const prior = datasetFilter[name];\n                if (prior != null) {\n                    datasetFilter[name].points.push(value.points);\n                } else {\n                    datasetFilter[name] = {basis: value.basis, points: [value.points]};\n                }\n            }\n        }\n        if (update) {\n            dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n            dispatch(handleFilterUpdated());\n        }\n    };\n}\n\n\nexport function handleMeasureFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        const name = payload.name;\n        const operation = payload.operation;\n        const value = payload.value;\n        let update = payload.update;\n\n        let datasetFilter = getState().datasetFilter;\n        let filter = datasetFilter[name];\n\n        if (filter == null) {\n            filter = {operation: '>', value: NaN};\n            datasetFilter[name] = filter;\n        }\n        if (update) {\n            if (value != null) {\n                update = (!isNaN(value) ? value !== filter.value : isNaN(value) !== isNaN(filter.value));\n            }\n            if (operation != null) {\n                update = update || (operation !== filter.operation && !isNaN(filter.value));\n            }\n        }\n        if (operation != null) {\n            filter.operation = operation;\n        }\n        if (value != null) {\n            filter.value = value;\n        }\n\n        dispatch(setDatasetFilter(Object.assign({}, datasetFilter)));\n        if (update) {\n            dispatch(handleFilterUpdated());\n        }\n    };\n}\n\nexport function handleColorChange(payload) {\n    return {type: SET_CATEGORICAL_COLOR, payload: payload};\n}\n\nexport function handleDomainChange(payload) {\n    return {type: SET_DOMAIN, payload: payload};\n}\n\nfunction _handleCategoricalNameChange(payload) {\n    return {type: SET_CATEGORICAL_NAME, payload: payload};\n\n}\n\nexport function handleCategoricalNameChange(payload) {\n    return function (dispatch, getState) {\n        const dataset_id = getState().dataset.id;\n        const p = getState().serverInfo.fancy ? getState().serverInfo.api.setCategoryNamePromise({\n            c: payload.name,\n            o: payload.oldValue,\n            n: payload.value,\n            id: dataset_id\n        }) : Promise.resolve();\n        p.then(() => dispatch(_handleCategoricalNameChange(payload)));\n    };\n}\n\nexport function handleDimensionFilterUpdated(payload) {\n    return function (dispatch, getState) {\n        let name = payload.name;\n        let value = payload.value;\n        let shiftKey = payload.shiftKey;\n        let metaKey = payload.metaKey;\n        let datasetFilter = getState().datasetFilter;\n        let embeddingData = getState().embeddingData;\n        let categories;\n        for (let i = 0; i < embeddingData.length; i++) {\n            if (embeddingData[i].name === name) {\n                categories = embeddingData[i].colorScale.domain();\n                break;\n            }\n        }\n        let selectedValues = datasetFilter[name];\n        if (selectedValues == null) {\n            selectedValues = [];\n            datasetFilter[name] = selectedValues;\n        }\n\n        if (shiftKey && selectedValues.length > 0) {\n            // add last click to current\n            let lastIndex = categories.indexOf(selectedValues[selectedValues.length - 1]);\n            let currentIndex = categories.indexOf(value);\n            // put clicked category at end of array\n            if (currentIndex > lastIndex) {\n                for (let i = lastIndex; i <= currentIndex; i++) {\n                    let index = selectedValues.indexOf(value);\n                    if (index !== -1) {\n                        selectedValues.splice(index, 1);\n                    }\n                    selectedValues.push(categories[i]);\n                }\n            } else {\n                for (let i = lastIndex; i >= currentIndex; i--) {\n                    let index = selectedValues.indexOf(value);\n                    if (index !== -1) {\n                        selectedValues.splice(index, 1);\n                    }\n                    selectedValues.push(categories[i]);\n                }\n            }\n        } else {\n            let selectedIndex = selectedValues.indexOf(value);\n            if (!metaKey) { // clear and toggle current\n                selectedValues = [];\n                datasetFilter[name] = selectedValues;\n            }\n            if (selectedIndex !== -1) { // exists, remove\n                selectedValues.splice(selectedIndex, 1);\n                if (selectedValues.length === 0) {\n                    delete datasetFilter[name];\n                }\n            } else {\n                selectedValues.push(value);\n            }\n        }\n        dispatch(setDatasetFilter(datasetFilter));\n        dispatch(handleFilterUpdated());\n    };\n}\n\n\nexport function restoreView(payload) {\n    return {type: RESTORE_VIEW, payload: payload};\n}\n\nexport function setNumberOfBinsUI(payload) {\n    return {type: SET_NUMBER_OF_BINS_UI, payload: payload};\n}\n\nexport function setPointSize(payload) {\n    return {type: SET_POINT_SIZE, payload: payload};\n}\n\nexport function setMarkerSize(payload) {\n    return {type: SET_MARKER_SIZE, payload: payload};\n}\n\n\nexport function setUser(payload) {\n    return {type: SET_USER, payload: payload};\n}\n\nexport function setMarkerOpacityUI(payload) {\n    return {type: SET_MARKER_OPACITY_UI, payload: payload};\n}\n\nexport function setUnselectedMarkerOpacityUI(payload) {\n    return {type: SET_UNSELECTED_MARKER_OPACITY_UI, payload: payload};\n}\n\nexport function setServerInfo(payload) {\n    return {type: SET_SERVER_INFO, payload: payload};\n}\n\nfunction loadDefaultDatasetEmbedding() {\n    return function (dispatch, getState) {\n        const dataset = getState().dataset;\n        const embeddingNames = dataset.embeddings.map(e => e.name);\n        let priority = {'tissue_hires': 1, 'X_fle': 2, 'X_umap': 3, 'X_tsne': 4, 'X_fitsne': 5};\n\n        embeddingNames.sort((a, b) => {\n            a = priority[a] || Number.MAX_VALUE;\n            b = priority[b] || Number.MAX_VALUE;\n            return a - b;\n        });\n\n        if (embeddingNames.length > 0) {\n            dispatch(setSelectedEmbedding([dataset.embeddings[dataset.embeddings.map(e => e.name).indexOf(embeddingNames[0])]]));\n        }\n    };\n}\n\nfunction loadDefaultDataset() {\n    return function (dispatch, getState) {\n        if (getState().dataset == null && getState().datasetChoices.length === 1) {\n            dispatch(setDataset(getState().datasetChoices[0].id));\n        }\n    };\n}\n\nfunction restoreSavedView(savedView) {\n    return function (dispatch, getState) {\n        if (savedView.colorScheme != null) {\n            let interpolator = getInterpolator(savedView.colorScheme);\n            if (interpolator != null) {\n                savedView.colorScheme = {\n                    name: savedView.colorScheme,\n                    value: interpolator,\n                };\n            }\n        }\n\n        if (savedView.datasetFilter != null) {\n            for (let key in savedView.datasetFilter) {\n                let value = savedView.datasetFilter[key];\n                if (!window.Array.isArray(value)) {\n                    value.uiValue = value.value;\n                }\n            }\n        } else {\n            savedView.datasetFilter = {};\n        }\n\n        dispatch(_setLoading(true));\n        let datasetPromise;\n        if (savedView.dataset != null) {\n            datasetPromise = dispatch(setDataset(savedView.dataset, false, false));\n        } else {\n            datasetPromise = Promise.resolve();\n        }\n        datasetPromise\n            .then(() => {\n                let dataset = getState().dataset;\n                if (savedView.embeddings) {\n                    let names = dataset.embeddings.map(e => getEmbeddingKey(e));\n                    let embeddings = [];\n                    savedView.embeddings.forEach(embedding => {\n                        let index = names.indexOf(getEmbeddingKey(embedding));\n                        if (index !== -1) {\n                            embeddings.push(dataset.embeddings[index]);\n                        }\n                    });\n                    savedView.embeddings = embeddings;\n                    if (savedView.camera != null) {\n                        savedView.chartOptions.camera = savedView.camera;\n                    }\n                }\n            })\n            .then(() => dispatch(setDatasetFilter(savedView.datasetFilter)))\n            .then(() => dispatch(restoreView(savedView)))\n            .then(() => dispatch(_updateCharts()))\n            .then(() => dispatch(handleFilterUpdated()))\n            .then(() => {\n                if (savedView.sort != null) {\n                    for (let name in savedView.sort) {\n                        dispatch(setDotPlotSortOrder({name: name, value: savedView.sort[name]}));\n                    }\n                }\n\n            })\n            .finally(() => dispatch(_setLoading(false)))\n            .catch(err => {\n                console.log(err);\n                dispatch(setMessage('Unable to restore saved view.'));\n                dispatch(loadDefaultDataset());\n            });\n    };\n}\n\nfunction _loadSavedView() {\n    return function (dispatch, getState) {\n        let savedView = {dataset: null};\n        let q = window.location.search.substring(3);\n        if (q.length > 0) {\n            try {\n                savedView = JSON.parse(window.decodeURIComponent(q));\n            } catch (err) {\n                return dispatch(setMessage('Unable to restore saved view.'));\n            }\n        }\n\n        if (savedView.dataset != null) {\n            dispatch(restoreSavedView(savedView));\n        } else {\n            dispatch(loadDefaultDataset());\n        }\n    };\n}\n\nexport function initLogin(loadSavedView) {\n    return function (dispatch, getState) {\n        let isSignedIn = window.gapi.auth2.getAuthInstance().isSignedIn.get();\n        if (isSignedIn) {\n            let googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n            let email = googleUser.getBasicProfile().getEmail();\n            dispatch(_setEmail(email));\n            dispatch(getUser());\n            dispatch(listDatasets()).then(() => {\n                if (loadSavedView) {\n                    dispatch(_loadSavedView());\n                }\n            });\n\n        }\n    };\n}\n\nexport function getAccessToken() {\n    return window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().access_token;\n}\n\nexport function getIdToken() {\n    return typeof window.gapi !== 'undefined' ? window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token : '';\n}\n\nexport function saveDataset(payload) {\n    return function (dispatch, getState) {\n\n        const name = payload.name;\n        const url = payload.url;\n\n        if (name === '' || url === '') {\n            return;\n        }\n        const readers = payload.readers;\n        const description = payload.description;\n        const title = payload.title;\n        // let bucket = url.substring('gs://'.length);\n        // let slash = bucket.indexOf('/');\n        // let object = encodeURIComponent(bucket.substring(slash + 1));\n        // bucket = encodeURIComponent(bucket.substring(0, slash));\n\n        dispatch(_setLoading(true));\n        const isEdit = payload.dataset != null;\n        const serverInfo = getState().serverInfo;\n        const updatePermissions = !isEdit || url !== payload.dataset.url;\n        // if (updatePermissions) {\n\n        // updateDatasetPermissionPromise = fetch(\n        //     'https://www.googleapis.com/storage/v1/b/' + bucket + '/o/' + object,\n        //     {\n        //         body: JSON.stringify({\n        //             'acl': [{\n        //                 'entity': 'user-' + serverEmail,\n        //                 'role': 'READER'\n        //             }]\n        //         }),\n        //         method: 'PATCH',\n        //         headers: {'Authorization': 'Bearer ' + getAccessToken(), 'Content-Type': 'application/json'},\n        //     });\n\n        // } else {\n        let updateDatasetPermissionPromise = Promise.resolve({ok: true});\n\n        // }\n        updateDatasetPermissionPromise.then(permissionsResponse => {\n\n            // if (!permissionsResponse.ok) {\n            //     dispatch(setMessage('Unable to set dataset read permissions. Please ensure that you are the dataset owner or manually add ' + serverEmail + ' as a reader.'));\n            // }\n        }).then(() => getState().serverInfo.api.upsertDatasetPromise(payload.dataset ? payload.dataset.id : null,\n            {\n                name: name,\n                readers: readers,\n                description: description,\n                title: title,\n                url: url\n            })).then(importDatasetResult => {\n            const dsUpdate = {\n                name: name,\n                id: importDatasetResult.id,\n                title: title,\n                url: url,\n                readers: readers,\n                description: description,\n                owner: true\n            };\n            if (isEdit) {\n                dispatch(updateDataset(dsUpdate));\n                dispatch(setMessage('Dataset updated'));\n            } else {\n                dispatch(_addDataset(dsUpdate));\n                if (serverInfo.email) {\n                    dispatch(setMessage(updatePermissions ? 'Please ensure that ' + serverInfo.email + ' is a \"Storage Object Viewer\"' : 'Dataset created'));\n                }\n            }\n\n        }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err);\n        });\n    };\n}\n\nexport function deleteDataset(payload) {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        getState().serverInfo.api.deleteDatasetPromise(payload.dataset.id).then(() => {\n            dispatch(_setDataset(null));\n            dispatch(_deleteDataset({id: payload.dataset.id}));\n            dispatch(setDialog(null));\n\n            dispatch(setMessage('Dataset deleted'));\n        }).finally(() => {\n            dispatch(_setLoading(false));\n            dispatch(setDialog(null));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to delete dataset. Please try again.');\n        });\n    };\n}\n\nfunction _addDataset(payload) {\n    return {type: ADD_DATASET, payload: payload};\n}\n\nfunction _deleteDataset(payload) {\n    return {type: DELETE_DATASET, payload: payload};\n}\n\nexport function updateDataset(payload) {\n    return {type: UPDATE_DATASET, payload: payload};\n}\n\nexport function setMessage(payload) {\n    return {type: SET_MESSAGE, payload: payload};\n}\n\nexport function setInterpolator(payload) {\n    return {type: SET_INTERPOLATOR, payload: payload};\n}\n\nexport function setDotPlotInterpolator(payload) {\n    return {type: SET_DOT_PLOT_INTERPOLATOR, payload: payload};\n}\n\nexport function setEmbeddingData(payload) {\n    return {type: SET_EMBEDDING_DATA, payload: payload};\n}\n\nexport function setDialog(payload) {\n    return {type: SET_DIALOG, payload: payload};\n}\n\nexport function setMarkers(payload) {\n    return {type: SET_MARKERS, payload: payload};\n}\n\nfunction _setDatasetChoices(payload) {\n    return {type: SET_DATASET_CHOICES, payload: payload};\n}\n\n\nfunction _setLoading(payload) {\n    return {type: SET_LOADING, payload: payload};\n}\n\nexport function setTab(payload) {\n    return {type: SET_TAB, payload: payload};\n}\n\nfunction _setLoadingApp(payload) {\n    return {type: SET_LOADING_APP, payload: payload};\n}\n\nfunction _setDataset(payload) {\n    return {type: SET_DATASET, payload: payload};\n}\n\n\nexport function setMarkerOpacity(payload) {\n    return {type: SET_MARKER_OPACITY, payload: payload};\n}\n\nexport function setUnselectedMarkerOpacity(payload) {\n    return {type: SET_UNSELECTED_MARKER_OPACITY, payload: payload};\n}\n\n\nfunction _setDotPlotData(payload) {\n    return {type: SET_DOT_PLOT_DATA, payload: payload};\n}\n\nfunction _setSelectedDotPlotData(payload) {\n    return {type: SET_SELECTED_DOT_PLOT_DATA, payload: payload};\n}\n\n\nfunction _setEmail(payload) {\n    return {type: SET_EMAIL, payload: payload};\n}\n\n\n/**\n *\n * @param value\n * @param type one of X, obs, featureSet\n */\nexport function setSearchTokens(value, type) {\n    return function (dispatch, getState) {\n        const state = getState();\n        let searchTokens = state.searchTokens;\n        // keep all other types\n        let removeType = [type];\n        if (type === 'obs') {\n            removeType.push('obsCat');\n        }\n        searchTokens = searchTokens.filter(item => removeType.indexOf(item.type) === -1);\n        if (type === 'X' || type === 'featureSet') {\n            searchTokens = searchTokens.concat(value.map(item => {\n                return {value: item, type: type};\n            }));\n        } else if (type === 'obs') {\n            const obsCat = state.dataset.obsCat;\n            value.forEach(val => {\n                const type = obsCat.indexOf(val) !== -1 ? 'obsCat' : 'obs';\n                searchTokens.push({value: val, type: type});\n            });\n        }\n        dispatch({type: SET_SEARCH_TOKENS, payload: searchTokens.slice()});\n        dispatch(_updateCharts());\n    };\n}\n\n\nexport function setSelectedEmbedding(payload) {\n    return function (dispatch, getState) {\n        let prior = getState().embeddings;\n        dispatch({type: SET_SELECTED_EMBEDDING, payload: payload});\n        dispatch(_updateCharts(err => {\n            dispatch({type: SET_SELECTED_EMBEDDING, payload: prior});\n        }));\n    };\n}\n\n\nexport function setNumberOfBins(payload) {\n    return function (dispatch, getState) {\n        if (getState().numberOfBins !== payload) {\n            dispatch({type: SET_NUMBER_OF_BINS, payload: payload});\n        }\n    };\n}\n\nexport function setBinSummary(payload) {\n    return function (dispatch, getState) {\n        dispatch({type: SET_BIN_SUMMARY, payload: payload});\n\n    };\n}\n\nexport function setBinValues(payload) {\n    return {type: SET_BIN_VALUES, payload: payload};\n}\n\n\nexport function setSavedDatasetState(payload) {\n    return {type: SET_SAVED_DATASET_STATE, payload: payload};\n}\n\nfunction setDatasetFilters(payload) {\n    return {type: SET_DATASET_FILTERS, payload: payload};\n}\n\n\nexport function setDataset(id, loadDefaultView = true, setLoading = true) {\n    return function (dispatch, getState) {\n        if (setLoading) {\n            dispatch(_setLoading(true));\n        }\n        let savedDatasetState = getState().savedDatasetState[id];\n        const datasetChoices = getState().datasetChoices;\n        let selectedChoice = null; // has id, owner, name\n        for (let i = 0; i < datasetChoices.length; i++) {\n            if (datasetChoices[i].id === id) {\n                selectedChoice = datasetChoices[i];\n                break;\n            }\n        }\n        if (selectedChoice == null) {\n            dispatch(_setLoading(false));\n            dispatch(setMessage('Unable to find dataset'));\n            return Promise.reject('Unable to find dataset');\n        }\n        // force re-render selected dataset dropdown\n        let dataset = Object.assign({}, selectedChoice);\n        dataset.id = id;\n        dataset.embeddings = [];\n        dataset.features = [];\n        dataset.obs = [];\n        dataset.obsCat = [];\n        dispatch(_setDataset(dataset));\n        let categoryNameResults;\n        let datasetFilters = [];\n        let newDataset;\n\n        function onPromisesComplete() {\n            newDataset = Object.assign(dataset, newDataset);\n            if (newDataset.embeddings) {\n                for (let i = 0; i < newDataset.embeddings.length; i++) {\n                    if (newDataset.embeddings[i].nbins != null) {\n                        newDataset.embeddings[i].bin = true;\n                        newDataset.embeddings[i].precomputed = true;\n                    } else { // set default values\n                        newDataset.embeddings[i].nbins = 500;\n                        newDataset.embeddings[i]._nbins = 500;\n                        newDataset.embeddings[i].bin = false;\n                        newDataset.embeddings[i].agg = 'max';\n                    }\n                }\n            }\n            newDataset.api = dataset.api;\n            newDataset.features = newDataset.var;\n            newDataset.features.sort((a, b) => {\n                a = a.toLowerCase();\n                b = b.toLowerCase();\n                const aIsDigit = a[0] >= '0' && a[0] <= '9';\n                const bIsDigit = b[0] >= '0' && b[0] <= '9';\n                if (aIsDigit) {\n                    a = 'zzzzzz' + a;\n                }\n                if (bIsDigit) {\n                    b = 'zzzzzz' + b;\n                }\n                // put features that start with a number last\n                return (a < b ? -1 : (a === b ? 0 : 1));\n            });\n            newDataset.id = id;\n            dispatch(_setDataset(newDataset));\n\n            if (categoryNameResults != null) {\n                categoryNameResults.forEach(result => {\n                    dispatch(_handleCategoricalNameChange({\n                        name: result.category,\n                        oldValue: result.original,\n                        value: result.new\n                    }));\n                });\n            }\n            dispatch(setDatasetFilters(datasetFilters));\n            if (savedDatasetState) {\n                dispatch(restoreSavedView(savedDatasetState));\n            } else if (loadDefaultView) {\n                dispatch(loadDefaultDatasetEmbedding());\n            }\n        }\n\n        let url = dataset.url || '';\n        const isByteRangeDataset = url.startsWith(\"http\") || url.startsWith('//');\n        if (isByteRangeDataset) {\n            dataset.api = new JsonDataset();\n        } else {\n            dataset.api = new RestDataset();\n        }\n        const initPromise = dataset.api.init(id, dataset.url);\n\n        return initPromise.then(() => {\n            let promises = [];\n            if (!isByteRangeDataset) {\n                const categoriesRenamePromise = getState().serverInfo.api.getCategoryNamesPromise(dataset.id).then(results => {\n                    categoryNameResults = results;\n                });\n\n                const filtersPromise = getState().serverInfo.api.getFiltersPromise(dataset.id).then(results => {\n                    datasetFilters = results;\n                });\n                promises.push(categoriesRenamePromise);\n                promises.push(filtersPromise);\n            }\n            const schemaPromise = dataset.api.getSchemaPromise().then(result => {\n                newDataset = result;\n            });\n            promises.push(schemaPromise);\n            return promises;\n        }).then(promises => Promise.all(promises)).then(() => onPromisesComplete()).finally(() => {\n            if (setLoading) {\n                dispatch(_setLoading(false));\n            }\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve dataset. Please try again.');\n        });\n\n    };\n}\n\n\nfunction handleSelectionResult(selectionResult, clear) {\n    return function (dispatch, getState) {\n        const state = getState();\n        if (selectionResult) {\n            const coordinates = selectionResult.coordinates;\n            if (coordinates != null) {\n                let chartSelection = {};\n                for (let key in coordinates) {\n                    const selectedIndicesOrBins = coordinates[key].indices_or_bins;\n                    const embedding = state.embeddings[state.embeddings.map(e => getEmbeddingKey(e)).indexOf(key)];\n                    if (embedding == null) {\n                        console.log(key + ' missing');\n                        continue;\n                    }\n                    let selectedPoints = selectedIndicesOrBins;\n                    if (isEmbeddingBinned(embedding)) {\n                        const coords = state.cachedData[getEmbeddingKey(embedding)];\n                        const bins = coords.bins;\n                        selectedPoints = convertBinsToIndices(bins, selectedIndicesOrBins);\n                    }\n\n                    chartSelection[key] = {\n                        userPoints: new Set(selectedPoints),\n                        points: selectedIndicesOrBins\n                    };\n                }\n                dispatch(setSelection({\n                    count: selectionResult.count,\n                    chart: chartSelection\n                }));\n            } else {\n                const isCurrentSelectionEmpty = state.selection.chart == null || Object.keys(state.selection.chart).length === 0;\n                if (clear && !isCurrentSelectionEmpty) {\n                    dispatch(setSelection({count: selectionResult.count, chart: {}}));\n                }\n            }\n\n            // userPoints are in chart space, points are in server space, count is total number of cells selected\n            if (selectionResult.summary) {\n                // merge or clear selection\n                let selectionSummary = clear ? selectionResult.summary : Object.assign(getState().featureSummary, selectionResult.summary);\n                dispatch(setFeatureSummary(Object.assign({}, selectionSummary)));\n            }\n            if (selectionResult.dotplot) {\n                let selectedDotPlotData = state.selectedDotPlotData;\n                if (clear) {\n                    selectedDotPlotData = [];\n                }\n                selectedDotPlotData = updateDotPlotData(selectionResult.dotplot, selectedDotPlotData, splitSearchTokens(state.searchTokens));\n                dispatch(_setSelectedDotPlotData(selectedDotPlotData));\n            }\n\n        }\n    };\n\n}\n\nfunction updateDotPlotData(newDotplotData, dotPlotData, searchTokens) {\n    let categoryKeys = [searchTokens.obsCat.join('-')];\n    let dotPlotKeys = {}; // category-feature\n\n    categoryKeys.forEach(category => {\n        searchTokens.X.forEach(feature => {\n            if (feature !== '__count') {\n                let key = category + '-' + feature;\n                dotPlotKeys[key] = true;\n\n            }\n        });\n    });\n\n\n    // merge with existing data\n    if (newDotplotData) {\n        newDotplotData.forEach(categoryItem => {\n            let index = -1;\n            for (let i = 0; i < dotPlotData.length; i++) {\n                if (dotPlotData[i].name === categoryItem.name) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index === -1) {\n                dotPlotData.push(categoryItem);\n            } else {\n                dotPlotData[index].values = categoryItem.values.concat(dotPlotData[index].values);\n                dotPlotData[index].values = uniqBy(dotPlotData[index].values, (value => value.name));\n                dotPlotData[index] = Object.assign({}, dotPlotData[index]);\n            }\n        });\n    }\n\n    // keep active categories only\n\n    dotPlotData = dotPlotData.filter(categoryItem => categoryKeys.indexOf(categoryItem.name) !== -1);\n    dotPlotData.forEach((categoryItem, categoryIndex) => {\n        const nfeatures = categoryItem.values.length;\n        categoryItem.values = categoryItem.values.filter(feature => dotPlotKeys[categoryItem.name + '-' + feature.name]);\n        if (nfeatures !== categoryItem.values.length) {\n            dotPlotData[categoryIndex] = Object.assign({}, categoryItem);\n        }\n    });\n    dotPlotData = dotPlotData.filter(categoryItem => categoryItem.values.length > 0);\n    // sort features\n    let featureSortOrder = {};\n    searchTokens.X.forEach((name, index) => {\n        featureSortOrder[name] = index;\n    });\n    dotPlotData.forEach((categoryItem) => {\n        categoryItem.values.sort((a, b) => {\n            a = featureSortOrder[a.name];\n            b = featureSortOrder[b.name];\n            return a - b;\n        });\n\n    });\n    return dotPlotData;\n}\n\nfunction _updateCharts(onError) {\n    return function (dispatch, getState) {\n        const state = getState();\n        if (state.dataset == null) {\n            return;\n        }\n        dispatch(_setLoading(true));\n\n        const searchTokens = splitSearchTokens(state.searchTokens);\n        if (searchTokens.featureSets.length > 0) {\n            addFeatureSetsToX(getFeatureSets(state.markers, searchTokens.featureSets), searchTokens.X);\n        }\n        let dotplot = (searchTokens.X.length > 0 || searchTokens.featureSets.length > 0) && searchTokens.obsCat.length > 0;\n        const selectionStats = state.featureSummary;\n        const embeddings = state.embeddings;\n        let dotPlotData = state.dotPlotData;\n        let selectedDotPlotData = state.selectedDotPlotData;\n        let embeddingData = state.embeddingData;\n        const globalFeatureSummary = state.globalFeatureSummary;\n        const cachedData = state.cachedData;\n        const embeddingCoordinatesToFetch = [];\n        const valuesToFetch = new Set();\n        const binnedEmbeddingValuesToFetch = [];\n        const embeddingKeys = new Set();\n        const features = new Set();\n        searchTokens.X.concat(searchTokens.obs).concat(searchTokens.obsCat).forEach(feature => {\n            features.add(feature);\n        });\n\n        embeddings.forEach(selectedEmbedding => {\n            const embeddingKey = getEmbeddingKey(selectedEmbedding);\n            embeddingKeys.add(embeddingKey);\n            if (cachedData[embeddingKey] == null) {\n                embeddingCoordinatesToFetch.push(selectedEmbedding);\n            }\n            if (isEmbeddingBinned(selectedEmbedding)) {\n                const data = {values: [], embedding: selectedEmbedding};\n                features.forEach(feature => {\n                    let key = feature + '_' + embeddingKey;\n                    if (cachedData[key] == null) {\n                        data.values.push(feature);\n                    }\n                });\n                if (data.values.length > 0) {\n                    binnedEmbeddingValuesToFetch.push(data);\n                }\n            } else {\n                features.forEach(feature => {\n                    if (cachedData[feature] == null) {\n                        valuesToFetch.add(feature);\n                    }\n                });\n            }\n        });\n\n        // set active flag on cached embedding data\n        embeddingData.forEach(traceInfo => {\n            const embeddingKey = getEmbeddingKey(traceInfo.embedding);\n            const active = embeddingKeys.has(embeddingKey) && (features.has(traceInfo.name) || (features.size === 0 && traceInfo.name === '__count'));\n            if (active) {\n                traceInfo.date = new Date();\n            }\n            traceInfo.active = active;\n        });\n\n        let dotplotMeasuresCacheMiss = new Set();\n        let dotPlotCategories = searchTokens.obsCat.slice();\n        let dotPlotCategoryKeys = [dotPlotCategories.join('-')];\n        let dotPlotKeys = {}; // category-feature\n        let selectedMeasuresCacheMiss = [];\n        if (dotplot) {\n            let cachedDotPlotKeys = {};\n            dotPlotData.forEach(dotPlotDataItem => {\n                dotPlotDataItem.values.forEach(datum => {\n                    cachedDotPlotKeys[dotPlotDataItem.name + '-' + datum.name] = true;\n                });\n            });\n            let cachedSelectedDotPlotMeasures = {};\n            selectedDotPlotData.forEach(dotPlotDataItem => {\n                dotPlotDataItem.values.forEach(datum => {\n                    cachedSelectedDotPlotMeasures[datum.name] = true;\n                });\n            });\n\n            searchTokens.X.forEach(feature => {\n                if (cachedSelectedDotPlotMeasures[feature] == null) {\n                    selectedMeasuresCacheMiss.push(feature);\n                }\n            });\n            searchTokens.obs.forEach(feature => {\n                if (selectionStats[feature] == null) {\n                    selectedMeasuresCacheMiss.push('obs/' + feature);\n                }\n            });\n            dotPlotCategoryKeys.forEach(category => {\n                let added = false;\n                searchTokens.X.forEach(feature => {\n\n                    let key = category + '-' + feature;\n                    dotPlotKeys[key] = true;\n                    if (cachedDotPlotKeys[key] == null) {\n                        dotplotMeasuresCacheMiss.add(feature);\n                        added = true;\n                    }\n\n                });\n            });\n        }\n        let q = {};\n        if (embeddingCoordinatesToFetch.length > 0 || binnedEmbeddingValuesToFetch.length > 0) {\n            q.embedding = [];\n            const embeddingCoordinatesToFetchKeys = embeddingCoordinatesToFetch.map(e => getEmbeddingKey(e));\n            binnedEmbeddingValuesToFetch.forEach(datum => {\n                const embeddingJson = getEmbeddingJson(datum.embedding);\n                embeddingJson.dimensions = [];\n                embeddingJson.measures = [];\n                embeddingJson.coords = embeddingCoordinatesToFetchKeys.indexOf(getEmbeddingKey(datum.embedding)) !== -1;\n                q.embedding.push(embeddingJson);\n                datum.values.forEach(value => {\n                    if (searchTokens.obsCat.indexOf(value) !== -1) {\n                        embeddingJson.dimensions.push(value);\n                    } else if (searchTokens.obs.indexOf(value) !== -1) {\n                        embeddingJson.measures.push('obs/' + value);\n                    } else {\n                        embeddingJson.measures.push(value);\n                    }\n                });\n            });\n            const binnedEmbeddingValuesToFetchKeys = binnedEmbeddingValuesToFetch.map(e => getEmbeddingKey(e.embedding));\n            embeddingCoordinatesToFetch.forEach(embedding => {\n                if (binnedEmbeddingValuesToFetchKeys.indexOf(getEmbeddingKey(embedding)) === -1) {\n                    const embeddingJson = getEmbeddingJson(embedding);\n                    embeddingJson.coords = true;\n                    q.embedding.push(embeddingJson);\n                }\n            });\n        }\n        if (valuesToFetch.size > 0) {\n            q.values = {measures: [], dimensions: []};\n            valuesToFetch.forEach(value => {\n                if (searchTokens.obsCat.indexOf(value) !== -1) {\n                    q.values.dimensions.push(value);\n                } else if (searchTokens.obs.indexOf(value) !== -1) {\n                    q.values.measures.push('obs/' + value);\n                } else {\n                    q.values.measures.push(value);\n                }\n            });\n        }\n\n        let globalFeatureSummaryXCacheMiss = [];\n        let globalFeatureSummaryObsContinuousCacheMiss = [];\n        let globalFeatureSummaryDimensionsCacheMiss = [];\n        searchTokens.X.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryXCacheMiss.push(feature);\n            }\n        });\n        searchTokens.obs.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryObsContinuousCacheMiss.push('obs/' + feature);\n            }\n        });\n        searchTokens.obsCat.forEach(feature => {\n            if (globalFeatureSummary[feature] == null) {\n                globalFeatureSummaryDimensionsCacheMiss.push(feature);\n            }\n        });\n\n\n        if (globalFeatureSummaryXCacheMiss.length > 0 || globalFeatureSummaryObsContinuousCacheMiss.length > 0 || globalFeatureSummaryDimensionsCacheMiss.length > 0) {\n            q.stats = {\n                measures: globalFeatureSummaryXCacheMiss.concat(globalFeatureSummaryObsContinuousCacheMiss),\n                dimensions: globalFeatureSummaryDimensionsCacheMiss\n            };\n        }\n\n        if (dotPlotCategories.length > 0 && dotplotMeasuresCacheMiss.size > 0) {\n            q.groupedStats = {\n                measures: Array.from(dotplotMeasuresCacheMiss),\n                dimensions: [dotPlotCategories]\n            };\n        }\n\n        const filterJson = getFilterJson(state);\n        // TODO update selection in new embedding space\n        if (filterJson != null && (globalFeatureSummaryXCacheMiss.length > 0 || globalFeatureSummaryDimensionsCacheMiss.length > 0 || selectedMeasuresCacheMiss.length > 0)) {\n            q.selection = {\n                filter: filterJson,\n                measures: globalFeatureSummaryDimensionsCacheMiss.length > 0 ? searchTokens.X : selectedMeasuresCacheMiss,\n                dimensions: searchTokens.obsCat\n            };\n        }\n        let dataPromise = Object.keys(q).length > 0 ? state.dataset.api.getDataPromise(q) : Promise.resolve({});\n        return dataPromise.then(result => {\n            if (result.embeddings != null) {\n                result.embeddings.forEach(embedding => {\n                    if (embedding.coordinates && Object.keys(embedding.coordinates).length>0) {\n                        cachedData[embedding.name] = embedding.coordinates;\n                    }\n                    if (embedding.values) { // binned values\n                        for (let feature in embedding.values) {\n                            cachedData[feature + '_' + embedding.name] = embedding.values[feature];\n                        }\n                    }\n                });\n            }\n            if (result.values) { // binned values\n                for (let feature in result.values) {\n                    cachedData[feature] = result.values[feature];\n                }\n            }\n\n            dispatch(_setDotPlotData(updateDotPlotData(result.dotplot, dotPlotData, searchTokens)));\n            const newSummary = result.summary || {};\n            for (let key in newSummary) {\n                globalFeatureSummary[key] = newSummary[key];\n            }\n            dispatch(setGlobalFeatureSummary(globalFeatureSummary));\n\n\n            updateEmbedingData(state, features);\n            // if (result.embedding) {\n            //     for (let i = 0; i < result.embedding.length; i++) {\n            //         dispatch(handleEmbeddingResult(result.embedding[i], embeddingsUsed[i]));\n            //     }\n            // }\n            // embeddingData.sort((a, b) => {\n            //     a = a.name.toLowerCase();\n            //     b = b.name.toLowerCase();\n            //     return a < b ? -1 : 1;\n            // });\n\n            if (state.chartOptions.activeEmbedding != null) { // when restoring view - put last so that it becomes active\n                let index = -1;\n                for (let i = 0; i < embeddingData.length; i++) {\n                    if (state.chartOptions.activeEmbedding === getTraceKey(embeddingData[i])) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== -1) {\n                    let activeTrace = embeddingData[index];\n                    embeddingData.splice(index, 1);\n                    embeddingData.push(activeTrace);\n                }\n                state.chartOptions.activeEmbedding = null;\n            }\n            dispatch(setEmbeddingData(embeddingData.slice()));\n            if (result.selection) {\n                dispatch(handleSelectionResult(result.selection));\n            } else {\n                dispatch(_setSelectedDotPlotData(updateDotPlotData(null, selectedDotPlotData, searchTokens)));\n            }\n        }).finally(() => {\n            dispatch(_setLoading(false));\n        }).catch(err => {\n            handleError(dispatch, err, 'Unable to retrieve data. Please try again.');\n            if (onError) {\n                onError(err);\n            }\n        });\n\n    };\n\n}\n\n// depends on global feature summary\nfunction updateEmbedingData(state, features) {\n    const embeddings = state.embeddings;\n    let embeddingData = state.embeddingData;\n    const obsCat = state.dataset.obsCat;\n    const globalFeatureSummary = state.globalFeatureSummary;\n    const interpolator = state.interpolator;\n    const dataset = state.dataset;\n    const cachedData = state.cachedData;\n    const existingKeys = new Set();\n    embeddingData.forEach(embeddingDatum => {\n        const embeddingKey = getEmbeddingKey(embeddingDatum.embedding);\n        const key = embeddingDatum.name + '_' + embeddingKey;\n        existingKeys.add(key);\n    });\n    if (features.size === 0) {\n        features.add('__count');\n    }\n    embeddings.forEach(embedding => {\n        const embeddingKey = getEmbeddingKey(embedding);\n        const isBinned = isEmbeddingBinned(embedding);\n        const coordinates = cachedData[embeddingKey];\n        const x = coordinates[embedding.name + '_1'];\n        const y = coordinates[embedding.name + '_2'];\n        const z = coordinates[embedding.name + '_3'];\n        const bins = isBinned ? coordinates.bins : null;\n        features.forEach(feature => {\n            let key = feature + '_' + embeddingKey;\n            let featureKey = feature;\n            if (!existingKeys.has(key)) {\n                const isSpatial = embedding.spatial != null;\n                if (isBinned) {\n                    featureKey = key;\n                }\n                let traceSummary = globalFeatureSummary[feature];\n                let values = cachedData[featureKey];\n                if (values == null && feature === '__count' && !isBinned) {\n                    values = new Float32Array(x.length);\n                    for (let i = 0, n = values.length; i < n; i++) {\n                        values[i] = 1;\n                    }\n                }\n                let purity = null;\n\n                if (values.value !== undefined) {\n                    purity = values.purity;\n                    values = values.value;\n                }\n\n                let isCategorical = feature !== '__count' && obsCat.indexOf(feature) !== -1;\n                let colorScale = null;\n\n                if (!isCategorical) {\n                    // __count range is per embedding so we always recompute for now\n                    if (isPlainObject(values)) {\n                        let newValues = new Float32Array(dataset.shape[0]);\n                        for (let i = 0, n = values.index.length; i < n; i++) {\n                            newValues[values.index[i]] = values.values[i];\n                        }\n                        values = newValues;\n                    }\n                    if (traceSummary == null || feature === '__count') {\n\n                        let min = Number.MAX_VALUE;\n                        let max = -Number.MAX_VALUE;\n                        for (let i = 0, n = values.length; i < n; i++) {\n                            let value = values[i];\n                            min = value < min ? value : min;\n                            max = value > max ? value : max;\n                        }\n                        traceSummary = {min: min, max: max};\n                        globalFeatureSummary[feature] = traceSummary;\n                    }\n                    let domain = [traceSummary.min, traceSummary.max];\n                    if (traceSummary.customMin != null && !isNaN(traceSummary.customMin)) {\n                        domain[0] = traceSummary.customMin;\n                    }\n                    if (traceSummary.customMax != null && !isNaN(traceSummary.customMax)) {\n                        domain[1] = traceSummary.customMax;\n                    }\n                    colorScale = scaleSequential(interpolator.value).domain(domain);\n\n                } else {\n                    let traceUniqueValues = traceSummary.categories;\n                    // if (traceUniqueValues.length === 1 && traceUniqueValues[0] === true) {\n                    //     traceUniqueValues = traceUniqueValues.concat([null]);\n                    //     traceSummary.categories = traceUniqueValues;\n                    //     traceSummary.counts = traceSummary.counts.concat([state.dataset.shape[0] - traceSummary.counts[0]]);\n                    // }\n\n                    let colors;\n                    if (traceUniqueValues.length <= 10) {\n                        colors = schemeCategory10;\n                    } else if (traceUniqueValues.length <= 12) {\n                        colors = schemePaired;\n                    } else if (traceUniqueValues.length <= 20) {\n                        colors = CATEGORY_20B;\n                    } else {\n                        colors = CATEGORY_20B.concat(CATEGORY_20C);\n                    }\n\n                    colorScale = scaleOrdinal(colors).domain(traceUniqueValues);\n                    colorScale.summary = traceSummary;\n                }\n\n\n                let chartData = {\n                    embedding: Object.assign({}, embedding),\n                    name: feature,\n                    x: x,\n                    y: y,\n                    z: z != null ? z : undefined,\n                    bins: bins,\n                    dimensions: z != null ? 3 : 2,\n                    npoints: values.length,\n                    date: new Date(),\n                    active: true,\n                    colorScale: colorScale,\n                    continuous: !isCategorical,\n                    isCategorical: isCategorical,\n                    values: values, // for color\n                    isImage: isSpatial\n                    // purity: purity,\n                    // text: values,\n                };\n                if (!isSpatial) {\n                    chartData.positions = getPositions(chartData);\n                }\n                updateTraceColors(chartData);\n\n                if (isSpatial) {\n                    chartData.indices = !isCategorical ? indexSort(chartData.values, true) : randomSeq(chartData.values.length);\n                    chartData.isImage = true;\n                    const url = dataset.api.getFileUrl(embedding.spatial.image);\n                    let tileSource = new OpenSeadragon.ImageTileSource({\n                        url: url,\n                        buildPyramid: true,\n                        crossOriginPolicy: \"Anonymous\"\n                    });\n                    chartData.tileSource = tileSource;\n                }\n                embeddingData.push(chartData);\n            }\n        });\n    });\n\n}\n\nfunction handleError(dispatch, err, message) {\n    console.log(err);\n    if (err.status === 401) {\n        dispatch(setMessage('Your session has expired. Please login again.'));\n        return dispatch(logout());\n    }\n    if (message == null) {\n        message = err instanceof CustomError ? err.message : 'An unexpected error occurred. Please try again.';\n    }\n    dispatch(setMessage(new Error(message)));\n}\n\nexport function listDatasets() {\n    return function (dispatch, getState) {\n        dispatch(_setLoading(true));\n        return getState().serverInfo.api.getDatasetsPromise()\n            .then(choices => {\n                dispatch(_setDatasetChoices(choices));\n            })\n            .finally(() => {\n                dispatch(_setLoading(false));\n            })\n            .catch(err => {\n                handleError(dispatch, err, 'Unable to retrieve datasets. Please try again.');\n            });\n    };\n}\n\n\n","import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Popover from '@material-ui/core/Popover';\nimport TextField from '@material-ui/core/TextField';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setDialog} from './actions';\n\nexport class DatasetSelector extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {anchorEl: null, searchText: ''};\n    }\n\n    handleClick = (event) => {\n        this.setState({anchorEl: event.currentTarget, searchText: ''});\n    };\n\n    handleClose = () => {\n        this.setState({anchorEl: null, searchText: ''});\n    };\n\n    handleListItemClick = (id) => {\n        const selectedId = this.props.dataset != null ? this.props.dataset.id : null;\n        if (id !== selectedId) {\n            this.props.onChange(id);\n        }\n        this.setState({anchorEl: null, searchText: ''});\n    };\n\n    handleClearSearchText = () => {\n        this.setState({searchText: ''});\n    };\n\n    onSearchChange = (event) => {\n        this.setState({searchText: event.target.value});\n    };\n\n    render() {\n        const {dataset, datasetChoices} = this.props;\n        const {anchorEl, searchText} = this.state;\n\n        const selectedId = dataset != null ? dataset.id : null;\n        const open = Boolean(this.state.anchorEl);\n        let filteredChoices = datasetChoices;\n        const searchTextLower = this.state.searchText.toLowerCase().trim();\n        if (searchTextLower != '') {\n            filteredChoices = filteredChoices.filter(choice => choice.name.toLowerCase().indexOf(searchTextLower) !== -1 ||\n                (choice.description != null && choice.description.toLowerCase().indexOf(searchTextLower) !== -1));\n        }\n\n        return (\n            <React.Fragment>\n                <Button variant=\"contained\" onClick={this.handleClick}\n                        color={selectedId == null ? \"primary\" : \"default\"}\n                        startIcon={<FolderOpenIcon/>}>Open</Button>\n                <Popover open={open}\n                         anchorEl={anchorEl}\n                         onClose={this.handleClose}\n                         anchorOrigin={{\n                             vertical: 'bottom',\n                             horizontal: 'center',\n                         }}\n                         transformOrigin={{\n                             vertical: 'top',\n                             horizontal: 'center',\n                         }}\n                >\n\n                    <TextField style={{padding: 6}} type=\"text\" placeholder={\"Search\"} value={searchText}\n                               onChange={this.onSearchChange}\n                               fullWidth={true}\n                               InputProps={searchText.trim() !== '' ? {\n                                   endAdornment:\n                                       <InputAdornment position=\"end\">\n                                           <IconButton\n                                               aria-label=\"clear\"\n                                               onClick={this.handleClearSearchText}\n                                           >\n                                               <ClearIcon/>\n                                           </IconButton>\n                                       </InputAdornment>\n                               } : null}\n                    />\n                    <List style={{width: 500}} dense disablePadding component=\"nav\" aria-label=\"datasets\">\n                        {filteredChoices.map(choice => {\n                            let text = choice.name;\n                            if (choice.title) {\n                                text += ' - ' + choice.title;\n                            }\n                            return <ListItem alignItems=\"flex-start\" selected={choice.id === selectedId} key={choice.id}\n                                             button onClick={(e) => this.handleListItemClick(choice.id)}>\n\n                                <ListItemText\n                                    primary={text}\n                                    style={{textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap'}}/>\n                            </ListItem>;\n                        })}\n                    </List>\n                </Popover>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        datasetChoices: state.datasetChoices,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClose: value => {\n            dispatch(setDialog(null));\n        }\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DatasetSelector));\n\n","import {scaleSequential} from 'd3-scale';\nimport {isPlainObject} from 'lodash';\nimport {combineReducers} from 'redux';\nimport {\n    ADD_DATASET,\n    DELETE_DATASET,\n    getTraceKey,\n    RESTORE_VIEW,\n    SET_BIN_SUMMARY,\n    SET_BIN_VALUES,\n    SET_CATEGORICAL_COLOR,\n    SET_CATEGORICAL_NAME,\n    SET_CHART_OPTIONS,\n    SET_CHART_SIZE,\n    SET_COMBINE_DATASET_FILTERS,\n    SET_DATASET,\n    SET_DATASET_CHOICES,\n    SET_DATASET_FILTER,\n    SET_DATASET_FILTERS,\n    SET_DIALOG,\n    SET_DOMAIN,\n    SET_DOT_PLOT_DATA,\n    SET_DOT_PLOT_INTERPOLATOR,\n    SET_DOT_PLOT_SORT_ORDER,\n    SET_EMAIL,\n    SET_EMBEDDING_DATA,\n    SET_FEATURE_SUMMARY,\n    SET_GLOBAL_FEATURE_SUMMARY,\n    SET_INTERPOLATOR,\n    SET_LOADING,\n    SET_LOADING_APP,\n    SET_MARKER_OPACITY,\n    SET_MARKER_OPACITY_UI,\n    SET_MARKERS,\n    SET_MESSAGE,\n    SET_NUMBER_OF_BINS,\n    SET_NUMBER_OF_BINS_UI,\n    SET_POINT_SIZE,\n    SET_PRIMARY_CHART_SIZE,\n    SET_PRIMARY_TRACE_KEY,\n    SET_SAVED_DATASET_STATE,\n    SET_SEARCH_TOKENS,\n    SET_SELECTED_DOT_PLOT_DATA,\n    SET_SELECTED_EMBEDDING,\n    SET_SELECTION,\n    SET_SERVER_INFO,\n    SET_TAB,\n    SET_UNSELECTED_MARKER_OPACITY,\n    SET_UNSELECTED_MARKER_OPACITY_UI,\n    SET_USER,\n    UPDATE_DATASET,\n} from '../actions';\nimport {getInterpolator, updateTraceColors} from '../util';\n\nexport const DEFAULT_BIN_SUMMARY = 'max';\nexport const DEFAULT_NUMBER_BINS = 500;\nexport const DEFAULT_POINT_SIZE = 1;\nexport const DEFAULT_MARKER_OPACITY = 1;\nexport const DEFAULT_UNSELECTED_MARKER_OPACITY = 0.1;\nexport const DEFAULT_INTERPOLATOR = 'Viridis';\nexport const DEFAULT_DOT_PLOT_INTERPOLATOR = 'Reds';\nexport const DEFAULT_DRAG_MODE = 'pan';\nexport const DEFAULT_SHOW_LABELS = false;\nexport const DEFAULT_SHOW_AXIS = true;\nexport const DEFAULT_SHOW_FOG = false;\nexport const DEFAULT_DARK_MODE = false;\nexport const DEFAULT_LABEL_FONT_SIZE = 14;\nexport const DEFAULT_LABEL_STROKE_WIDTH = 4;\n\nconst DEFAULT_INTERPOLATOR_OBJ = {\n    name: DEFAULT_INTERPOLATOR,\n    value: getInterpolator(DEFAULT_INTERPOLATOR)\n};\n\nconst DEFAULT_DOT_PLOT_INTERPOLATOR_OBJ = {\n    name: DEFAULT_DOT_PLOT_INTERPOLATOR,\n    value: getInterpolator(DEFAULT_DOT_PLOT_INTERPOLATOR)\n};\n\nconst DEFAULT_PRIMARY_CHART_SIZE = {\n    width: window.innerWidth - 280,\n    height: Math.max(300, window.innerHeight - 410)\n};\n\nconst DEFAULT_CHART_OPTIONS = {\n    animating: false,\n    dragmode: DEFAULT_DRAG_MODE,\n    editSelection: false,\n    showLabels: DEFAULT_SHOW_LABELS,\n    showAxis: DEFAULT_SHOW_AXIS,\n    showFog: DEFAULT_SHOW_FOG,\n    darkMode: DEFAULT_DARK_MODE,\n    labelFontSize: DEFAULT_LABEL_FONT_SIZE,\n    labelStrokeWidth: DEFAULT_LABEL_STROKE_WIDTH\n};\n\nfunction chartSize(state = 300, action) {\n    switch (action.type) {\n        case SET_CHART_SIZE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction primaryChartSize(state = DEFAULT_PRIMARY_CHART_SIZE, action) {\n    switch (action.type) {\n        case SET_PRIMARY_CHART_SIZE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n/**\n *\n * @param state Array of value, type where type can be X, obs, or obsCat\n * @param action\n * @returns {*|*[]}\n */\nfunction searchTokens(state = [], action) {\n    switch (action.type) {\n        case SET_SEARCH_TOKENS:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.q || [];\n        default:\n            return state;\n    }\n}\n\n\nfunction chartOptions(state = DEFAULT_CHART_OPTIONS, action) {\n    switch (action.type) {\n        case SET_CHART_OPTIONS:\n            return Object.assign({}, action.payload);\n        case RESTORE_VIEW:\n            return action.payload.chartOptions ? Object.assign(DEFAULT_CHART_OPTIONS, action.payload.chartOptions) : state;\n        default:\n            return state;\n    }\n}\n\nfunction dataset(state = null, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            document.title = action.payload == null ? 'Cirro' : action.payload.name + ' - Cirro';\n            return action.payload;\n        case UPDATE_DATASET:\n            if (action.payload.id === state.id) { // update name, description, url\n                document.title = action.payload.name + ' - Cirro';\n                return Object.assign(state, action.payload);\n            }\n        default:\n            return state;\n    }\n}\n\nfunction datasetChoices(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET_CHOICES:\n            action.payload.sort((a, b) => {\n                a = a.name.toLowerCase();\n                b = b.name.toLowerCase();\n                return a === b ? 0 : (a < b ? -1 : 1);\n            });\n\n            return action.payload;\n        case SET_EMAIL:\n            if (action.payload == null) {\n                return [];\n            }\n            return state;\n        case ADD_DATASET:\n            state.push(action.payload);\n            state.sort((a, b) => {\n                a = a.name.toLowerCase();\n                b = b.name.toLowerCase();\n                return a === b ? 0 : (a < b ? -1 : 1);\n            });\n            return state.slice();\n        case UPDATE_DATASET:\n        case DELETE_DATASET:\n            let index = -1;\n            for (let i = 0; i < state.length; i++) {\n                if (state[i].id === action.payload.id) {\n                    index = i;\n                    break;\n                }\n            }\n            if (index !== -1) {\n                if (action.type === UPDATE_DATASET) {\n                    state[index] = action.payload;\n                    state.sort((a, b) => {\n                        a = a.name.toLowerCase();\n                        b = b.name.toLowerCase();\n                        return a === b ? 0 : (a < b ? -1 : 1);\n                    });\n                } else {\n                    state.splice(index, 1);\n                }\n\n                return state.slice();\n            }\n            return state;\n        default:\n            return state;\n    }\n}\n\n// set the selected embeddings, each embedding has name (str) e.g X_umap, nbins (int), _nbins (str), agg (str), bin (boolean), dimensions (int), precomputed (bool)\nfunction embeddings(state = [], action) {\n    switch (action.type) {\n        case SET_SELECTED_EMBEDDING:\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        case RESTORE_VIEW:\n            return action.payload.embeddings != null ? action.payload.embeddings : state;\n        default:\n            return state;\n    }\n}\n\nfunction markers(state = [], action) {\n    switch (action.type) {\n        case SET_MARKERS:\n            return action.payload;\n        case SET_DATASET:\n            let result = action.payload == null ? [] : action.payload.markers || [];\n            if (isPlainObject(result)) { // old style, category=>name=>features\n                let newResults = [];\n                for (let categoryName in result) {\n                    let category = result[categoryName];\n                    for (let name in category) {\n                        newResults.push({\n                            category: categoryName,\n                            name: name,\n                            id: categoryName + '-' + name,\n                            readonly: true,\n                            features: category[name]\n                        });\n                    }\n                }\n                result = newResults;\n            }\n\n            if (action.payload != null && action.payload.markers_read_only != null) {\n                if (isPlainObject(action.payload.markers_read_only)) { // old style, name => features\n                    let markers = action.payload.markers_read_only;\n                    for (let categoryName in markers) {\n                        let category = markers[categoryName];\n                        for (let name in category) {\n                            result.push({\n                                category: categoryName,\n                                name: name,\n                                id: categoryName + '-' + name,\n                                readonly: true,\n                                features: category[name]\n                            });\n                        }\n                    }\n                } else {\n                    action.payload.markers_read_only.forEach(item => {\n                        item.readonly = true;\n                        result.push(item);\n                    });\n                }\n            }\n            result.forEach(item => {\n                if (item.id == null) {\n                    item.id = item.category + '-' + item.name;\n                }\n            });\n\n            return result;\n        default:\n            return state;\n    }\n}\n\n\nfunction binSummary(state = DEFAULT_BIN_SUMMARY, action) {\n    switch (action.type) {\n        case SET_BIN_SUMMARY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_BIN_SUMMARY;\n        case RESTORE_VIEW:\n            return action.payload.binSummary != null ? action.payload.binSummary : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction binValues(state = false, action) {\n    switch (action.type) {\n        case SET_BIN_VALUES:\n            return action.payload;\n        case SET_DATASET:\n            return false;\n        case RESTORE_VIEW:\n            return action.payload.binValues != null ? action.payload.binValues : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction numberOfBins(state = DEFAULT_NUMBER_BINS, action) {\n    switch (action.type) {\n        case SET_NUMBER_OF_BINS:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_NUMBER_BINS;\n        case RESTORE_VIEW:\n            return action.payload.numberOfBins != null ? action.payload.numberOfBins : state;\n        default:\n            return state;\n    }\n}\n\nfunction numberOfBinsUI(state = DEFAULT_NUMBER_BINS, action) {\n    switch (action.type) {\n        case SET_NUMBER_OF_BINS:\n        case SET_NUMBER_OF_BINS_UI:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_NUMBER_BINS;\n        case RESTORE_VIEW:\n            return action.payload.numberOfBins != null ? action.payload.numberOfBins : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction markerOpacity(state = DEFAULT_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_MARKER_OPACITY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.markerOpacity != null ? action.payload.markerOpacity : state;\n\n        default:\n            return state;\n    }\n}\n\nfunction unselectedMarkerOpacity(state = DEFAULT_UNSELECTED_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_MARKER_OPACITY:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_UNSELECTED_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.unselectedMarkerOpacity != null ? action.payload.unselectedMarkerOpacity : state;\n        default:\n            return state;\n    }\n}\n\nfunction markerOpacityUI(state = 1, action) {\n    switch (action.type) {\n        case SET_MARKER_OPACITY:\n        case SET_MARKER_OPACITY_UI:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.markerOpacity != null ? action.payload.markerOpacity : state;\n        default:\n            return state;\n    }\n}\n\nfunction unselectedMarkerOpacityUI(state = DEFAULT_UNSELECTED_MARKER_OPACITY, action) {\n    switch (action.type) {\n        case SET_UNSELECTED_MARKER_OPACITY:\n        case SET_UNSELECTED_MARKER_OPACITY_UI:\n            return action.payload;\n        case SET_DATASET:\n            return DEFAULT_UNSELECTED_MARKER_OPACITY;\n        case RESTORE_VIEW:\n            return action.payload.unselectedMarkerOpacity != null ? action.payload.unselectedMarkerOpacity : state;\n        default:\n            return state;\n    }\n}\n\n\nfunction message(state = null, action) {\n    switch (action.type) {\n        case SET_MESSAGE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction email(state = null, action) {\n    switch (action.type) {\n        case SET_EMAIL:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction user(state = {}, action) {\n    switch (action.type) {\n        case SET_USER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n/**\n * Object that contains count (number), chart (object). Each key in chart is the full layout name. Each value contains\n * userPoints (selected points in chart space) and points (the selected points in bin space if binning)\n */\nfunction selection(state = {chart: {}}, action) {\n    switch (action.type) {\n        case SET_SELECTION:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n/**\n * Feature summary maps measure and dimension names to another object containing\n * categories and counts for dimensions, and statistics such as min, max for measures.\n * Features summaries are in the space of selected cells.\n */\nfunction featureSummary(state = {}, action) {\n    switch (action.type) {\n        case SET_FEATURE_SUMMARY:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n/**\n * Feature summary maps measure and dimension names to another object containing\n * categories and counts for dimensions, and statistics such as min, max for measures.\n * Features summaries are in the space of all cells.\n */\nfunction globalFeatureSummary(state = {}, action) {\n    switch (action.type) {\n        case SET_GLOBAL_FEATURE_SUMMARY:\n            return action.payload;\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\nfunction serverInfo(state = {}, action) {\n    switch (action.type) {\n        case SET_SERVER_INFO:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction loadingApp(state = {loading: false, progress: 0}, action) {\n    switch (action.type) {\n        case SET_LOADING_APP:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction tab(state = 'embedding', action) {\n    switch (action.type) {\n        case SET_TAB:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nfunction dialog(state = null, action) {\n    switch (action.type) {\n        case SET_DIALOG:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n// [{\n//     \"categories\": array,\n//     \"name\": str,\n//     \"fractionRange\":[number],\n//     \"meanRange\":[number]\n//     \"values\": [{\n//         \"name\": str,\n//         \"fractionExpressed\": array\n//         \"mean\": array,\n//         \"active\": bool\n//     }]\n// }]\n\nfunction updateDotPlotDataRange(data) {\n    data.forEach(categoryItem => {\n        let fractionRange = [Number.MAX_VALUE, -Number.MAX_VALUE];\n        let meanRange = [Number.MAX_VALUE, -Number.MAX_VALUE];\n        categoryItem.values.forEach(feature => {\n            for (let i = 0, n = feature.mean.length; i < n; i++) {\n                fractionRange[0] = Math.min(feature.fractionExpressed[i], fractionRange[0]);\n                fractionRange[1] = Math.max(feature.fractionExpressed[i], fractionRange[1]);\n                meanRange[0] = Math.min(feature.mean[i], meanRange[0]);\n                meanRange[1] = Math.max(feature.mean[i], meanRange[1]);\n            }\n        });\n        categoryItem.meanRange = meanRange;\n        categoryItem.fractionRange = fractionRange;\n    });\n}\n\n\nfunction dotPlotInterpolator(state = DEFAULT_DOT_PLOT_INTERPOLATOR_OBJ, action) {\n\n    switch (action.type) {\n        case SET_DOT_PLOT_INTERPOLATOR:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.dotPlotInterpolator != null ? action.payload.dotPlotInterpolator : state;\n        default:\n            return state;\n    }\n}\n\nfunction dotPlotData(state = [], action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            for (let i = 0; i < state.length; i++) {\n                let item = state[i];\n                state[i] = Object.assign({}, item);\n            }\n            return state.slice();\n        case SET_DOT_PLOT_SORT_ORDER:\n            const name = action.payload.name;\n            const sortBy = action.payload.value;\n            for (let i = 0; i < state.length; i++) {\n                let item = state[i];\n                if (item.name === name) {\n                    item.sortBy = sortBy;\n                    state[i] = Object.assign({}, item);\n                    break;\n                }\n            }\n            return state.slice();\n        case SET_DOT_PLOT_DATA:\n            updateDotPlotDataRange(action.payload);\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        default:\n            return state;\n    }\n}\n\nfunction selectedDotPlotData(state = [], action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            for (let i = 0; i < state.length; i++) {\n                let item = state[i];\n                state[i] = Object.assign({}, item);\n            }\n            return state.slice();\n        case SET_DOT_PLOT_SORT_ORDER:\n            const name = action.payload.name;\n            const sortBy = action.payload.value;\n            for (let i = 0; i < state.length; i++) {\n                let item = state[i];\n                if (item.name === name) {\n                    item.sortBy = sortBy;\n                    state[i] = Object.assign({}, item);\n                    break;\n                }\n            }\n            return state.slice();\n        case SET_SELECTED_DOT_PLOT_DATA:\n            updateDotPlotDataRange(action.payload);\n            return action.payload;\n        case SET_DATASET:\n            return [];\n        default:\n            return state;\n    }\n}\n\n\nfunction datasetFilters(state = [], action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return [];\n        case SET_DATASET_FILTERS:\n            //action.payload.sort()\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction datasetFilter(state = {}, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return {};\n        case SET_DATASET_FILTER:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.datasetFilter != null ? action.payload.datasetFilter : state;\n        default:\n            return state;\n    }\n}\n\nfunction combineDatasetFilters(state = 'and', action) {\n    switch (action.type) {\n        case SET_COMBINE_DATASET_FILTERS:\n            return action.payload;\n        case SET_DATASET:\n            return \"and\";\n        case RESTORE_VIEW:\n            return action.payload.combineDatasetFilters != null ? action.payload.combineDatasetFilters : state;\n        default:\n            return state;\n    }\n}\n\n// category -> value -> newValue\nfunction categoricalNames(state = {}, action) {\n    switch (action.type) {\n        case SET_CATEGORICAL_NAME:\n            let category = state[action.payload.name];\n            if (category === undefined) {\n                category = {};\n                state[action.payload.name] = category;\n            }\n            if (action.payload.value == null || action.payload.value === '') {\n                delete category[action.payload.oldValue];\n            } else {\n                category[action.payload.oldValue] = action.payload.value;\n            }\n            return Object.assign({}, state);\n        case SET_DATASET:\n            return {};\n        default:\n            return state;\n    }\n}\n\n// maps keys to values, features=>array, embedding key=>x,y,z, feature_embedding_key=>array for binned embeddings\nfunction cachedData(state = {}, action) {\n    switch (action.type) {\n        case SET_DATASET :\n            return {};\n    }\n    return state;\n\n}\n\n// each item has  data (list of traces, each trace has x, y, etc.), layout\nfunction embeddingData(state = [], action) {\n    switch (action.type) {\n        case SET_EMBEDDING_DATA :\n            return action.payload;\n        case SET_SELECTION:\n            return state.slice();\n        case SET_DOMAIN:\n            state.forEach((traceInfo, stateIndex) => {\n                if (traceInfo.continuous && traceInfo.name === action.payload.name) {\n                    const summary = action.payload.summary;\n                    let domain = [summary.min, summary.max];\n                    if (summary.customMin != null && !isNaN(summary.customMin)) {\n                        domain[0] = summary.customMin;\n                    }\n                    if (summary.customMax != null && !isNaN(summary.customMax)) {\n                        domain[1] = summary.customMax;\n                    }\n                    traceInfo.colorScale.domain(domain);\n                    updateTraceColors(traceInfo);\n                }\n            });\n            return state.slice();\n        case SET_CATEGORICAL_COLOR:\n            state.forEach((traceInfo, stateIndex) => {\n                if (!traceInfo.continuous && traceInfo.name === action.payload.name) {\n                    let index = traceInfo.colorScale.domain().indexOf(action.payload.value);\n                    let range = traceInfo.colorScale.range();\n                    range[index] = action.payload.color;\n                    traceInfo.colorScale.range(range);\n                    updateTraceColors(traceInfo);\n                }\n            });\n            return state.slice();\n\n        case SET_INTERPOLATOR:\n            // update colors for existing continuous traces\n\n            state.forEach((traceInfo, stateIndex) => {\n                if (traceInfo.continuous) {\n                    let domain = traceInfo.colorScale.domain();\n                    traceInfo.colorScale = scaleSequential(action.payload.value).domain(domain);\n                    updateTraceColors(traceInfo);\n                }\n            });\n            return state.slice();\n        case SET_DATASET:\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport function pointSize(state = DEFAULT_POINT_SIZE, action) {\n    switch (action.type) {\n        case SET_POINT_SIZE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\n// used to restore state when toggling datasets\nexport function savedDatasetState(state = {}, action) {\n    switch (action.type) {\n        case SET_SAVED_DATASET_STATE:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport function primaryTraceKey(state = null, action) {\n    switch (action.type) {\n        case SET_DATASET:\n            return null;\n        case SET_PRIMARY_TRACE_KEY:\n            return action.payload;\n        case SET_EMBEDDING_DATA:\n            let traces = action.payload.filter(traceInfo => traceInfo.active);\n            if (traces.length === 0) {\n                return null;\n            }\n            const activeTrace = traces[traces.length - 1];\n            return getTraceKey(activeTrace); // last feature becomes primary\n        default:\n            return state;\n    }\n}\n\nfunction loading(state = false, action) {\n    switch (action.type) {\n        case SET_LOADING:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\n\nfunction interpolator(state = DEFAULT_INTERPOLATOR_OBJ, action) {\n\n    switch (action.type) {\n        case SET_INTERPOLATOR:\n            return action.payload;\n        case RESTORE_VIEW:\n            return action.payload.colorScheme != null ? action.payload.colorScheme : state;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    binSummary,\n    binValues,\n    cachedData,\n    categoricalNames,\n    chartOptions,\n    chartSize,\n    combineDatasetFilters,\n    dataset,\n    datasetChoices,\n    datasetFilter,\n    datasetFilters,\n    dialog,\n    dotPlotData,\n    dotPlotInterpolator,\n    email,\n    embeddingData,\n    embeddings,\n    featureSummary,\n    globalFeatureSummary,\n    interpolator,\n    loading,\n    loadingApp,\n    markerOpacity,\n    markerOpacityUI,\n    markers,\n    message,\n    numberOfBins,\n    numberOfBinsUI,\n    pointSize,\n    primaryChartSize,\n    primaryTraceKey,\n    savedDatasetState,\n    searchTokens,\n    selectedDotPlotData,\n    selection,\n    serverInfo,\n    tab,\n    unselectedMarkerOpacity,\n    unselectedMarkerOpacityUI,\n    user\n\n});\n","import {Divider, IconButton, Menu, Tooltip} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport {withStyles} from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Brightness2Icon from '@material-ui/icons/Brightness3';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {connect} from 'react-redux';\nimport {\n    DELETE_DATASET_DIALOG,\n    EDIT_DATASET_DIALOG,\n    HELP_DIALOG,\n    IMPORT_DATASET_DIALOG,\n    login,\n    logout,\n    setChartOptions,\n    setDataset,\n    setDialog,\n    setMessage,\n    setSavedDatasetState,\n    setTab,\n} from './actions';\nimport {drawerWidth} from './App';\nimport DatasetSelector from './DatasetSelector';\nimport {intFormat} from './formatters';\nimport {\n    DEFAULT_DARK_MODE,\n    DEFAULT_INTERPOLATOR,\n    DEFAULT_LABEL_FONT_SIZE,\n    DEFAULT_LABEL_STROKE_WIDTH,\n    DEFAULT_MARKER_OPACITY,\n    DEFAULT_SHOW_AXIS,\n    DEFAULT_SHOW_FOG,\n    DEFAULT_SHOW_LABELS,\n    DEFAULT_UNSELECTED_MARKER_OPACITY\n} from \"./reducers\";\n\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        'flex-direction': 'column',\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n});\nconst AntTab = withStyles(theme => ({\n    root: {\n        minWidth: 50,\n        textTransform: 'none',\n        fontWeight: theme.typography.fontWeightRegular,\n        marginRight: theme.spacing(0),\n        '&:hover': {\n            color: '#40a9ff',\n            opacity: 1,\n        },\n        '&$selected': {\n            color: '#1890ff',\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n        '&:focus': {\n            color: '#40a9ff',\n        },\n    },\n    selected: {},\n}))(props => <Tab disableRipple {...props} />);\n\nclass AppHeader extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            userMenuOpen: false,\n            userMenuAnchorEl: null,\n            moreMenuOpen: false,\n            moreMenuAnchorEl: null,\n        };\n\n    }\n\n    handleTabChange = (event, value) => {\n        this.props.handleTab(value);\n    };\n\n\n    handleEmbeddingsChange = (event) => {\n\n        const embeddings = event.target.value;\n        const selection = [];\n        embeddings.forEach(embedding => {\n\n            if (!embedding.precomputed) {\n                embedding = Object.assign(embedding, {\n                    bin: this.props.binValues,\n                    nbins: this.props.numberOfBins,\n                    _nbins: this.props.numberOfBinsUI,\n                    agg: this.props.binSummary\n                });\n            }\n            selection.push(embedding);\n\n        });\n        this.props.handleEmbeddings(selection);\n    };\n\n\n    handleUserMenuClose = () => {\n        this.setState({userMenuOpen: false});\n    };\n\n    handleMoreMenuClose = () => {\n        this.setState({moreMenuOpen: false});\n    };\n\n\n    handleHelp = () => {\n        this.props.handleDialog(HELP_DIALOG);\n    };\n\n\n    handleUserMenuOpen = (event) => {\n        this.setState({userMenuOpen: true, userMenuAnchorEl: event.currentTarget});\n    };\n    handleMoreMenuOpen = (event) => {\n        this.setState({moreMenuOpen: true, moreMenuAnchorEl: event.currentTarget});\n    };\n\n    getLinkJson = () => {\n        const {chartOptions, combineDatasetFilters, primaryTraceKey, dataset, embeddings, searchTokens, datasetFilter, interpolator, markerOpacity, unselectedMarkerOpacity, dotPlotData} = this.props;\n\n        let json = {\n            dataset: dataset.id,\n            embeddings: embeddings.map(embedding => {\n                if (embedding.bin) {\n                    embedding = Object.assign({}, embedding);\n                    delete embedding._bin;\n                    return embedding;\n                } else {\n                    return {name: embedding.name, dimensions: embedding.dimensions};\n                }\n\n            })\n        };\n\n        const chartRef = chartOptions.ref;\n        if (json.embeddings.length > 0 && chartRef != null && chartRef.scatterPlot) {\n            json.camera = chartRef.scatterPlot.getCameraDef();\n\n        }\n\n        let jsonChartOptions = {};\n        if (json.embeddings.length > 0) {\n            jsonChartOptions.activeEmbedding = primaryTraceKey;\n        }\n        const defaultChartOptions = {\n            showLabels: DEFAULT_SHOW_LABELS, showAxis: DEFAULT_SHOW_AXIS,\n            showFog: DEFAULT_SHOW_FOG, darkMode: DEFAULT_DARK_MODE,\n            labelFontSize: DEFAULT_LABEL_FONT_SIZE,\n            labelStrokeWidth: DEFAULT_LABEL_STROKE_WIDTH\n        };\n\n        for (let key in defaultChartOptions) {\n            let value = chartOptions[key];\n            if (value !== defaultChartOptions[key]) {\n                jsonChartOptions[key] = value;\n            }\n        }\n        if (Object.keys(jsonChartOptions).length > 0) {\n            json.chartOptions = jsonChartOptions;\n        }\n\n        if (searchTokens.length > 0) {\n            json.q = searchTokens;\n        }\n\n        let datasetFilterJson = {};\n        for (let key in datasetFilter) {\n            let value = datasetFilter[key];\n            if (window.Array.isArray(value)) {\n                datasetFilterJson[key] = value;\n            } else {\n                if (value.operation !== '' && !isNaN(value.value) && value.value != null) {\n                    datasetFilterJson[key] = {operation: value.operation, value: value.value};\n                }\n            }\n        }\n        if (Object.keys(datasetFilterJson).length > 0) {\n            json.datasetFilter = datasetFilterJson;\n\n        }\n        json.combineDatasetFilters = combineDatasetFilters;\n        if (markerOpacity !== DEFAULT_MARKER_OPACITY) {\n            json.markerOpacity = markerOpacity;\n        }\n        if (unselectedMarkerOpacity !== DEFAULT_UNSELECTED_MARKER_OPACITY) {\n            json.unselectedMarkerOpacity = unselectedMarkerOpacity;\n        }\n\n        if (dotPlotData && dotPlotData.length > 0) {\n            let sortOrder = {};\n            dotPlotData.forEach(data => {\n                sortOrder[data.name] = data.sortBy;\n            });\n            json.sort = sortOrder;\n        }\n        if (interpolator.name !== DEFAULT_INTERPOLATOR) {\n            json.colorScheme = interpolator.name;\n        }\n        return json;\n    };\n\n    handleDataset = (id) => {\n        if (this.props.dataset != null) {\n            const savedDatasetState = this.props.savedDatasetState;\n            const link = this.getLinkJson();\n            link.dataset = null;\n            savedDatasetState[this.props.dataset.id] = link;\n            this.props.handleSavedDatasetState(savedDatasetState);\n        }\n        this.props.handleDataset(id);\n    };\n\n    copyLink = (event) => {\n\n        let linkText = window.location.protocol + '//' + window.location.host + window.location.pathname;\n        linkText += '?q=' + encodeURIComponent(JSON.stringify(this.getLinkJson()));\n        const container = document.activeElement;\n        const fakeElem = document.createElement('textarea');\n        const isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n        fakeElem.style.fontSize = '12pt';\n        fakeElem.style.border = '0';\n        fakeElem.style.padding = '0';\n        fakeElem.style.margin = '0';\n        // Move element out of screen horizontally\n        fakeElem.style.position = 'absolute';\n        fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n        fakeElem.setAttribute('readonly', '');\n        // Move element to the same position vertically\n        let yPosition = window.pageYOffset || document.documentElement.scrollTop;\n        fakeElem.style.top = yPosition + 'px';\n        fakeElem.value = linkText;\n        container.appendChild(fakeElem);\n\n        fakeElem.select();\n        fakeElem.setSelectionRange(0, fakeElem.value.length);\n\n        document.execCommand('copy');\n\n        const fakeHandlerCallback = (event) => {\n            document.activeElement.blur();\n            window.getSelection().removeAllRanges();\n            container.removeChild(fakeElem);\n            container.removeEventListener('click', fakeHandlerCallback);\n        };\n        this.props.setMessage('Link copied');\n        container.addEventListener('click', fakeHandlerCallback);\n        this.setState({moreMenuOpen: false});\n\n    };\n\n\n    onDarkMode = () => {\n        this.props.chartOptions.darkMode = !this.props.chartOptions.darkMode;\n        this.props.handleChartOptions(this.props.chartOptions);\n    };\n\n    handleLogout = () => {\n        this.setState({userMenuOpen: false});\n        this.props.handleLogout();\n    };\n\n    handleImportDataset = (event) => {\n        this.props.handleDialog(IMPORT_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleSettings = (event) => {\n        this.props.handleDialog(EDIT_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleDelete = (event) => {\n        this.props.handleDialog(DELETE_DATASET_DIALOG);\n        this.setState({moreMenuOpen: false});\n    };\n\n    handleShowDatasetDetails = (event) => {\n        this.setState({datasetDetailsEl: event.currentTarget});\n    };\n    handleCloseDatasetDetails = (event) => {\n        this.setState({datasetDetailsEl: null});\n    };\n\n    render() {\n        const {\n            dataset, loadingApp, email, selection, classes, serverInfo, tab, user\n        } = this.props;\n\n\n        const datasetDetailsOpen = Boolean(this.state.datasetDetailsEl);\n        const hasDatasetDetails = dataset != null && (dataset.title || dataset.description);\n        const shape = dataset != null && dataset.shape != null ? dataset.shape : null;\n        const hasSelection = dataset != null && shape != null && shape[0] > 0 && !isNaN(selection.count);\n\n        const showNewDataset = user != null && user.importer && !loadingApp.loading;\n        const showEditDeleteDataset = dataset !== null && dataset.owner && !loadingApp.loading;\n        const showMoreMenu = (showNewDataset || dataset != null) && !loadingApp.loading;\n        const isSignedOut = !loadingApp.loading && email == null && serverInfo.clientId !== '';\n        return (\n            <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\n                <Toolbar variant=\"dense\">\n\n                    {/*{datasetChoices.length > 0 && <Select*/}\n                    {/*    style={{marginRight: 6}}*/}\n                    {/*    disableUnderline={true}*/}\n                    {/*    displayEmpty={true}*/}\n                    {/*    value={dataset == null ? '' : dataset.id}*/}\n                    {/*    onChange={this.handleDataset}*/}\n                    {/*    inputProps={{*/}\n                    {/*        name: 'dataset',*/}\n                    {/*        id: 'dataset-id',*/}\n                    {/*    }}*/}\n                    {/*>*/}\n                    {/*    <MenuItem key=\"\" value=\"\" disabled>*/}\n                    {/*        Choose a dataset*/}\n                    {/*    </MenuItem>*/}\n                    {/*    {datasetChoices.map(dataset => <MenuItem*/}\n                    {/*        key={dataset.id} value={dataset.id}>{dataset.name}</MenuItem>)}*/}\n                    {/*</Select>}*/}\n                    {dataset != null && <Popover\n                        id={\"dataset-details\"}\n                        open={datasetDetailsOpen}\n                        anchorEl={this.state.datasetDetailsEl}\n                        onClose={this.handleCloseDatasetDetails}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                        }}\n                    >\n                        <div style={{width: 500}}>\n                            {dataset.title && <Typography className={classes.typography}>\n                                {dataset.title}\n                            </Typography>}\n                            {dataset.description &&\n                            <ReactMarkdown linkTarget=\"_blank\" children={dataset.description}/>}\n                        </div>\n                    </Popover>\n                    }\n                    {dataset != null &&\n                    <Typography\n                        aria-owns={this.state.datasetDetailsOpen ? 'dataset-details' : undefined}\n                        aria-haspopup=\"true\"\n                        component={\"h3\"}>\n                        {hasDatasetDetails &&\n                        <Button onClick={this.handleShowDatasetDetails}><b>{dataset.name}</b></Button>}\n                        {!hasDatasetDetails && <b>{dataset.name}</b>}\n                        <small>&nbsp;\n                            {hasSelection && shape != null && intFormat(selection.count) + ' / '}\n                            {shape != null && intFormat(shape[0]) + ' cells'}\n                        </small>\n\n                    </Typography>\n                    }\n\n                    {dataset != null && <Tabs\n                        value={tab}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={this.handleTabChange}\n                        aria-label=\"view\"\n\n                    >\n                        <AntTab value=\"embedding\" label=\"Embeddings\"/>\n                        <AntTab value=\"dot_plot\" label=\"Dot Plot\"/>\n                    </Tabs>}\n\n                    <div className={\"cirro-condensed\"}>\n                        {/*<CloudIcon style={{verticalAlign: 'bottom'}} fontSize={'large'}/>*/}\n                        {/*<h3*/}\n                        {/*    style={{display: 'inline', marginRight: 20}}>Cirro</h3>*/}\n\n\n                    </div>\n                    <div style={{marginLeft: 'auto'}}>\n                        {!loadingApp.loading && !isSignedOut && <DatasetSelector onChange={this.handleDataset}/>}\n                        {showMoreMenu && <Tooltip title={'More'}>\n                            <IconButton aria-label=\"Menu\" aria-haspopup=\"true\"\n                                        onClick={this.handleMoreMenuOpen}>\n                                <MoreVertIcon/>\n                            </IconButton>\n                        </Tooltip>}\n                        {showMoreMenu && <Menu id=\"more-menu\"\n                                               anchorEl={this.state.moreMenuAnchorEl}\n                                               anchorOrigin={{\n                                                   vertical: 'top',\n                                                   horizontal: 'right',\n                                               }}\n\n                                               transformOrigin={{\n                                                   vertical: 'top',\n                                                   horizontal: 'right',\n                                               }} open={this.state.moreMenuOpen}\n                                               onClose={this.handleMoreMenuClose}>\n                            {showNewDataset && <MenuItem onClick={this.handleImportDataset}>\n                                New Dataset\n                            </MenuItem>}\n\n                            {showEditDeleteDataset && <MenuItem onClick={this.handleSettings}>Edit Dataset</MenuItem>}\n                            {showEditDeleteDataset && <MenuItem onClick={this.handleDelete}>Delete Dataset</MenuItem>}\n                            {(showNewDataset || showEditDeleteDataset) && dataset != null && <Divider/>}\n                            {dataset != null && <MenuItem onClick={this.copyLink}>Copy Link </MenuItem>}\n                        </Menu>}\n\n\n                        {<Tooltip title={\"Toggle Light/Dark Theme\"}>\n                            <IconButton edge={false} className={this.props.chartOptions.darkMode ? 'cirro-active' : ''}\n                                        aria-label=\"Toggle Theme\" onClick={() => this.onDarkMode()}>\n                                <Brightness2Icon/>\n                            </IconButton>\n                        </Tooltip>}\n                        <Tooltip title={'Help'}>\n                            <IconButton aria-label=\"Help\"\n                                        onClick={this.handleHelp}>\n                                <HelpIcon/>\n                            </IconButton>\n                        </Tooltip>\n                        {email != null && email !== '' &&\n                        <Tooltip title={email}>\n                            <IconButton aria-label=\"Menu\" aria-haspopup=\"true\"\n                                        onClick={this.handleUserMenuOpen}>\n                                <AccountCircle/>\n                            </IconButton>\n                        </Tooltip>}\n                        {email != null && email !== '' &&\n                        <Menu id=\"menu-user\"\n                              anchorEl={this.state.userMenuAnchorEl}\n                              anchorOrigin={{\n                                  vertical: 'top',\n                                  horizontal: 'right',\n                              }}\n\n                              transformOrigin={{\n                                  vertical: 'top',\n                                  horizontal: 'right',\n                              }} open={this.state.userMenuOpen}\n                              onClose={this.handleUserMenuClose}>\n                            <MenuItem onClick={this.handleLogout}>Sign Out</MenuItem>\n                        </Menu>}\n\n\n                        {isSignedOut && <Button style={{whiteSpace: 'nowrap'}} variant=\"outlined\" color=\"primary\"\n                                                onClick={this.props.handleLogin}>Sign In</Button>}\n                    </div>\n                </Toolbar>\n            </AppBar>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        chartOptions: state.chartOptions,\n        embeddings: state.embeddings,\n        searchTokens: state.searchTokens,\n        primaryTraceKey: state.primaryTraceKey,\n        binSummary: state.binSummary,\n        binValues: state.binValues,\n        combineDatasetFilters: state.combineDatasetFilters,\n        datasetFilter: state.datasetFilter,\n        markerOpacity: state.markerOpacity,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n        savedDatasetState: state.savedDatasetState,\n        datasetChoices: state.datasetChoices,\n        dialog: state.dialog,\n        dotPlotData: state.dotPlotData,\n        email: state.email,\n\n        interpolator: state.interpolator,\n        loading: state.loading,\n        loadingApp: state.loadingApp,\n\n        message: state.message,\n\n        selection: state.selection,\n        serverInfo: state.serverInfo,\n        user: state.user,\n        tab: state.tab\n    };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleTab: (value) => {\n            dispatch(setTab(value));\n        },\n        setMessage: (value) => {\n            dispatch(setMessage(value));\n        },\n        handleLogin: () => {\n            dispatch(login());\n        },\n        handleLogout: () => {\n            dispatch(logout());\n        },\n\n        handleSavedDatasetState: value => {\n            dispatch(setSavedDatasetState(value));\n        },\n\n        handleDataset: value => {\n            dispatch(setDataset(value));\n        },\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n        handleChartOptions: (value) => {\n            dispatch(setChartOptions(value));\n        }\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(AppHeader));\n\n\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {deleteDataset, setDialog} from './actions';\n\nclass DeleteDatasetDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n        };\n    }\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleDelete = () => {\n        this.setState({loading: true});\n        this.props.handleDelete({dataset: this.props.dataset});\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"delete-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"delete-dataset-dialog-title\">Delete Dataset</DialogTitle>\n                <DialogContent>\n                    {this.props.dataset && <h3>Are you sure you want to delete {this.props.dataset.name}?</h3>}\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={this.state.loading} onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={this.state.loading} onClick={this.handleDelete} color=\"primary\">\n                        Delete\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        email: state.email,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        handleDelete: value => {\n            dispatch(deleteDataset(value));\n        },\n\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DeleteDatasetDialog));\n\n","import Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {scaleSequential} from 'd3-scale';\nimport * as scaleChromatic from 'd3-scale-chromatic';\nimport React from 'react';\nimport ColorSchemeLegend from './ColorSchemeLegend';\nimport {fixInterpolatorName, getInterpolator, interpolators} from \"./util\";\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        'flex-direction': 'column',\n    },\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(1)\n    },\n\n});\n\nfunction stripInterpolate(name) {\n    if (name.startsWith(\"interpolate\")) {\n        name = name.substring(\"interpolate\".length);\n    }\n    return name;\n}\n\n\nclass ColorSchemeSelector extends React.PureComponent {\n    handleInterpolatorChange = (event) => {\n        let name = event.target.value;\n        this.props.handleInterpolator({name: name, value: getInterpolator(name)});\n    };\n\n    getScale(name) {\n        return scaleSequential(scaleChromatic[name]).domain([0, 1]);\n    }\n\n    render() {\n        const {classes} = this.props;\n        let interpolator = fixInterpolatorName(this.props.interpolator.name);\n        const width = 174;\n        const height = 20;\n        return (\n            <Select\n                input={<Input id=\"color-scheme\"/>}\n                className={classes.select}\n                onChange={this.handleInterpolatorChange}\n                value={interpolator}\n                multiple={false}>\n                <MenuItem key=\"Diverging\" value=\"Diverging\" divider disabled>\n                    Diverging\n                </MenuItem>\n                {interpolators['Diverging'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n\n                    </MenuItem>))}\n\n                <MenuItem key=\"Sequential (Single Hue)\" value=\"Sequential (Single Hue)\" divider disabled>\n                    Sequential (Single Hue)\n                </MenuItem>\n                {interpolators['Sequential (Single Hue)'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n                    </MenuItem>))}\n\n                <MenuItem key=\"Sequential (Multi-Hue)\" value=\"Sequential (Multi-Hue)\" divider disabled>\n                    Sequential (Multi-Hue)\n                </MenuItem>\n                {interpolators['Sequential (Multi-Hue)'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n\n                    </MenuItem>))}\n\n                <MenuItem key=\"Cyclical\" value=\"Cyclical\" divider disabled>\n                    Cyclical\n                </MenuItem>\n                {interpolators['Cyclical'].map(item => (\n                    <MenuItem title={stripInterpolate(item)} value={item} key={item}>\n                        <ColorSchemeLegend width={width}\n                                           label={false} height={height}\n                                           scale={this.getScale(item)}/>\n                    </MenuItem>))}\n\n\n            </Select>\n        );\n    }\n\n}\n\n\nexport default withStyles(styles)(ColorSchemeSelector);\n","import {scaleLinear} from 'd3-scale';\nimport React from 'react';\nimport {numberFormat0} from './formatters';\n\nexport function drawSizeLegend(context, scale, nsteps, width, margin = 20, textColor = 'black') {\n    let domain = scale.domain();\n\n    let stepSize = (domain[1] - domain[0]) / (nsteps + 1);\n    let steps = [];\n    steps.push(domain[0]);\n    let value = domain[0];\n    for (let i = 0; i < nsteps; i++) {\n        value += stepSize;\n        steps.push(value);\n    }\n    steps.push(domain[1]);\n\n    let legendHeight = 20;\n\n    let valueToX = scaleLinear().range([margin, width - margin]).domain([0, steps.length - 1]).clamp(true);\n    let valueToRadius = scaleLinear().range([1, 9]).domain(domain).clamp(true);\n\n    context.textBaseline = 'top';\n    context.fillStyle = textColor;\n    context.strokeStyle = textColor;\n    context.textAlign = 'center';\n\n    for (let i = 0; i < steps.length; i++) {\n        let pix = valueToX(i);\n\n        let radius = valueToRadius(steps[i]);\n        context.beginPath();\n        context.arc(pix, 10, radius, 0, Math.PI * 2);\n        context.stroke();\n\n        context.fillText(numberFormat0(100 * steps[i]), pix, legendHeight + 2);\n\n    }\n}\n\nclass SizeLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.backingScale = 1;\n    }\n\n    redraw() {\n        let backingScale = this.backingScale;\n        let node = this.ref.current;\n        const context = node.getContext('2d');\n        const height = this.props.height;\n        const width = this.props.width;\n        const textColor = this.props.textColor || 'black';\n        context.font = '12px Roboto Condensed,Helvetica,Arial,sans-serif';\n        context\n            .clearRect(0, 0, width * backingScale, height * backingScale);\n        context.scale(backingScale, backingScale);\n        const scale = this.props.scale;\n        if (scale == null) {\n            return;\n        }\n\n        drawSizeLegend(context, scale, this.props.nsteps || 3, width, 20, textColor);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    render() {\n\n        let backingScale = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            backingScale = window.devicePixelRatio;\n        }\n        this.backingScale = backingScale;\n        let height = this.props.height;\n        let width = this.props.width;\n        let style = {width: width, height: height};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n        return (\n            <canvas width={width * backingScale} height={height * backingScale} ref={this.ref} style={style}></canvas>);\n\n    }\n}\n\nexport default SizeLegend;\n\n","import {Tooltip, withStyles} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport natsort from 'natsort';\nimport React from 'react';\nimport {drawColorScheme} from './ColorSchemeLegend';\nimport {numberFormat} from './formatters';\nimport {drawSizeLegend} from './SizeLegend';\n\nconst styles = theme => ({\n    root: {},\n    formControl: {\n        display: 'block',\n        margin: theme.spacing(1),\n    }\n\n});\n\nlet svgFont = '12px Helvetica,Arial,sans-serif';\nlet canvasFont = '12px Roboto Condensed,Helvetica,Arial,sans-serif';\n\n\nclass DotPlotCanvas extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.divRef = React.createRef();\n        this.tooltipElementRef = React.createRef();\n        this.canvas = null;\n        this.state = {saveImageEl: null};\n    }\n\n    onSortOrderChanged = (event) => {\n        this.props.onSortOrderChanged({name: this.props.data.name, value: event.target.value});\n    };\n\n\n    redraw() {\n\n        if (this.props.data == null) {\n            return <div/>;\n        }\n        let devicePixelRatio = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            devicePixelRatio = window.devicePixelRatio;\n        }\n\n        if (this.canvas == null) {\n            let onMouseMove = (event) => {\n                const node = event.target;\n                const maxRadius = this.props.sizeScale.range()[1];\n                var rect = node.getBoundingClientRect();\n                let xy = [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n                // xy[0] /= devicePixelRatio;\n                // xy[1] /= devicePixelRatio;\n                const col = Math.floor((xy[0] - this.size.x) / (maxRadius * 2));\n                const row = Math.floor((xy[1]) / (maxRadius * 2));\n\n                if (col >= 0 && col < this.dotplot.values.length && row >= 0 && row < this.categories.length) {\n                    this.tooltipElementRef.current.innerHTML = '';\n                    let featureDatum = this.dotplot.values[col];\n                    const mean = featureDatum.mean[this.categoryOrder[row]];\n                    const fractionExpressed = featureDatum.fractionExpressed[this.categoryOrder[row]];\n                    // const renamedCategories = this.props.renamedCategories || {};\n                    // const categories = this.categories;\n                    // let category = categories[this.categoryOrder[row]];\n                    // let newName = renamedCategories[category];\n                    // if (newName != null) {\n                    //     category = newName;\n                    // }\n                    this.tooltipElementRef.current.innerHTML = 'mean: ' + numberFormat(mean) + ', % expressed: ' + numberFormat(100 * fractionExpressed);\n                } else {\n                    this.tooltipElementRef.current.innerHTML = '';\n                }\n            };\n            let onMouseOut = (event) => {\n                this.tooltipElementRef.current.innerHTML = '';\n\n            };\n            // onMouseMove = throttle(onMouseMove);\n            this.canvas = document.createElement('canvas');\n            this.canvas.addEventListener(\"mousemove\", onMouseMove);\n            this.canvas.addEventListener(\"mouseout\", onMouseOut);\n            this.divRef.current.append(this.canvas);\n        }\n\n        const height = this.size.height + this.size.y;\n        const width = this.size.width + this.size.x;\n        let canvas = this.canvas;\n        const context = canvas.getContext('2d');\n        canvas.width = width * devicePixelRatio;\n        canvas.height = height * devicePixelRatio;\n        canvas.style.width = width + 'px';\n        canvas.style.height = height + 'px';\n        context.font = canvasFont;\n\n        context\n            .clearRect(0, 0, width * devicePixelRatio, height * devicePixelRatio);\n        context.scale(devicePixelRatio, devicePixelRatio);\n        this.drawContext(context);\n    }\n\n    drawContext(context) {\n        const renamedCategories = this.props.renamedCategories || {};\n        const dotplot = this.dotplot;\n        const colorScale = this.props.colorScale;\n        const features = this.features;\n        const sizeScale = this.props.sizeScale;\n        const categories = this.categories;\n        const drawCircles = this.props.drawCircles;\n        const categoryOrder = this.categoryOrder;\n        const textColor = this.props.textColor;\n        const maxRadius = sizeScale.range()[1];\n        let diameter = maxRadius * 2;\n        // context.strokeStyle = gridColor;\n        // context.lineWidth = gridThickness;\n        dotplot.values.forEach((datum, featureIndex) => { // each feature\n            for (let i = 0; i < datum.mean.length; i++) { // each category\n                const mean = datum.mean[categoryOrder[i]];\n                const color = colorScale(mean);\n                context.fillStyle = color;\n\n\n                context.beginPath();\n\n                if (drawCircles) {\n                    const xpix = featureIndex * diameter + maxRadius + this.size.x;\n                    const ypix = i * diameter + maxRadius;\n                    const frac = datum.fractionExpressed[categoryOrder[i]];\n                    context.arc(xpix, ypix, sizeScale(frac), 0, 2 * Math.PI);\n                } else {\n                    const xpix = featureIndex * diameter + this.size.x;\n                    const ypix = i * diameter;\n                    context.rect(xpix, ypix, diameter, diameter);\n                }\n                context.fill();\n                // context.stroke();\n            }\n        });\n        // context.lineWidth = 1;\n        context.textAlign = 'right';\n        context.fillStyle = textColor;\n        context.textBaseline = 'middle';\n\n        for (let i = 0; i < categories.length; i++) {\n            let category = categories[categoryOrder[i]];\n            let newName = renamedCategories[category];\n            if (newName != null) {\n                category = newName;\n            }\n            const pix = i * diameter + maxRadius;\n            context.fillText(category, this.size.x - 4, pix);\n        }\n        context.textAlign = 'right';\n        context.textBaseline = 'top';\n        for (let i = 0; i < features.length; i++) {\n            const text = features[i];\n            const pix = i * diameter;\n            context.save();\n            context.translate(this.size.x + pix + 4, this.size.height);\n            context.rotate(-Math.PI / 2);\n            context.fillText(text, 0, 0);\n            context.restore();\n\n        }\n\n        // context.strokeStyle = gridColor;\n        // context.lineWidth = gridThickness;\n        //\n        //\n        // for (let i = 0; i < categories.length; i++) {\n        //     const ypix = i * diameter;\n        //     context.beginPath();\n        //     context.moveTo(this.size.x + 2, ypix);\n        //     context.lineTo(width, ypix);\n        //     context.stroke();\n        // }\n        // for (let i = 0; i < features.length; i++) {\n        //     const xpix = i * diameter + this.size.x + 2;\n        //     context.beginPath();\n        //     context.moveTo(xpix, 0);\n        //     context.lineTo(xpix, dotplotHeight);\n        //     context.stroke();\n        // }\n\n        context.setTransform(1, 0, 0, 1, 0, 0);\n\n    }\n\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.redraw();\n    }\n\n    componentDidMount() {\n        this.redraw();\n    }\n\n    getSize(context) {\n        let maxFeatureWidth = 0;\n        const renamedCategories = this.props.renamedCategories || {};\n        this.dotplot.values.forEach(datum => {\n            maxFeatureWidth = Math.max(maxFeatureWidth, context.measureText(datum.name).width);\n        });\n        maxFeatureWidth += 4;\n        let xoffset = 0;\n        this.categories.forEach(category => {\n            let renamed = renamedCategories[category];\n            if (renamed != null) {\n                category = renamed;\n            }\n            xoffset = Math.max(xoffset, context.measureText(category).width);\n        });\n        xoffset += 4;\n        const maxRadius = this.props.sizeScale.range()[1];\n        const diameter = maxRadius * 2;\n        const height = this.categories.length * diameter + 4;\n        const width = this.features.length * diameter + 4;\n        return {x: xoffset, y: maxFeatureWidth, width: width, height: height};\n    }\n\n    update() {\n\n        let dotplot = Object.assign({}, this.props.data);\n        const renamedCategories = this.props.renamedCategories || {};\n        if (dotplot != null && dotplot.selection) {\n            dotplot = dotplot.selection;\n        }\n        this.dotplot = dotplot;\n        const categories = dotplot.categories || [''];\n\n        this.categories = categories;\n        const features = dotplot.values.map(feature => feature.name);\n\n        if (dotplot.sortBy == null) {\n            dotplot.sortBy = dotplot.name;\n        }\n        let categoryOrder = [];\n        for (let i = 0; i < categories.length; i++) {\n            categoryOrder.push(i);\n        }\n        if (dotplot.sortBy !== dotplot.name) { // sort by feature\n            let sortByDatum;\n            for (let i = 0; i < dotplot.values.length; i++) {\n                if (dotplot.values[i].name === dotplot.sortBy) {\n                    sortByDatum = dotplot.values[i];\n                    break;\n                }\n            }\n            if (sortByDatum) {\n                categoryOrder.sort((a, b) => {\n                    let val1 = sortByDatum.mean[a];\n                    let val2 = sortByDatum.mean[b];\n                    let c = val1 === val2 ? 0 : (val1 > val2 ? -1 : 1);\n                    if (c === 0) {\n                        val1 = sortByDatum.fractionExpressed[a];\n                        val2 = sortByDatum.fractionExpressed[b];\n                        c = val1 === val2 ? 0 : (val1 > val2 ? -1 : 1);\n                    }\n                    return c;\n                });\n\n            }\n        } else { // sort by category\n            if (Object.keys(renamedCategories).length > 0) {\n                const sorter = natsort();\n                categoryOrder.sort((a, b) => {\n                    let val1 = categories[a];\n                    let renamed1 = renamedCategories[val1];\n                    if (renamed1 != null) {\n                        val1 = renamed1;\n                    }\n                    let val2 = categories[b];\n                    let renamed2 = renamedCategories[val2];\n                    if (renamed2 != null) {\n                        val2 = renamed2;\n                    }\n                    return sorter(val1, val2);\n                });\n            }\n\n        }\n\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        context.font = canvasFont;\n        this.features = features;\n        this.size = this.getSize(context);\n        this.categoryOrder = categoryOrder;\n\n    }\n\n    handleSaveImageMenu = (event) => {\n        this.setState({saveImageEl: event.currentTarget});\n    };\n    handleSaveImageMenuClose = (event) => {\n        this.setState({saveImageEl: null});\n    };\n\n\n    handleSaveImage = (format) => {\n        this.setState({saveImageEl: null});\n        let context;\n\n        let canvas;\n        if (format === 'svg') {\n            context = new window.C2S(10, 10);\n            context.font = svgFont;\n        } else {\n            canvas = document.createElement('canvas');\n            context = canvas.getContext('2d');\n            context.font = canvasFont;\n        }\n\n        const size = this.getSize(context);\n\n        const colorScaleHeight = 40;\n        const sizeScaleHeight = 40;\n        const height = size.height + size.y + colorScaleHeight + sizeScaleHeight + 10;\n        const width = Math.max(200, size.width + size.x);\n        let scale = 1;\n        if (format === 'svg') {\n            context = new window.C2S(width, height);\n            context.font = svgFont;\n        } else {\n            canvas.width = width * window.devicePixelRatio;\n            canvas.height = height * window.devicePixelRatio;\n            context = canvas.getContext('2d');\n            scale = window.devicePixelRatio;\n            context.scale(window.devicePixelRatio, window.devicePixelRatio);\n            context.font = canvasFont;\n        }\n        const textColor = this.props.textColor;\n        if (textColor === 'white') {\n            context.fillStyle = 'black';\n            context.fillRect(0, 0, width, height);\n        }\n        this.drawContext(context);\n\n        // if (format !== 'svg') {\n        //     context.scale(window.devicePixelRatio, window.devicePixelRatio);\n        // }\n\n        context.translate(scale * 10, scale * (size.height + size.y + 4));\n        drawColorScheme(context, 150, colorScaleHeight, this.props.colorScale, true, 10, textColor);\n\n        context.translate(-10, (colorScaleHeight + 4));\n\n        drawSizeLegend(context, this.props.sizeScale, 3, 150, 20, textColor);\n\n        if (format === 'svg') {\n            let svg = context.getSerializedSvg();\n            // let prefix = [];\n            // prefix.push('<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n');\n            // prefix.push('<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"' +\n            //     ' \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n            // svg = prefix.join('') + svg;\n            let blob = new Blob([svg], {\n                type: 'text/plain;charset=utf-8'\n            });\n            window.saveAs(blob, this.dotplot.name + '.svg');\n        } else {\n            canvas.toBlob(blob => {\n                window.saveAs(blob, this.dotplot.name + '.png', true);\n            });\n        }\n    };\n\n    render() {\n        this.update();\n        const {saveImageEl} = this.state;\n        const dotplot = this.dotplot;\n        const features = this.features;\n        const sortChoices = [dotplot.name].concat(features);\n        return (<div style={{position: 'relative'}}>\n            <div>\n                <Typography style={{display: 'inline-block'}} component={\"h4\"}\n                            color=\"textPrimary\">{dotplot.name}{this.props.subtitle &&\n                <small>({this.props.subtitle})</small>}</Typography>\n                <Tooltip title={\"Save Image\"}>\n                    <IconButton aria-controls=\"save-image-menu\" aria-haspopup=\"true\" edge={false}\n                                size={'small'}\n                                aria-label=\"Save Image\" onClick={this.handleSaveImageMenu}>\n                        <PhotoCameraIcon/>\n                    </IconButton>\n                </Tooltip>\n                <Menu\n                    id=\"save-image-menu\"\n                    anchorEl={saveImageEl}\n                    keepMounted\n                    open={Boolean(saveImageEl)}\n                    onClose={this.handleSaveImageMenuClose}\n                >\n                    <MenuItem onClick={e => this.handleSaveImage('png')}>PNG</MenuItem>\n                    <MenuItem onClick={e => this.handleSaveImage('svg')}>SVG</MenuItem>\n\n                </Menu>\n\n                <Typography color=\"textPrimary\" className=\"cirro-condensed\" ref={this.tooltipElementRef} style={{\n                    display: 'inline-block',\n                    paddingLeft: 5,\n                    verticalAlign: 'top',\n                    whiteSpace: 'nowrap',\n                    width: 500,\n                    minWidth: 500,\n                    maxWidth: 500,\n                    textOverflow: 'ellipsis'\n                }}></Typography>\n\n                {this.props.onSortOrderChanged ? <FormControl className={this.props.classes.formControl}>\n                    <InputLabel shrink={true}>Sort By</InputLabel>\n                    <Select\n\n                        input={<Input size={\"small\"}/>}\n                        onChange={this.onSortOrderChanged}\n                        value={dotplot.sortBy}\n                    >\n                        {sortChoices.map(item => (\n                            <MenuItem key={item} value={item}>{item}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl> : null}\n            </div>\n            <div ref={this.divRef}></div>\n\n        </div>);\n\n    }\n}\n\nexport default withStyles(styles)(DotPlotCanvas);\n\n\n","import {InputLabel} from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport {scaleLinear, scaleSequential} from 'd3-scale';\nimport React from 'react';\nimport ColorSchemeSelector from './ColorSchemeSelector';\nimport DotPlotCanvas from './DotPlotCanvas';\nimport {numberFormat} from './formatters';\nimport SizeLegend from './SizeLegend';\n\nexport class DotPlotGroup extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {min: '', max: '', minSize: '', sizeMax: '', forceUpdate: false, drawCircles: true};\n    }\n\n    onMinChange = (event) => {\n        this.setState({min: event.target.value});\n    };\n\n    onMinKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.props.categoryItem.minCustom = parseFloat(event.target.value);\n            this.setState({forceUpdate: !this.state.forceUpdate});\n        }\n    };\n\n    onMinSizeChange = (event) => {\n        this.setState({minSize: event.target.value});\n    };\n\n    onHeatmapChange = (event) => {\n        this.setState({drawCircles: !event.target.checked});\n    };\n\n\n    onMinSizeKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.props.categoryItem.minSizeCustom = parseFloat(event.target.value);\n            if (this.props.categoryItem.minSizeCustom > 1) {\n                this.props.categoryItem.minSizeCustom /= 100; // fraction\n            }\n            this.setState({forceUpdate: !this.state.forceUpdate});\n        }\n    };\n\n    onMaxSizeChange = (event) => {\n        this.setState({sizeMax: event.target.value});\n    };\n\n    onMaxSizeKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.props.categoryItem.maxSizeCustom = parseFloat(event.target.value);\n            if (this.props.categoryItem.maxSizeCustom > 1) {\n                this.props.categoryItem.maxSizeCustom /= 100; // fraction\n            }\n            this.setState({forceUpdate: !this.state.forceUpdate});\n        }\n    };\n\n    onMaxChange = (event) => {\n        this.setState({max: event.target.value});\n    };\n\n    onMaxKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            this.props.categoryItem.maxCustom = parseFloat(event.target.value);\n            this.setState({forceUpdate: !this.state.forceUpdate});\n        }\n    };\n\n    render() {\n\n        const {textColor, categoryItem, renamedCategories, selectedData, interpolator} = this.props;\n        let meanRange = categoryItem.meanRange;\n        let fractionRange = categoryItem.fractionRange;\n\n        meanRange = meanRange.slice();\n        fractionRange = fractionRange.slice();\n        if (selectedData != null) {\n\n            meanRange[0] = Math.min(meanRange[0], selectedData.meanRange[0]);\n            meanRange[1] = Math.max(meanRange[1], selectedData.meanRange[1]);\n            fractionRange[0] = Math.min(fractionRange[0], selectedData.fractionRange[0]);\n            fractionRange[1] = Math.max(fractionRange[1], selectedData.fractionRange[1]);\n        }\n        if (meanRange[0] === meanRange[1]) {\n            meanRange[1]++;\n        }\n        if (fractionRange[0] === fractionRange[1]) {\n            fractionRange[0] = 0;\n            fractionRange[1] = 1;\n        }\n        if (meanRange[0] > 0) {\n            meanRange[0] = 0;\n        }\n        if (fractionRange[0] > 0) {\n            fractionRange[0] = 0;\n        }\n        if (fractionRange[1] < 1) {\n            fractionRange[1] = 1;\n        }\n\n\n        if (categoryItem.minCustom != null && !isNaN(categoryItem.minCustom)) {\n            meanRange[0] = categoryItem.minCustom;\n        }\n        if (categoryItem.maxCustom != null && !isNaN(categoryItem.maxCustom)) {\n            meanRange[1] = categoryItem.maxCustom;\n        }\n\n        if (categoryItem.minSizeCustom != null && !isNaN(categoryItem.minSizeCustom)) {\n            fractionRange[0] = categoryItem.minSizeCustom;\n        }\n\n        if (categoryItem.maxSizeCustom != null && !isNaN(categoryItem.maxSizeCustom)) {\n            fractionRange[1] = categoryItem.maxSizeCustom;\n        }\n\n\n        const maxRadius = 9;\n        const minRadius = 1;\n        const colorScale = scaleSequential(interpolator.value).domain(meanRange).clamp(true);\n        const sizeScale = scaleLinear().domain(fractionRange).range([minRadius, maxRadius]).clamp(true);\n        return (\n            <React.Fragment key={categoryItem.name}>\n                <DotPlotCanvas renamedCategories={renamedCategories}\n                               colorScale={colorScale}\n                               sizeScale={sizeScale}\n                               legend={selectedData == null}\n                               meanRange={meanRange}\n                               fractionRange={fractionRange}\n                               textColor={textColor}\n                               drawCircles={this.state.drawCircles}\n                               onSortOrderChanged={this.props.onSortOrderChanged}\n                               data={categoryItem}/>\n                {selectedData != null ?\n                    <DotPlotCanvas renamedCategories={renamedCategories}\n                                   colorScale={colorScale}\n                                   sizeScale={sizeScale}\n                                   subtitle=\"selection\"\n                                   legend={true}\n                                   textColor={textColor}\n                                   drawCircles={this.state.drawCircles}\n                                   meanRange={meanRange}\n                                   fractionRange={fractionRange}\n                                   data={selectedData}/> : null}\n                <ColorSchemeSelector handleInterpolator={this.props.handleInterpolator} interpolator={interpolator}/>\n                <div style={{color: textColor, width: 174}}><Typography\n                    variant={\"caption\"}>{numberFormat(colorScale.domain()[0])}</Typography><Typography\n                    variant={\"caption\"}\n                    style={{float: 'right'}}>{numberFormat(colorScale.domain()[1])}</Typography></div>\n                {/*<ColorSchemeLegend style={{display: 'block', marginLeft: 10}}*/}\n                {/*                   width={186}*/}\n                {/*                   textColor={textColor}*/}\n                {/*                   label={true} height={40}*/}\n                {/*                   scale={colorScale}/>*/}\n\n                <InputLabel shrink={true} variant={\"standard\"}>Custom Mean</InputLabel>\n                <TextField\n                    InputLabelProps={{shrink: true}} style={{width: 90, marginRight: 4}}\n                    size=\"small\" type=\"text\"\n                    onKeyPress={this.onMinKeyPress}\n                    onChange={this.onMinChange} label={\"Min\"}\n                    value={this.state.min}/>\n                <TextField InputLabelProps={{shrink: true}} style={{width: 90}} size=\"small\"\n                           type=\"text\"\n                           onKeyPress={this.onMaxKeyPress}\n                           onChange={this.onMaxChange} label={\"Max\"}\n                           value={this.state.max}/>\n\n\n                {this.state.drawCircles && <div style={{paddingTop: 16}}>\n                    <SizeLegend style={{display: 'block'}}\n                                width={150}\n                                textColor={textColor}\n                                label={true} height={40}\n                                scale={sizeScale}/>\n                    <InputLabel style={{marginTop: 16}} shrink={true} variant={\"standard\"}>Custom Percent\n                        Expressed</InputLabel>\n                    <TextField InputLabelProps={{shrink: true}} style={{width: 90, marginRight: 4}}\n                               size=\"small\" type=\"text\"\n                               onKeyPress={this.onMinSizeKeyPress}\n                               onChange={this.onMinSizeChange} label={\"Min\"}\n                               value={this.state.minSize}/>\n                    <TextField InputLabelProps={{shrink: true}} style={{width: 90}} size=\"small\" type=\"text\"\n                               onKeyPress={this.onMaxSizeKeyPress}\n                               onChange={this.onMaxSizeChange} label={\"Max\"}\n                               value={this.state.maxSize}/>\n                </div>}\n\n                <div style={{paddingTop: 16}}>\n                    <Grid component=\"label\" alignContent={\"flex-start\"} container alignItems=\"center\"\n                          spacing={0}>\n\n                        <Grid item>\n                            <Switch style={{display: 'inline'}} size=\"small\" checked={!this.state.drawCircles}\n                                    onChange={this.onHeatmapChange}\n                                    name=\"heatmap\"/>\n                        </Grid>\n                        <Grid item><InputLabel shrink={false} variant={\"standard\"}>Heat Map</InputLabel></Grid>\n                    </Grid>\n\n                </div>\n            </React.Fragment>\n        );\n    }\n\n}\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {setDotPlotInterpolator, setDotPlotSortOrder} from './actions';\nimport {DotPlotGroup} from './DotPlotGroup';\n\nclass DotPlots extends React.PureComponent {\n    render() {\n        const {chartOptions, dotPlotData, dotPlotInterpolator, categoricalNames, handleInterpolator, onSortOrderChanged, selectedDotPlotData} = this.props;\n\n        if (dotPlotData.length === 0) {\n            return <h4>Please enter one or more categorical observations and one or more features.</h4>;\n        }\n        const textColor = chartOptions.darkMode ? 'white' : 'black';\n        let selectedDotPlotNameToData = {};\n        selectedDotPlotData.forEach(categoryItem => {\n            selectedDotPlotNameToData[categoryItem.name] = categoryItem;\n        });\n        return <div>\n            {dotPlotData.map((categoryItem) => {\n                let selectedData = selectedDotPlotNameToData[categoryItem.name];\n                let renamedCategories = categoricalNames[categoryItem.name];\n                return <DotPlotGroup key={categoryItem.name}\n                                     categoryItem={categoryItem}\n                                     selectedData={selectedData}\n                                     interpolator={dotPlotInterpolator}\n                                     handleInterpolator={handleInterpolator}\n                                     onSortOrderChanged={onSortOrderChanged}\n                                     renamedCategories={renamedCategories}\n                                     textColor={textColor}/>;\n            })}\n        </div>;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        chartOptions: state.chartOptions,\n        dotPlotInterpolator: state.dotPlotInterpolator,\n        dotPlotData: state.dotPlotData,\n        selectedDotPlotData: state.selectedDotPlotData,\n        categoricalNames: state.categoricalNames\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSortOrderChanged: (payload) => {\n            dispatch(setDotPlotSortOrder(payload));\n        },\n        handleInterpolator: value => {\n            dispatch(setDotPlotInterpolator(value));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(DotPlots));\n\n","import {CircularProgress, InputLabel} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Link from '@material-ui/core/Link';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport {connect} from 'react-redux';\nimport {EDIT_DATASET_DIALOG, saveDataset, setDialog, setMessage} from './actions';\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`editor-tabpanel-${index}`}\n            aria-labelledby={`editor-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\n\nfunction getUniqueArray(text) {\n    let tokens = text.split(',');\n    let values = new Set();\n    for (let i = 0; i < tokens.length; i++) {\n        let s = tokens[i].trim().toLowerCase();\n        if (s !== '') {\n            values.add(s);\n        }\n    }\n    return Array.from(values);\n}\n\nclass EditDatasetDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n            tabValue: 0,\n            name: this.props.dataset != null ? this.props.dataset.name : '',\n            title: this.props.title != null ? (this.props.dataset.title != null ? this.props.dataset.title : '') : '',\n            description: this.props.dataset != null ? (this.props.dataset.description != null ? this.props.dataset.description : '') : '',\n            readers: '',\n            loading: this.props.dataset != null,\n        };\n    }\n\n\n    componentDidMount() {\n\n        if (this.props.dataset != null) {\n\n            let readers = this.props.dataset.readers.slice();\n            let myIndex = readers.indexOf(this.props.email);\n            if (myIndex !== -1) {\n                readers.splice(myIndex, 1);\n            }\n            this.setState({\n                name: this.props.dataset.name,\n                description: this.props.dataset.description != null ? this.props.dataset.description : '',\n                title: this.props.dataset.title != null ? this.props.dataset.title : '',\n                loading: false,\n                url: this.props.dataset.url,\n                readers: readers.join(', '),\n            });\n\n        }\n    }\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        let name = this.state.name.trim();\n        let url = this.state.url.trim();\n        if (name === '' || url === '') {\n            return;\n        }\n        let description = this.state.description.trim();\n        let title = this.state.title.trim();\n        this.setState({loading: true});\n        let readers = getUniqueArray(this.state.readers);\n        this.props.handleSave({\n            dataset: this.props.dataset,\n            name: name,\n            title: title,\n            description: description,\n            url: url,\n            readers: readers\n        });\n    };\n\n    onTabChanged = (event, value) => {\n        this.setState({tabValue: value});\n    };\n    onEmailChanged = (event) => {\n        this.setState({readers: event.target.value});\n    };\n    onUrlChanged = (event) => {\n        this.setState({url: event.target.value});\n    };\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n    onDescriptionChanged = (event) => {\n        this.setState({description: event.target.value});\n    };\n    onTitleChanged = (event) => {\n        this.setState({title: event.target.value});\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'lg'}\n            >\n                <DialogTitle id=\"edit-dataset-dialog-title\">{this.props.dataset == null\n                    ? 'New'\n                    : 'Edit'} Dataset</DialogTitle>\n                <DialogContent>\n                    {this.state.loading && <CircularProgress/>}\n                    <TextField\n                        disabled={this.state.loading}\n                        autoComplete=\"off\"\n                        required={true}\n                        value={this.state.name}\n                        helperText={\"asfd\"}\n                        onChange={this.onNameChanged}\n                        margin=\"dense\"\n                        label=\"Name\"\n                        fullWidth\n                    />\n\n                    {!this.state.loading &&\n                    <TextField\n                        required={true}\n                        autoComplete=\"off\"\n                        value={this.state.url}\n                        onChange={this.onUrlChanged}\n                        margin=\"dense\"\n                        helperText={this.props.serverInfo.email ? \"Please ensure that \" + this.props.serverInfo.email + \" has \\\"Storage Object Viewer\\\" permissions\" : ''}\n                        label={\"URL (\" + (this.props.serverInfo.email ? \"gs://my_bucket/my_dataset\" : \"/Users/foo/my_dataset\") + \")\"}\n                        fullWidth\n                    />}\n\n                    <TextField\n                        disabled={this.state.loading}\n                        autoComplete=\"off\"\n                        required={false}\n                        value={this.state.title}\n                        onChange={this.onTitleChanged}\n                        margin=\"dense\"\n                        label=\"Title\"\n                        fullWidth\n                        inputProps={{maxLength: 255}}\n                    />\n                    <div>\n                        <FormControl>\n                            <InputLabel>Summary</InputLabel>\n                            <div style={{marginTop: 36}}></div>\n                            <FormHelperText><Link\n                                href={\"https://www.markdownguide.org/cheat-sheet/\"}\n                                target=\"_blank\">Markdown Cheat Sheet</Link></FormHelperText>\n                        </FormControl>\n\n                    </div>\n\n                    <Tabs value={this.state.tabValue} onChange={this.onTabChanged}\n                          aria-label=\"description-editor\">\n                        <Tab label=\"Write\"/>\n                        <Tab label=\"Preview\"/>\n                    </Tabs>\n\n                    <TabPanel value={this.state.tabValue} index={0}>\n                        <TextField\n                            disabled={this.state.loading}\n                            autoComplete=\"off\"\n                            required={false}\n                            value={this.state.description}\n                            onChange={this.onDescriptionChanged}\n                            margin=\"dense\"\n                            fullWidth\n                            variant=\"outlined\"\n                            rows={8}\n                            rowsMax={8}\n                            multiline={true}\n                            inputProps={{maxLength: 1000}}\n                        />\n                    </TabPanel>\n                    <TabPanel value={this.state.tabValue} index={1}>\n                        {this.state.description !== '' && <Box border={1}>\n                            <ReactMarkdown linkTarget=\"_blank\" children={this.state.description}/>\n                        </Box>}\n                    </TabPanel>\n\n\n                    {!this.state.loading && this.props.serverInfo.clientId !== '' &&\n                    <TextField\n                        value={this.state.readers}\n                        onChange={this.onEmailChanged}\n                        margin=\"dense\"\n                        label=\"Share\"\n                        helperText=\"Enter comma separated list of emails\"\n                        fullWidth\n                        multiline\n                    />}\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={this.state.loading} onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={this.state.loading} onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n\n\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dialog === EDIT_DATASET_DIALOG ? state.dataset : null,\n        serverInfo: state.serverInfo,\n        email: state.email\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveDataset(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(EditDatasetDialog));\n\n","import {Tooltip} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport React from 'react';\nimport {intFormat, numberFormat} from './formatters';\n\nclass CategoricalLegend extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            contextmenuEl: null,\n            anchorEl: null,\n            color: null,\n            name: '',\n            categoryValue: null,\n            forceUpdate: false,\n            menu: null\n        };\n    }\n\n\n    handlePopoverClose = (e) => {\n        this.setState({contextmenuEl: null, anchorEl: null});\n    };\n\n    handleColorChange = (e) => {\n        this.setState({color: e.target.value});\n    };\n    handleNameChange = (e) => {\n        this.setState({name: e.target.value});\n    };\n\n    handleColorChangeApply = (e) => {\n        this.props.handleColorChange({\n            name: this.props.name,\n            value: this.state.categoryValue,\n            color: this.state.color\n        });\n        this.setState({forceUpdate: !this.state.forceUpdate});\n    };\n    handleNameChangeApply = (e) => {\n        this.props.handleNameChange({\n            name: this.props.name,\n            oldValue: this.state.categoryValue,\n            value: this.state.name\n        });\n        this.setState({name: '', contextmenuEl: null, anchorEl: null});\n    };\n\n    handleEditColor = (e) => {\n        this.setState((prevState, props) => ({\n            anchorEl: prevState.contextmenuEl,\n            contextmenuEl: null,\n            menu: 'color'\n        }), () => {\n            // this.inputElement.click();\n        });\n    };\n    handleEditName = (e) => {\n        this.setState((prevState, props) => ({\n            anchorEl: prevState.contextmenuEl,\n            contextmenuEl: null,\n            menu: 'name',\n            name: ''\n        }), () => {\n            // this.inputElement.click();\n        });\n    };\n\n    handleContextmenuClose = (e) => {\n        this.setState({contextmenuEl: null});\n    };\n\n    handleClick = (value, index, e) => {\n        if (this.props.clickEnabled) {\n            e.preventDefault();\n            this.props.handleClick({name: this.props.name, value: value, shiftKey: e.shiftKey, metaKey: e.metaKey});\n        }\n    };\n\n    handleContextmenu = (value, index, e) => {\n        if (this.props.clickEnabled) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.setState({contextmenuEl: e.target, categoryValue: value, color: this.props.scale(value)});\n        }\n    };\n\n\n    render() {\n        const {scale, datasetFilter, name, featureSummary, maxHeight, globalFeatureSummary, nObs, nObsSelected, categoricalNames} = this.props;\n        let clickEnabled = this.props.clickEnabled;\n        const categoricalFilterValues = datasetFilter[name];\n        const selectionSummary = featureSummary[name];\n        let selectedDimensionToCount = {};\n        if (selectionSummary != null) {\n            for (let i = 0; i < selectionSummary.counts.length; i++) {\n                selectedDimensionToCount[selectionSummary.categories[i]] = selectionSummary.counts[i];\n            }\n        }\n        const globalDimensionSummary = globalFeatureSummary[name];\n        // if (globalDimensionSummary.max == null) {\n        //     let max = 0;\n        //     let min = Number.MAX_VALUE;\n        //     for (let i = 0; i < globalDimensionSummary.counts.length; i++) {\n        //         max = Math.max(max, globalDimensionSummary[i]);\n        //         min = Math.min(min, globalDimensionSummary[i]);\n        //     }\n        //     globalDimensionSummary.min = min;\n        //     globalDimensionSummary.max = max;\n        // }\n        const categories = globalDimensionSummary.categories;\n        const renamedCategories = categoricalNames[name] || {};\n        clickEnabled = clickEnabled && categories.length > 1;\n        let style = {maxHeight: maxHeight, display: 'inline-block'};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n\n        let renamedCategoryValue = renamedCategories[this.state.categoryValue] || this.state.categoryValue;\n        return (\n            <div className=\"cirro-chart-legend\" style={style}>\n                <Dialog open={Boolean(this.state.anchorEl)} onClose={this.handlePopoverClose}\n                        aria-labelledby=\"edit-category-dialog-title\">\n\n                    {Boolean(this.state.anchorEl) && this.state.menu == 'color' && <React.Fragment>\n                        <DialogTitle id=\"edit-category-dialog-title\">Edit {renamedCategoryValue} Color</DialogTitle>\n                        <DialogContent>\n                            <input type=\"color\" value={this.state.color}\n                                   onChange={this.handleColorChange} style={{width: 100}}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handlePopoverClose} color=\"primary\">\n                                Close\n                            </Button>\n                            <Button onClick={this.handleColorChangeApply} color=\"primary\">\n                                Apply\n                            </Button>\n                        </DialogActions>\n                    </React.Fragment>}\n                    {Boolean(this.state.anchorEl) && this.state.menu == 'name' && <React.Fragment>\n                        <DialogTitle id=\"edit-category-dialog-title\">Edit {renamedCategoryValue} Name</DialogTitle>\n                        <DialogContent>\n                            <TextField type=\"text\" onChange={this.handleNameChange} value={this.state.name}/>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handlePopoverClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={this.handleNameChangeApply} color=\"primary\">\n                                OK\n                            </Button>\n                        </DialogActions>\n                    </React.Fragment>}\n                </Dialog>\n\n                {/*<Popover*/}\n                {/*    open={Boolean(this.state.anchorEl)}*/}\n                {/*    anchorEl={this.state.anchorEl}*/}\n                {/*    onClose={this.handlePopoverClose}*/}\n                {/*    anchorOrigin={{*/}\n                {/*        vertical: 'bottom',*/}\n                {/*        horizontal: 'center',*/}\n                {/*    }}*/}\n                {/*    transformOrigin={{*/}\n                {/*        vertical: 'top',*/}\n                {/*        horizontal: 'center',*/}\n                {/*    }}*/}\n                {/*>*/}\n                {/*    <Typography>Edit {this.state.categoryValue} Color</Typography>*/}\n                {/*    <input ref={input => this.inputElement = input} type=\"color\" value={this.state.color}*/}\n                {/*           onChange={this.handleColorChange} style={{width: 100}}/>*/}\n                {/*    <Button onClick={handleClose} color=\"primary\">*/}\n                {/*        Cancel*/}\n                {/*    </Button>*/}\n                {/*    <Button onClick={handleClose} color=\"primary\">*/}\n                {/*        Apply*/}\n                {/*    </Button>*/}\n                {/*</Popover>*/}\n                <Menu\n                    anchorEl={this.state.contextmenuEl}\n                    open={Boolean(this.state.contextmenuEl)}\n                    onClose={this.handleContextmenuClose}\n                >\n                    <MenuItem onClick={this.handleEditName}>Edit Name</MenuItem>\n                    <MenuItem onClick={this.handleEditColor}>Edit Color</MenuItem>\n\n                </Menu>\n                <table style={{textAlign: 'left'}}>\n                    <thead>\n                    <tr>\n                        {clickEnabled && <td></td>}\n                        <td></td>\n                        <td><small>{'all'}</small></td>\n                        <td><small>{selectionSummary != null ? 'selection' : null}</small></td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {categories.map((category, i) => {\n\n                        const opacity = categoricalFilterValues == null || categoricalFilterValues.indexOf(category) !== -1 ? 1 : 0.4;\n                        // const fractionUnselected = unselectedCategoryCounts != null ? unselectedCategoryCounts[i] / unselectedTotal : null;\n                        // const unselectedSize = unselectedCategoryCounts == null ? 0 : fractionScale(fractionUnselected);\n                        // const unselectedTitle = unselectedCategoryCounts == null ? null : intFormat(unselectedCategoryCounts[i]) + ' / ' + intFormat(unselectedTotal) + (unselectedCategoryCounts[i] > 0 ? (' ( ' + numberFormat(100 * fractionUnselected) + '%)') : '');\n                        const categoryCount = globalDimensionSummary.counts[i];\n                        const selectedCategoryCount = selectedDimensionToCount[category] || 0;\n\n                        //            not-selected, selected\n                        // in category      a       b\n                        // not in category  c       d\n                        const a = categoryCount - selectedCategoryCount;\n                        const b = selectedCategoryCount;\n                        const c = nObs - nObsSelected - selectedCategoryCount;\n                        const d = nObsSelected - selectedCategoryCount;\n                        // const pValue = fisherTest(a, b, c, d);\n\n                        const fractionSelected = selectionSummary == null ? 0 : selectedCategoryCount / nObsSelected;\n                        // const selectedSize = fractionScale(fractionSelected);\n                        // const globalSize = fractionScale(count / nObs);\n                        const globalTitle = numberFormat(100 * categoryCount / nObs) + '%';\n                        let categoryText = category;\n                        let renamed = renamedCategories[category];\n                        if (renamed !== undefined) {\n                            categoryText = renamed;\n                        }\n                        const selectionTitle = selectionSummary == null ? null : numberFormat(100 * fractionSelected) + '%';\n                        return <tr\n                            style={{cursor: clickEnabled ? 'pointer' : null, opacity: opacity}}\n                            onContextMenu={(e) => this.handleContextmenu(category, i, e)}\n                            onClick={(e) => this.handleClick(category, i, e)} key={category}>\n                            {clickEnabled && <td>\n                                <div style={{\n                                    display: 'inline-block',\n                                    width: 10,\n                                    height: 10,\n                                    background: scale(category)\n                                }}/>\n\n                            </td>}\n                            <td>\n                                <div style={{\n                                    maxWidth: 140,\n                                    textOverflow: 'ellipsis',\n                                    overflow: 'hidden',\n                                    display: 'inline-block',\n                                    userSelect: 'none'\n                                }} title={'' + categoryText}>{'' + categoryText}</div>\n                                <IconButton style={{padding: 0, fontSize: 14}} size=\"small\"\n                                            onClick={(e) => this.handleContextmenu(category, i, e)} aria-label=\"Menu\"\n                                            aria-haspopup=\"true\">\n                                    <ArrowDropDownIcon fontSize={\"inherit\"}/>\n                                </IconButton>\n                            </td>\n\n                            <td>\n                                <Tooltip title={globalTitle}>\n                                    <span>{intFormat(categoryCount)}</span>\n                                </Tooltip>\n\n                                {/*<div*/}\n                                {/*    title={globalTitle}*/}\n                                {/*    style={{*/}\n                                {/*        display: 'inline-block',*/}\n                                {/*        position: 'relative',*/}\n                                {/*        width: maxSize,*/}\n                                {/*        border: '1px solid black',*/}\n                                {/*        height: 9*/}\n                                {/*    }}>*/}\n\n                                {/*    <div style={{*/}\n                                {/*        position: 'absolute',*/}\n                                {/*        width: globalSize,*/}\n                                {/*        left: 0,*/}\n                                {/*        top: 0,*/}\n                                {/*        backgroundColor: 'LightGrey',*/}\n                                {/*        height: 9*/}\n                                {/*    }}/>*/}\n                                {/*</div>*/}\n                            </td>\n                            {selectionSummary && <td>\n                                <Tooltip title={selectionTitle}>\n                                    <div>{intFormat(selectedCategoryCount)}</div>\n                                </Tooltip>\n                                {/*<div*/}\n                                {/*    title={selectionTitle}*/}\n                                {/*    style={{*/}\n                                {/*        display: 'inline-block',*/}\n                                {/*        position: 'relative',*/}\n                                {/*        width: maxSize,*/}\n                                {/*        border: '1px solid black',*/}\n                                {/*        height: 9*/}\n                                {/*    }}>*/}\n\n                                {/*    <div style={{*/}\n                                {/*        position: 'absolute',*/}\n                                {/*        width: selectedSize,*/}\n                                {/*        left: 0,*/}\n                                {/*        top: 0,*/}\n                                {/*        backgroundColor: 'LightGrey',*/}\n                                {/*        height: 9*/}\n                                {/*    }}/>*/}\n                                {/*</div>*/}\n                            </td>}\n                        </tr>;\n                    })\n                    }</tbody>\n\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default CategoricalLegend;\n\n\n","import React from 'react';\nimport {numberFormat, numberFormat0} from './formatters';\n\n\nclass ContinuousLegend extends React.PureComponent {\n\n\n    getTable(summaryNames, selectionSummary, globalSummary) {\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <td></td>\n                    {summaryNames.map(summaryName => {\n                        return <td key={summaryName}><small>{summaryName}</small></td>;\n                    })}\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td style={{textAlign: 'right'}}>{'Mean'}:</td>\n                    <td>{numberFormat(globalSummary.mean)}</td>\n                    {selectionSummary && <td>{numberFormat(selectionSummary.mean)}</td>}\n                </tr>\n\n                {globalSummary.numExpressed != null && <tr>\n                    <td style={{textAlign: 'right'}}>{'% Expressed'}:</td>\n                    <td>{numberFormat0(100 * globalSummary.numExpressed / this.props.nObs)}</td>\n                    {selectionSummary &&\n                    <td>{numberFormat0(100 * selectionSummary.numExpressed / this.props.nObsSelected)}</td>}\n                </tr>}\n                {(globalSummary.numExpressed == null || globalSummary.min !== 0) && <tr>\n                    <td style={{textAlign: 'right'}}>{'Min'}:</td>\n                    <td>{numberFormat(globalSummary.min)}</td>\n                    {selectionSummary && <td>{numberFormat(selectionSummary.min)}</td>}\n                </tr>}\n                <tr>\n                    <td style={{textAlign: 'right'}}>{'Max'}:</td>\n                    <td>{numberFormat(globalSummary.max)}</td>\n                    {selectionSummary && <td>{numberFormat(selectionSummary.max)}</td>}\n                </tr>\n\n                </tbody>\n\n            </table>\n        );\n    }\n\n    render() {\n        const {name, featureSummary, globalFeatureSummary} = this.props;\n        const selectionSummary = featureSummary[name];\n        const globalSummary = globalFeatureSummary[name];\n        const summaryNames = ['all'];\n        // TODO compute unselected mean and % expressed from globals\n        if (selectionSummary != null) {\n            summaryNames.push('selection');\n            //  summaryNames.push('rest');\n        }\n\n        return (\n            <React.Fragment>\n                {globalSummary != null && name !== '__count' && this.getTable(summaryNames, selectionSummary, globalSummary)}\n            </React.Fragment>);\n    }\n}\n\nexport default ContinuousLegend;\n\n\n","import {InputLabel} from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\n\nclass MeasureFilter extends React.PureComponent {\n\n    getFilter() {\n        let filter = this.props.datasetFilter[this.props.name];\n        if (filter == null) {\n            filter = {operation: \">\", value: NaN, uiValue: \"\"};\n            this.props.datasetFilter[this.props.name] = filter;\n        }\n        return filter;\n    }\n\n    handleOperationChanged = (event) => {\n        const operation = event.target.value;\n        this.props.handleUpdate({name: this.props.name, operation: operation, update: true});\n    };\n\n\n    handleValueKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            const filter = this.getFilter();\n            let value = parseFloat(filter.uiValue);\n            this.props.handleUpdate({name: this.props.name, value: value, update: true});\n        }\n    };\n\n    handleValueChange = (event) => {\n        const filter = this.getFilter();\n        filter.uiValue = event.target.value;\n        this.props.handleUpdate({\n            name: this.props.name,\n            operation: filter.operation,\n            value: filter.value,\n            update: false\n        });\n    };\n\n    render() {\n        const {name} = this.props;\n        const filter = this.getFilter();\n        const id = name + '_filter';\n\n        return (\n\n            <div style={{display: 'flex'}}>\n                <InputLabel shrink={true} id={id + '_label'}>Filter</InputLabel>\n\n                <Select\n                    labelId={id + '_label'}\n                    id={id}\n                    style={{marginRight: 6}}\n                    value={filter.operation}\n                    onChange={this.handleOperationChanged}\n                >\n                    <MenuItem value={\"\"}></MenuItem>\n                    <MenuItem value={\">\"}>{\">\"}</MenuItem>\n                    <MenuItem value={\"<\"}>{\"<\"}</MenuItem>\n                    <MenuItem value={\"=\"}>{\"=\"}</MenuItem>\n                    <MenuItem value={\">=\"}>{\">=\"}</MenuItem>\n                    <MenuItem value={\"<=\"}>{\"<=\"}</MenuItem>\n                    <MenuItem value={\"!=\"}>{\"!=\"}</MenuItem>\n                </Select>\n\n                <TextField onKeyPress={this.handleValueKeyPress}\n                           onChange={this.handleValueChange} value={filter.uiValue} style={{maxWidth: 60}}/>\n\n            </div>\n        );\n    }\n}\n\nexport default MeasureFilter;\n\n\n\n","import {InputLabel} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport ContinuousLegend from './ContinuousLegend';\nimport MeasureFilter from './MeasureFilter';\n\nclass ColorSchemeLegendWrapper extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {min: '', max: ''};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.name !== this.props.name) {\n            this.setState({\n                min: '',\n                max: ''\n            });\n        }\n    }\n\n    onMinChange = (event) => {\n        this.setState({min: event.target.value});\n    };\n\n    onMinKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let value = parseFloat(event.target.value);\n            if (isNaN(value)) {\n                delete this.props.globalFeatureSummary[this.props.name].customMin;\n            } else {\n                this.props.globalFeatureSummary[this.props.name].customMin = value;\n            }\n            this.setState({min: event.target.value});\n            this.props.handleDomain({name: this.props.name, summary: this.props.globalFeatureSummary[this.props.name]});\n\n        }\n    };\n\n    onMaxChange = (event) => {\n        this.setState({max: event.target.value});\n    };\n\n    onMaxKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let value = parseFloat(event.target.value);\n            if (isNaN(value)) {\n                delete this.props.globalFeatureSummary[this.props.name].customMax;\n            } else {\n                this.props.globalFeatureSummary[this.props.name].customMax = value;\n            }\n\n            this.setState({max: event.target.value});\n            this.props.handleDomain({name: this.props.name, summary: this.props.globalFeatureSummary[this.props.name]});\n\n        }\n    };\n\n    render() {\n        const {scale, name, nObs, nObsSelected, featureSummary, globalFeatureSummary, maxHeight, datasetFilter, handleUpdate, selected} = this.props;\n        let style = {display: 'inline-block', verticalAlign: 'top'};\n        if (this.props.style) {\n            style = Object.assign({}, style, this.props.style);\n        }\n\n        return (\n            <div className=\"cirro-condensed\" style={style}>\n                {/*ContinuousLegend shows stats table */}\n                <ContinuousLegend name={name}\n                                  selected={selected}\n                                  summary={scale.summary}\n                                  featureSummary={featureSummary}\n                                  nObs={nObs}\n                                  nObsSelected={nObsSelected}\n                                  globalFeatureSummary={globalFeatureSummary}\n                                  maxHeight={maxHeight}></ContinuousLegend>\n                {name !== '__count' && this.props.handleDomain &&\n                <InputLabel shrink={true} variant={\"standard\"}>Custom Color Scale</InputLabel>}\n                {name !== '__count' && this.props.handleDomain &&\n                <TextField InputLabelProps={{shrink: true}} margin=\"none\"\n                           style={{maxWidth: 60, marginRight: 4, marginTop: 0}}\n                           size=\"small\" type=\"text\"\n                           onKeyPress={this.onMinKeyPress}\n                           onChange={this.onMinChange} label=\"Min\"\n                           value={this.state.min}/>}\n                {name !== '__count' && this.props.handleDomain &&\n                <TextField InputLabelProps={{shrink: true}} margin=\"none\" style={{maxWidth: 60, marginTop: 0}}\n                           size=\"small\"\n                           type=\"text\"\n                           onKeyPress={this.onMaxKeyPress}\n                           onChange={this.onMaxChange} label=\"Max\"\n                           value={this.state.max}/>}\n                {name !== '__count' &&\n                <MeasureFilter datasetFilter={datasetFilter} name={name} handleUpdate={handleUpdate}/>}\n                {/*{this.props.showColorScheme &&*/}\n                {/*<ColorSchemeLegend width={this.props.width} height={this.props.height} style={{paddingLeft: 10}}*/}\n                {/*                   scale={scale}*/}\n                {/*                   label={this.props.label}></ColorSchemeLegend>}*/}\n            </div>);\n\n    }\n}\n\nexport default ColorSchemeLegendWrapper;\n","class CanvasOverlayHd {\n    constructor(viewer, options) {\n        this._viewer = viewer;\n        this.backingScale = 1;\n        this._containerWidth = 0;\n        this._containerHeight = 0;\n\n\n        // this._canvasdiv.style.left = 0;\n        // this._canvasdiv.style.top = 0;\n\n\n        this._canvas = document.createElement('canvas');\n        this._canvas.style.position = 'absolute';\n        this._canvas.style.width = '100%';\n        this._canvas.style.height = '100%';\n        this._viewer.canvas.appendChild(this._canvas);\n        this.onRedraw = options.onRedraw || function () {\n        };\n        this.clearBeforeRedraw = (typeof (options.clearBeforeRedraw) !== 'undefined') ?\n            options.clearBeforeRedraw : true;\n\n        this._viewer.addHandler('update-viewport', () => {\n            this.resize();\n            this._updateCanvas();\n        });\n        this._viewer.addHandler('open', () => {\n            this.resize();\n            this._updateCanvas();\n        });\n    }\n\n    static getTileIndexFromPixel(viewer, webPoint) {\n        let viewportPos = viewer.viewport.pointFromPixel(webPoint);\n        for (let i = 0, count = viewer.world.getItemCount(); i < count; i++) {\n            let tiledImage = viewer.world.getItemAt(i);\n            // box = viewer.world.getItemAt(i).getBounds();\n            // if (viewportPos.x > box.x &&\n            //   viewportPos.y > box.y &&\n            //   viewportPos.x < box.x + box.width &&\n            //   viewportPos.y < box.y + box.height) {\n            //\n            // }\n            // tiledImage.lastDrawn.forEach(function (tile) {\n            //   if (tile.bounds.containsPoint(viewportPos)) {\n            //     console.log('lastDrawn', tile);\n            //   }\n            // });\n\n            let viewportPosRect = new window.OpenSeadragon.Rect(viewportPos.x, viewportPos.y, 0, 0);\n            let tileSourcePosRect = tiledImage._viewportToTiledImageRectangle(viewportPosRect);\n            let tileSourcePos = tileSourcePosRect.getTopLeft();\n            let source = tiledImage.source;\n            if (tileSourcePos.x >= 0 && tileSourcePos.x <= 1 && tileSourcePos.y >= 0 &&\n                tileSourcePos.y <= 1 / source.aspectRatio) {\n                return i;\n                // for (let level = source.minLevel; level <= source.maxLevel; level++) {\n                //   let tilePoint = source.getTileAtPoint(level, tileSourcePos);\n                //   return i;\n                // }\n            }\n        }\n        return -1;\n    }\n\n    canvas() {\n        return this._canvas;\n    }\n\n    context2d() {\n        return this._canvas.getContext('2d');\n    }\n\n    clear() {\n        this._canvas.getContext('2d').clearRect(0, 0, this._containerWidth * this.backingScale, this._containerHeight * this.backingScale);\n    }\n\n    resize() {\n        let backingScale = 1;\n        if (typeof window !== 'undefined' && 'devicePixelRatio' in window) {\n            backingScale = window.devicePixelRatio;\n        }\n        let backingScaleUpdated = this.backingScale !== backingScale;\n        this.backingScale = backingScale;\n        if (this._containerWidth !== this._viewer.container.clientWidth || backingScaleUpdated) {\n            this._containerWidth = this._viewer.container.clientWidth;\n            this._canvas.setAttribute('width', backingScale * this._containerWidth);\n            this._canvas.setAttribute('width', backingScale * this._containerWidth);\n            // this._canvas.style.width = this._containerWidth + 'px';\n        }\n\n        if (this._containerHeight !== this._viewer.container.clientHeight || backingScaleUpdated) {\n            this._containerHeight = this._viewer.container.clientHeight;\n            this._canvas.setAttribute('height', backingScale * this._containerHeight);\n            this._canvas.setAttribute('height', backingScale * this._containerHeight);\n            // this._canvas.style.height = this._containerHeight + 'px';\n        }\n    }\n\n    _updateCanvas() {\n        let viewportZoom = this._viewer.viewport.getZoom(true);\n        if (this.clearBeforeRedraw) {\n            this.clear();\n        }\n        let context = this._canvas.getContext('2d');\n        for (let i = 0, count = this._viewer.world.getItemCount(); i < count; i++) {\n            let image = this._viewer.world.getItemAt(i);\n            if (image) {\n                let zoom = image.viewportToImageZoom(viewportZoom);\n                let vp = image.imageToViewportCoordinates(0, 0, true);\n                let p = this._viewer.viewport.pixelFromPoint(vp, true);\n                context.scale(this.backingScale, this.backingScale);\n                context.translate(p.x, p.y);\n                context.scale(zoom, zoom);\n                this.onRedraw({index: i, context: context, x: p.x, y: p.y, zoom: zoom});\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n        }\n    }\n}\n\nexport default CanvasOverlayHd;\n","import OpenSeadragon from 'openseadragon';\nconst svgNS = 'http://www.w3.org/2000/svg';\n\n\nclass OpenseadragonSvgOverlay {\n\n    constructor(viewer) {\n        let self = this;\n\n        this._viewer = viewer;\n        this._containerWidth = 0;\n        this._containerHeight = 0;\n\n        this._svg = document.createElementNS(svgNS, 'svg');\n        this._svg.style.position = 'absolute';\n        this._svg.style.left = 0;\n        this._svg.style.top = 0;\n        this._svg.style.width = '100%';\n        this._svg.style.height = '100%';\n        this._viewer.canvas.appendChild(this._svg);\n\n        this._node = document.createElementNS(svgNS, 'g');\n        this._svg.appendChild(this._node);\n\n        this._viewer.addHandler('update-viewport', () => {\n            self.resize();\n        });\n\n        this._viewer.addHandler('open', function () {\n            self.resize();\n        });\n\n        this._viewer.addHandler('rotate', function (evt) {\n            self.resize();\n        });\n\n        this._viewer.addHandler('resize', function () {\n            self.resize();\n        });\n\n        this.resize();\n    }\n\n    node() {\n        return this._node;\n    }\n\n\n    resize() {\n        if (this._containerWidth !== this._viewer.container.clientWidth) {\n            this._containerWidth = this._viewer.container.clientWidth;\n            this._svg.setAttribute('width', this._containerWidth);\n        }\n\n        if (this._containerHeight !== this._viewer.container.clientHeight) {\n            this._containerHeight = this._viewer.container.clientHeight;\n            this._svg.setAttribute('height', this._containerHeight);\n        }\n\n        let p = this._viewer.viewport.pixelFromPoint(new OpenSeadragon.Point(0, 0), true);\n        let zoom = this._viewer.viewport.getZoom(true);\n        if (this._viewer.world.getItemCount() > 0) {\n            zoom = this._viewer.world.getItemAt(0).viewportToImageZoom(zoom);\n        }\n        // TODO: Expose an accessor for _containerInnerSize in the OSD API so we don't have to use the private variable.\n        //  let scale = this._viewer.viewport._containerInnerSize.x * zoom;\n\n        let rotation = this._viewer.viewport.getRotation();\n        this._node.setAttribute('transform',\n            'translate(' + p.x + ',' + p.y + ') scale(' + zoom + ') rotate(' + rotation + ')');\n    }\n}\n\n\nexport default OpenseadragonSvgOverlay;","import {Typography} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport {bind, uniqueId} from 'lodash';\nimport OpenSeadragon from 'openseadragon';\nimport React from 'react';\nimport simplify from 'simplify-js';\nimport {getEmbeddingKey} from './actions';\nimport CanvasOverlayHd from './CanvasOverlayHd';\nimport ChartToolbar from './ChartToolbar';\nimport {saveImage} from './ChartUtil';\nimport {numberFormat} from './formatters';\nimport OpenseadragonSvgOverlay from './OpenseadragonSvgOverlay';\nimport {getCategoryLabelsPositions} from './ThreeUtil';\nimport {arrayToSvgPath, isPointInside} from './util';\n\n\nexport function getSpotRadius(trace, pointSize) {\n    return pointSize * (trace.embedding.spatial.spot_diameter ? trace.embedding.spatial.spot_diameter / 2 : 20);\n}\n\nexport function drawImage(context, chartSize, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, chartOptions, categoricalNames, spotRadius) {\n    if (traceInfo.tileSource.ready) {\n        const img = traceInfo.tileSource.levels[traceInfo.tileSource.levels.length - 1].context2D.canvas;\n        if (chartSize == null) {\n            chartSize = {width: img.width, height: img.height};\n        }\n        const zoom = Math.min(chartSize.width / img.width, chartSize.height / img.height);\n        context.drawImage(img, 0, 0, img.width * zoom, img.height * zoom);\n        context.scale(zoom, zoom);\n        drawSpots(context, zoom, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, spotRadius);\n        drawLabels(context, zoom, traceInfo, chartOptions, categoricalNames);\n        context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n}\n\nfunction drawLabels(context, zoom, traceInfo, chartOptions, categoricalNames) {\n    const showLabels = chartOptions.showLabels && traceInfo.isCategorical;\n    if (showLabels) {\n        context.textAlign = 'center';\n        context.textBaseline = \"middle\";\n        const darkMode = true;\n        const fontSize = Math.ceil(chartOptions.labelFontSize / zoom);\n        context.fillStyle = darkMode ? 'white' : 'black';\n        context.strokeStyle = darkMode ? 'rgba(0,0,0,0.9)' : 'rgba(255,255,255,0.9)';\n        context.lineWidth = chartOptions.labelStrokeWidth;\n        context.font = fontSize + 'px Roboto Condensed,Helvetica,Arial,sans-serif';\n        const labelsPositions = getCategoryLabelsPositions(traceInfo, categoricalNames);\n        for (let i = 0, index = 0, n = labelsPositions.labels.length; i < n; i++, index += 3) {\n            let x = labelsPositions.positions[index];\n            let y = labelsPositions.positions[index + 1];\n            context.strokeText('' + labelsPositions.labels[i], x, y);\n            context.fillText('' + labelsPositions.labels[i], x, y);\n        }\n    }\n}\n\nfunction drawSpots(context, zoom, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, spotRadius) {\n    context.lineWidth = 2 * 1 / zoom;\n    if (context.setLineDash) {\n        context.setLineDash([2, 2]);\n    }\n    const isSelectionEmpty = selection.size === 0;\n    const indices = traceInfo.indices;\n    if (!isSelectionEmpty) { // draw unselected cells 1st\n        context.globalAlpha = unselectedMarkerOpacity;\n\n        for (let i = 0; i < traceInfo.x.length; i++) {\n            let index = indices[i];\n            let x = traceInfo.x[index];\n            let y = traceInfo.y[index];\n            const isSelected = selection.has(index);\n            if (!isSelected) {\n                context.fillStyle = traceInfo.colors[index];\n                context.beginPath();\n                context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n                context.fill();\n            }\n        }\n        context.globalAlpha = markerOpacity;\n        for (let i = 0; i < traceInfo.x.length; i++) {\n            let index = indices[i];\n            let x = traceInfo.x[index];\n            let y = traceInfo.y[index];\n            const isSelected = selection.has(index);\n            if (isSelected) {\n                context.fillStyle = traceInfo.colors[index];\n                context.beginPath();\n                context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n                context.fill();\n            }\n        }\n    } else {\n        context.globalAlpha = markerOpacity;\n        for (let i = 0; i < traceInfo.x.length; i++) {\n            let index = indices[i];\n            let x = traceInfo.x[index];\n            let y = traceInfo.y[index];\n            context.fillStyle = traceInfo.colors[index];\n            context.beginPath();\n            context.arc(x, y, spotRadius, 0, Math.PI * 2, true);\n            context.fill();\n        }\n    }\n    context.globalAlpha = 1;\n    if (context.setLineDash) {\n        context.setLineDash([]);\n    }\n};\nconst styles = theme => ({\n\n    root: {\n        '& > *': {\n            margin: theme.spacing(.4),\n        },\n        '& > .MuiIconButton-root': {\n            padding: 0,\n        },\n        position: 'absolute',\n        zIndex: 1,\n        top: 0,\n        left: 0,\n        display: 'inline-block',\n        verticalAlign: 'top',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    }\n});\n\nclass ImageChart extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.id = uniqueId('cirro-image');\n        this.tooltipElementRef = React.createRef();\n        this.state = {loading: false};\n    }\n\n    findPointsInPolygon(points) {\n        let data = this.props.traceInfo;\n        // let spotRadius = data[0].embedding.spotDiameter / 2;\n        let indices = [];\n        for (let i = 0; i < data.x.length; i++) {\n            if (isPointInside({x: data.x[i], y: data.y[i]}, points)) {\n                indices.push(i);\n            }\n        }\n        return indices;\n    }\n\n    findPointsInRectangle(rect) {\n        let data = this.props.traceInfo;\n        const spotRadius = getSpotRadius(data, this.props.pointSize);\n        let indices = [];\n        const x = parseFloat(rect.getAttribute('x'));\n        const y = parseFloat(rect.getAttribute('y'));\n        const x2 = x + parseFloat(rect.getAttribute('width'));\n        const y2 = y + parseFloat(rect.getAttribute('height'));\n        for (let i = 0; i < data.x.length; i++) {\n            const px = data.x[i];\n            const py = data.y[i];\n            if (px <= x2 && x <= px + spotRadius && py <= y2 && y <= py + spotRadius) {\n                indices.push(i);\n            }\n        }\n        return indices;\n    }\n\n\n    findPointIndex(xpix, ypix) {\n        let data = this.props.traceInfo;\n        const spotRadius = getSpotRadius(data, this.props.pointSize);\n        for (let i = 0; i < data.x.length; i++) {\n            if (Math.abs(data.x[i] - xpix) <= spotRadius && Math.abs(data.y[i] - ypix) <= spotRadius) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    setTooltip(xpix, ypix) {\n        let traceInfo = this.props.traceInfo;\n        const point = this.findPointIndex(xpix, ypix);\n        if (point != -1) {\n            let value = traceInfo.values[point];\n            let categoryObject = this.props.categoricalNames[traceInfo.name];\n            if (categoryObject) {\n                let renamedValue = categoryObject[value];\n                if (renamedValue != null) {\n                    value = renamedValue;\n                }\n            }\n            if (typeof value === 'number') {\n                value = numberFormat(value);\n            }\n            this.tooltipElementRef.current.innerHTML = '' + value;\n        } else {\n            this.tooltipElementRef.current.innerHTML = ' ';\n        }\n    }\n\n\n    drawContext(context, chartSize) {\n        const img = this.viewer.source.levels[this.viewer.source.levels.length - 1].context2D.canvas;\n        if (chartSize == null) {\n            chartSize = {width: img.width, height: img.height};\n        }\n        const zoom = Math.min(chartSize.width / img.width, chartSize.height / img.height);\n        context.drawImage(img, 0, 0, img.width * zoom, img.height * zoom);\n        this._drawOverlay({context: context, zoom: zoom});\n    }\n\n    _drawOverlay(opts) {\n        let context = opts.context;\n        let traceInfo = this.props.traceInfo;\n        const selection = this.props.selection;\n        let markerOpacity = this.props.markerOpacity;\n        let unselectedMarkerOpacity = this.props.unselectedMarkerOpacity;\n        const spotRadius = getSpotRadius(traceInfo, this.props.pointSize);\n        drawSpots(context, opts.zoom, traceInfo, selection, markerOpacity, unselectedMarkerOpacity, spotRadius);\n        drawLabels(context, opts.zoom, traceInfo, this.props.chartOptions, this.props.categoricalNames);\n    }\n\n    createViewer() {\n        if (this.viewer) {\n            this.viewer.destroy();\n        }\n        // let tileSource = new OpenSeadragon.ImageTileSource({\n        //     url: url,\n        //     buildPyramid: true,\n        //     crossOriginPolicy: \"Anonymous\"\n        // });\n        if (!this.props.traceInfo.tileSource.ready) {\n            this.setState({loading: true});\n            this.props.traceInfo.tileSource.addOnceHandler('ready', (src) => {\n                this.setState({loading: false});\n            });\n        } else {\n            this.setState({loading: false});\n        }\n        this.viewer = new OpenSeadragon({\n            id: this.id,\n            gestureSettingsMouse: {dblClickToZoom: true, clickToZoom: false},\n            autoResize: true,\n            showFullPageControl: false,\n            collectionMode: false,\n            // visibilityRatio: 0.2,\n            showNavigationControl: false,\n            // prefixUrl: 'https://cdn.jsdelivr.net/npm/openseadragon@2.4/build/openseadragon/images/',\n            tileSources: this.props.traceInfo.tileSource\n        });\n        let viewer = this.viewer;\n\n        let _this = this;\n        this.canvasOverlay = new CanvasOverlayHd(this.viewer, {\n            onRedraw: function (opts) {\n                _this._drawOverlay(opts);\n            },\n        });\n        // let tooltip = document.createElement(\"div\");\n        // tooltip.style.background = 'rgba(0,0,0,0.5)';\n        // tooltip.style.color = 'white';\n        // tooltip.style.position = 'absolute';\n        // this.viewer.canvas.appendChild(tooltip);\n\n        let lassoPathArray = [];\n        let startCoordinates = [0, 0];\n        let lastBoundingBox = {x: 0, y: 0, width: 0, height: 0};\n\n        this.viewer.innerTracker.moveHandler = function (event) {\n            if (_this.tooltipElementRef.current == null) {\n                _this.tooltipElementRef.current.innerHTML = ' ';\n            } else if (_this.props.chartOptions.dragmode === 'pan' && viewer.world.getItemCount() > 0) {\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n                _this.setTooltip(imagePoint.x, imagePoint.y);\n                // if (title !== '') {\n                //     tooltip.innerHTML = title;\n                //     tooltip.style.left = (webPoint.x + 8) + 'px';\n                //     tooltip.style.top = (webPoint.y + 8) + 'px';\n                //     tooltip.style.display = '';\n                // } else {\n                //     tooltip.style.display = 'none';\n                // }\n            } else {\n                _this.tooltipElementRef.current.innerHTML = ' ';\n            }\n        };\n        //\n        // this.viewer.innerTracker.scrollHandler = function (event) {\n        //     if (lassoState > -1) {\n        //         event.preventDefaultAction = true;\n        //     }\n        // };\n\n\n        this.viewer.addHandler('canvas-drag', function (event) {\n            if ((_this.props.chartOptions.dragmode === 'lasso' || _this.props.chartOptions.dragmode === 'select') && viewer.world.getItemCount() > 0) {\n                event.preventDefaultAction = true;\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n                lassoPathArray.push({x: imagePoint.x, y: imagePoint.y});\n                if (_this.props.chartOptions.dragmode === 'lasso') {\n                    lassoPathArray = simplify(lassoPathArray);\n                    lassoPath.setAttribute('d', arrayToSvgPath(lassoPathArray));\n                } else {\n                    lastBoundingBox.x = Math.min(imagePoint.x, startCoordinates[0]);\n                    lastBoundingBox.y = Math.max(imagePoint.y, startCoordinates[1]);\n                    lastBoundingBox.width =\n                        Math.max(imagePoint.x, startCoordinates[0]) - lastBoundingBox.x;\n                    lastBoundingBox.height =\n                        lastBoundingBox.y - Math.min(imagePoint.y, startCoordinates[1]);\n\n                    rectElement.setAttribute('x', '' + lastBoundingBox.x);\n                    rectElement.setAttribute(\n                        'y',\n                        '' + (lastBoundingBox.y - lastBoundingBox.height)\n                    );\n                    rectElement.setAttribute('width', '' + lastBoundingBox.width);\n                    rectElement.setAttribute('height', '' + lastBoundingBox.height);\n                }\n            }\n        });\n\n        this.viewer.addHandler('canvas-press', function (event) {\n            if (_this.props.chartOptions.dragmode === 'lasso' || _this.props.chartOptions.dragmode === 'select') {\n                event.preventDefaultAction = true;\n\n                let webPoint = event.position;\n                let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n                let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n\n                if (_this.props.chartOptions.dragmode === 'lasso') {\n                    lassoPathArray = [];\n                    lassoPathArray.push({x: imagePoint.x, y: imagePoint.y});\n                    lassoPathArray = simplify(lassoPathArray);\n                    lassoPath.setAttribute('d', arrayToSvgPath(lassoPathArray));\n                } else {\n                    startCoordinates = [imagePoint.x, imagePoint.y];\n                    lastBoundingBox = {\n                        x: startCoordinates[0],\n                        y: startCoordinates[1],\n                        width: 1,\n                        height: 1,\n                    };\n\n                }\n            }\n        });\n\n        this.viewer.addHandler('canvas-release', function (event) {\n            if (_this.props.chartOptions.dragmode === 'lasso') {\n                event.preventDefaultAction = true;\n                const points = _this.findPointsInPolygon(lassoPathArray);\n                lassoPathArray = [];\n                lassoPath.setAttribute('d', '');\n                _this.props.onSelected({\n                    name: getEmbeddingKey(_this.props.traceInfo.embedding),\n                    clear: !_this.props.chartOptions.editSelection,\n                    value: {basis: _this.props.traceInfo.embedding, points: points}\n                });\n            } else if (_this.props.chartOptions.dragmode === 'select') {\n                event.preventDefaultAction = true;\n                const points = _this.findPointsInRectangle(rectElement);\n                rectElement.removeAttribute('x');\n                rectElement.removeAttribute('y');\n                rectElement.removeAttribute('width');\n                rectElement.removeAttribute('height');\n                _this.props.onSelected({\n                    name: getEmbeddingKey(_this.props.traceInfo.embedding),\n                    clear: !_this.props.chartOptions.editSelection,\n                    value: {basis: _this.props.traceInfo.embedding, points: points}\n                });\n            }\n        });\n\n        // this.viewer.innerTracker.clickHandler = function (event) {\n        //     if (_this.props.chartOptions.dragmode === 'pan') {\n        //         let webPoint = event.position;\n        //         let viewportPoint = viewer.viewport.pointFromPixel(webPoint);\n        //         let imagePoint = viewer.world.getItemAt(0).viewportToImageCoordinates(viewportPoint, true);\n        //         const point = _this.findPointIndex(imagePoint.x, imagePoint.y);\n        //         if (point === -1) {\n        //             //   this.props.onDeselect({name: getEmbeddingKey(traceInfo.embedding)});\n        //         } else {\n        //             _this.props.onSelected({\n        //                 name: getEmbeddingKey(_this.props.traceInfo.embedding),\n        //                 clear: !_this.props.chartOptions.editSelection,\n        //                 value: {basis: _this.props.traceInfo.embedding, points: [point]}\n        //             });\n        //         }\n        //     }\n        // };\n\n        viewer.addHandler('canvas-exit', function (event) {\n            if (_this.tooltipElementRef.current) {\n                _this.tooltipElementRef.current.innerHTML = ' ';\n            }\n        });\n\n        let svgOverlay = new OpenseadragonSvgOverlay(viewer);\n        let lassoPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        let rectElement = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        [lassoPath, rectElement].forEach(elem => {\n            elem.setAttribute('stroke', 'black');\n            elem.setAttribute('stroke-width', '3px');\n            elem.setAttribute('fill', '#0bb');\n            elem.setAttribute('fill-opacity', '0.3');\n            elem.setAttribute('stroke-dasharray', '2 2');\n            svgOverlay.node().appendChild(elem);\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.canvasOverlay) {\n            this.canvasOverlay._updateCanvas();\n        }\n        // if (this.viewer && prevProps.chartSize !== this.props.chartSize) {\n        //     this.viewer.viewport.resize();\n        // }\n    }\n\n    componentWillUnmount() {\n        if (this.viewer) {\n            this.viewer.destroy();\n        }\n        this.viewer = null;\n    }\n\n    componentDidMount() {\n        if (this.viewer == null) {\n            this.createViewer(this.props.traceInfo.url);\n        }\n    }\n\n\n    onSaveImage = (format) => {\n        const {traceInfo} = this.props;\n        const img = this.viewer.source.levels[this.viewer.source.levels.length - 1].context2D.canvas;\n        saveImage(traceInfo, {width: img.width, height: img.height}, bind(this.drawContext, this), format);\n    };\n\n    onEditSelection = () => {\n        this.props.chartOptions.editSelection = !this.props.chartOptions.editSelection;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    onShowLabels = () => {\n        this.props.chartOptions.showLabels = !this.props.chartOptions.showLabels;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n    onZoomIn = () => {\n        this.viewer.viewport.zoomBy(this.viewer.zoomPerClick / 1.0);\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onZoomOut = () => {\n        this.viewer.viewport.zoomBy(1.0 / this.viewer.zoomPerClick);\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onHome = () => {\n        this.viewer.viewport.goHome();\n        this.viewer.viewport.applyConstraints();\n    };\n\n    onDragMode = (mode) => {\n        this.props.chartOptions.dragmode = mode;\n        this.props.setChartOptions(this.props.chartOptions);\n    };\n\n\n    render() {\n        return <React.Fragment>\n            <div className={this.props.classes.root}>\n                <ChartToolbar\n                    dragmode={this.props.chartOptions.dragmode}\n                    editSelection={this.props.chartOptions.editSelection}\n                    showLabels={this.props.chartOptions.showLabels}\n                    onMoreOptions={this.props.onMoreOptions}\n                    onGallery={this.props.onGallery}\n                    animating={false}\n                    onZoomIn={this.onZoomIn}\n                    onZoomOut={this.onZoomOut}\n                    is3d={false}\n                    onHome={this.onHome}\n                    onSaveImage={this.onSaveImage}\n                    onShowLabels={this.onShowLabels}\n                    onDragMode={this.onDragMode}\n                    onEditSelection={this.onEditSelection}\n                >\n                </ChartToolbar>\n                <Typography color=\"textPrimary\" ref={this.tooltipElementRef} style={{\n                    display: 'inline-block',\n                    paddingLeft: 5,\n                    verticalAlign: 'top'\n                }}>&nbsp;</Typography>\n            </div>\n\n            <div style={{\n                display: 'inline-block',\n                width: this.props.chartSize.width,\n                height: this.props.chartSize.height\n            }}\n                 id={this.id}>\n            </div>\n            {this.state.loading && <CircularProgress style={{position:'absolute', left:this.props.chartSize.width/2, top:this.props.chartSize.height/2}} size={20}/>}\n        </React.Fragment>;\n    }\n}\n\n\nexport default withStyles(styles)(ImageChart);\n","import {Tooltip, Typography} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport React from 'react';\n\n\nimport {connect} from 'react-redux';\nimport {\n    handleBrushFilterUpdated,\n    handleCategoricalNameChange,\n    handleColorChange,\n    handleDimensionFilterUpdated,\n    handleDomainChange,\n    handleMeasureFilterUpdated,\n    MORE_OPTIONS_DIALOG,\n    setChartOptions,\n    setDialog,\n    setPrimaryChartSize\n} from './actions';\nimport CategoricalLegend from './CategoricalLegend';\nimport ColorSchemeLegendWrapper from './ColorSchemeLegendWrapper';\nimport ImageChart from './ImageChart';\nimport ScatterChartThree from './ScatterChartThree';\n\nclass EmbeddingChart extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {showDetails: true};\n    }\n\n    setChartRef = (element) => {\n        this.props.chartOptions.ref = element;\n\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.traceInfo.name !== this.props.traceInfo.name) {\n            this.setState({showDetails: true});\n        }\n    }\n\n    handleExpandClick = (e) => {\n        e.preventDefault();\n        this.setState({showDetails: !this.state.showDetails});\n    };\n\n    render() {\n        const {\n            onChartOptions, onMoreOptions, onDomain, onDimensionFilterUpdated,\n            onColorChange, onNameChange, onMeasureFilterUpdated, onSelect, onDeselect, onGallery,\n            traceInfo, selection, datasetFilter, chartOptions, featureSummary, markerOpacity, unselectedMarkerOpacity, pointSize, globalFeatureSummary, shape, nObsSelected, categoricalNames, primaryChartSize\n        } = this.props;\n        const displayName = traceInfo.name === '__count' ? '' : traceInfo.name;\n\n        return (\n            <div  style={{position: 'relative'}}>\n                <Box color=\"text.primary\" style={{\n                    marginTop: '3.2px',\n                    position: 'absolute',\n                    textAlign: 'right',\n                    right: 8,\n                    zIndex: 1000\n                }}>\n                    {displayName !== '' ? <Tooltip title={\"Embedding: \" + traceInfo.embedding.name}>\n                        <Link onClick={this.handleExpandClick}>\n                            <Typography\n                                color=\"textPrimary\" style={{marginRight: 14}}\n                                component={\"h4\"}>{displayName} {!traceInfo.continuous ?\n                                <small>({globalFeatureSummary[traceInfo.name].categories.length})</small> : null}</Typography></Link>\n                    </Tooltip> : null}\n\n                    {traceInfo.continuous ?\n                        <ColorSchemeLegendWrapper\n                            key={traceInfo.name}\n                            handleDomain={onDomain}\n                            width={140}\n                            showColorScheme={false}\n                            height={30}\n                            style={{\n                                display: this.state.showDetails ? 'block' : 'none',\n                            }}\n                            handleUpdate={onMeasureFilterUpdated}\n                            datasetFilter={datasetFilter}\n                            scale={traceInfo.colorScale}\n                            featureSummary={featureSummary}\n                            globalFeatureSummary={globalFeatureSummary}\n                            nObs={shape[0]}\n                            nObsSelected={nObsSelected}\n                            maxHeight={null}\n                            name={traceInfo.name}\n                        /> :\n                        <CategoricalLegend\n                            key={traceInfo.name}\n                            style={{\n                                display: this.state.showDetails ? 'block' : 'none',\n                            }}\n                            datasetFilter={datasetFilter}\n                            handleClick={onDimensionFilterUpdated}\n                            handleColorChange={onColorChange}\n                            handleNameChange={onNameChange}\n                            categoricalNames={categoricalNames}\n                            name={traceInfo.name}\n                            scale={traceInfo.colorScale}\n                            maxHeight={300}\n                            clickEnabled={true}\n                            nObs={shape[0]}\n                            nObsSelected={nObsSelected}\n                            globalFeatureSummary={globalFeatureSummary}\n                            featureSummary={featureSummary}/>\n                    }\n                </Box>\n\n\n                {!traceInfo.isImage &&\n                <ScatterChartThree traceInfo={traceInfo}\n                                   chartSize={primaryChartSize}\n                                   setChartOptions={onChartOptions}\n                                   chartOptions={chartOptions}\n                                   categoricalNames={categoricalNames}\n                                   selection={selection}\n                                   onDeselect={onDeselect}\n                                   onSelected={onSelect}\n                                   pointSize={pointSize}\n                                   markerOpacity={markerOpacity}\n                                   unselectedMarkerOpacity={unselectedMarkerOpacity}\n                                   color={traceInfo.colors}\n                                   onGallery={onGallery}\n                                   onMoreOptions={onMoreOptions}\n                                   ref={this.setChartRef}\n\n                />}\n\n\n                {traceInfo.isImage && <ImageChart\n                    setChartOptions={onChartOptions}\n                    chartOptions={chartOptions}\n                    style={{display: 'inline-block'}}\n                    traceInfo={traceInfo}\n                    pointSize={pointSize}\n                    chartSize={primaryChartSize}\n                    categoricalNames={categoricalNames}\n                    selection={selection}\n                    onInitialized={this.onInitialized}\n                    markerOpacity={markerOpacity}\n                    unselectedMarkerOpacity={unselectedMarkerOpacity}\n                    onDeselect={onDeselect}\n                    onSelected={onSelect}\n                    onGallery={onGallery}\n                    onMoreOptions={onMoreOptions}\n                    ref={this.setChartRef}\n                />}\n\n\n            </div>);\n\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        chartOptions: state.chartOptions,\n        embeddingChartSize: state.embeddingChartSize,\n        pointSize: state.pointSize,\n        embeddingData: state.embeddingData,\n        primaryChartSize: state.primaryChartSize,\n        markerOpacity: state.markerOpacity,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n        primaryTraceKey: state.primaryTraceKey,\n        categoricalNames: state.categoricalNames,\n        globalFeatureSummary: state.globalFeatureSummary,\n        featureSummary: state.featureSummary,\n        shape: state.dataset.shape,\n        nObsSelected: state.selection.count,\n        dataset: state.dataset,\n        datasetFilter: state.datasetFilter\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        onChartOptions: (options) => {\n            dispatch(setChartOptions(options));\n        },\n        onMoreOptions: () => {\n            dispatch(setDialog(MORE_OPTIONS_DIALOG));\n        },\n        onPrimaryChartSize: value => {\n            dispatch(setPrimaryChartSize(value));\n        },\n        onDomain: (value) => {\n            dispatch(handleDomainChange(value));\n        },\n        onDimensionFilterUpdated: (e) => {\n            dispatch(handleDimensionFilterUpdated(e));\n        },\n        onColorChange: (e) => {\n            dispatch(handleColorChange(e));\n        },\n        onNameChange: (e) => {\n            dispatch(handleCategoricalNameChange(e));\n        },\n        onMeasureFilterUpdated: (e) => {\n            dispatch(handleMeasureFilterUpdated(e));\n        },\n        onSelect: (e) => {\n            dispatch(handleBrushFilterUpdated(e));\n        },\n        onDeselect: (e) => {\n            dispatch(handleBrushFilterUpdated(e));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(EmbeddingChart));\n\n","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {getEmbeddingKey, getTraceKey, setPrimaryChartSize} from './actions';\nimport EmbeddingChart from './EmbeddingChart';\n\n\nconst emptySet = new Set();\n\nclass EmbeddingCharts extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.resizeListener = () => {\n            let width = window.innerWidth - 280;\n\n            // let height = Math.max(1, this.containerElementRef.offsetHeight);\n            let height = Math.max(300, window.innerHeight - 410);\n            this.props.handlePrimaryChartSize({width: width, height: height});\n        };\n        window.addEventListener('resize', this.resizeListener);\n\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.resizeListener);\n    }\n\n\n    render() {\n        const {primaryTraceKey, embeddingData, selection, onGallery, primaryChartSize} = this.props;\n        let primaryTraces = embeddingData.filter(traceInfo => getTraceKey(traceInfo) === primaryTraceKey);\n        const primaryTrace = primaryTraces.length === 1 ? primaryTraces[0] : null;\n        let userPoints = emptySet;\n        if (primaryTrace) {\n            const embedding = primaryTrace.embedding;\n            const fullName = getEmbeddingKey(embedding);\n            const chartSelection = selection != null && selection.chart != null ? selection.chart[fullName] : null;\n            userPoints = chartSelection ? chartSelection.userPoints : emptySet;\n        }\n\n        if (primaryTrace == null) {\n            return <div style={{height: primaryChartSize.height}}></div>;\n        }\n\n        return (<EmbeddingChart\n                onGallery={onGallery}\n                traceInfo={primaryTrace}\n                selection={userPoints}\n            />\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        embeddingData: state.embeddingData,\n        primaryTraceKey: state.primaryTraceKey,\n        primaryChartSize: state.primaryChartSize,\n        selection: state.selection\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handlePrimaryChartSize: value => {\n            dispatch(setPrimaryChartSize(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(EmbeddingCharts));\n\n","import {Tooltip} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport {getEmbeddingKey} from './actions';\nimport {drawImage, getSpotRadius} from './ImageChart';\nimport {drawLabels, getVisualizer} from './ScatterChartThree';\nimport {getCategoryLabelsPositions, getScaleFactor, POINT_VISUALIZER_ID, updateScatterChart} from './ThreeUtil';\n\n\nclass GalleryImage extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {url: null, overlayUrl: null, loading: false};\n        this.canvasRef = React.createRef();\n    }\n\n\n    draw() {\n        const {scatterPlot, chartSize, categoricalNames, containerElement, traceInfo, markerOpacity, unselectedMarkerOpacity, selection, chartOptions, pointSize} = this.props;\n        const embedding = traceInfo.embedding;\n        const fullName = getEmbeddingKey(embedding);\n        const chartSelection = selection != null && selection.chart != null ? selection.chart[fullName] : null;\n        const userPoints = chartSelection ? chartSelection.userPoints : new Set();\n        if (!traceInfo.isImage) {\n            let spriteVisualizer = getVisualizer(scatterPlot, POINT_VISUALIZER_ID);\n            spriteVisualizer.zoomFactor = this.zoomFactor;\n            updateScatterChart(scatterPlot, traceInfo, userPoints, markerOpacity, unselectedMarkerOpacity, pointSize,\n                categoricalNames, chartOptions);\n            const canvas = containerElement.querySelector('canvas');\n            const showLabels = chartOptions.showLabels && traceInfo.isCategorical;\n            let overlayUrl = null;\n\n            if (showLabels) {\n                const labelsPositions = getCategoryLabelsPositions(traceInfo, categoricalNames);\n                const labelCanvas = document.createElement('canvas');\n                labelCanvas.width = chartSize * window.devicePixelRatio;\n                labelCanvas.height = chartSize * window.devicePixelRatio;\n                const context = labelCanvas.getContext('2d');\n                context.scale(window.devicePixelRatio, window.devicePixelRatio);\n                context.font = 'bold ' + chartOptions.labelFontSize + 'px Roboto Condensed';\n                drawLabels(context, labelsPositions, chartOptions, {\n                    width: chartSize,\n                    height: chartSize\n                }, scatterPlot.camera);\n                overlayUrl = labelCanvas.toDataURL();\n            }\n\n            this.setState({url: canvas.toDataURL(), overlayUrl: overlayUrl, loading: false});\n        } else {\n            if (!traceInfo.tileSource.ready) {\n                this.setState({url: null, overlayUrl: null, loading: true});\n                traceInfo.tileSource.addOnceHandler('ready', () => {\n                    this.setState({loading: false});\n                });\n            } else {\n                let canvas = document.createElement('canvas');\n                canvas.width = chartSize * window.devicePixelRatio;\n                canvas.height = chartSize * window.devicePixelRatio;\n                const context = canvas.getContext('2d');\n                context.scale(window.devicePixelRatio, window.devicePixelRatio);\n                drawImage(context, {\n                    width: chartSize,\n                    height: chartSize\n                }, traceInfo, userPoints, markerOpacity, unselectedMarkerOpacity, chartOptions, categoricalNames, getSpotRadius(traceInfo, pointSize));\n                this.setState({url: canvas.toDataURL(), overlayUrl: null, loading: false});\n                canvas = null;\n            }\n        }\n\n        // canvas.toBlob(function (blob) {\n        //     // let newImg = document.createElement('img');\n        //     let url = URL.createObjectURL(blob);\n        //     _this.setState({url: url});\n        //     // newImg.onload = function () {\n        //     //     // no longer need to read the blob so it's revoked\n        //     //     URL.revokeObjectURL(url);\n        //     // };\n        //     //\n        //     // newImg.src = url;\n        //     // document.body.appendChild(newImg);\n        // });\n\n    }\n\n\n    componentDidMount() {\n        this.zoomFactor = getScaleFactor(this.props.primaryChartSize);\n        this.draw();\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.primaryChartSize !== this.props.primaryChartSize) {\n            this.zoomFactor = getScaleFactor(this.props.primaryChartSize);\n        }\n        this.draw();\n    }\n\n\n    onSelect = (event) => {\n        event.preventDefault();\n        this.props.onSelect(this.props.traceInfo);\n    };\n\n    render() {\n\n        let name = this.props.traceInfo.name;\n        if (name === '__count') {\n            name = 'count';\n        }\n        return (\n            <Box borderColor=\"text.primary\" border={1}\n                 style={{display: 'inline-block', margin: 2}}>\n                <div style={{position: 'relative', width: this.props.chartSize, height: this.props.chartSize, cursor:'pointer'}}>\n\n                    <Tooltip title={\"Embedding: \" + this.props.traceInfo.embedding.name}>\n                        <Typography color=\"textPrimary\" component={\"h4\"}\n                                    onClick={this.onSelect}\n                                    style={{\n                                        marginTop: '3.2px',\n                                        position: 'absolute',\n                                        right: 4,\n                                        zIndex: 1000\n                                    }}>{name}</Typography>\n                    </Tooltip>\n\n                    {this.state.url &&\n                    <div style={{position: 'absolute', left: 0, top: 0}}>\n                        <img alt=\"\" src={this.state.url}\n                             width={this.props.chartSize * window.devicePixelRatio}\n                             height={this.props.chartSize * window.devicePixelRatio}\n                             onClick={this.onSelect}\n                             style={{\n                                 width: this.props.chartSize,\n                                 height: this.props.chartSize\n                             }}/>\n                    </div>}\n\n                    {this.state.loading && <CircularProgress\n                        style={{position: 'absolute', left: this.props.chartSize / 2, top: this.props.chartSize / 2}}\n                        size={20}/>}\n                    {this.state.url &&\n                    <div style={{position: 'absolute', left: 0, top: 0}}>\n                        <img alt=\"\" src={this.state.url}\n                             width={this.props.chartSize * window.devicePixelRatio}\n                             height={this.props.chartSize * window.devicePixelRatio}\n                             onClick={this.onSelect}\n                             style={{\n                                 width: this.props.chartSize,\n                                 height: this.props.chartSize\n                             }}/>\n                    </div>}\n                    {this.state.overlayUrl &&\n                    <div style={{position: 'absolute', left: 0, top: 0}}>\n                        <img alt=\"\" src={this.state.overlayUrl}\n                             onClick={this.onSelect}\n                             style={{\n                                 width: this.props.chartSize,\n                                 height: this.props.chartSize\n                             }}/></div>}\n\n\n                </div>\n            </Box>\n        );\n\n    }\n}\n\nexport default GalleryImage;\n\n","import {Tooltip} from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport React from 'react';\n\nimport {connect} from 'react-redux';\nimport {sortableContainer, sortableElement} from 'react-sortable-hoc';\nimport {getTraceKey, setEmbeddingData, setPrimaryTraceKey} from './actions';\nimport GalleryImage from './GalleryImage';\nimport {createScatterPlot} from './ThreeUtil';\n\nfunction createContainer(chartSize) {\n    const containerElement = document.createElement('div');\n    containerElement.style.position = 'absolute';\n    containerElement.style.left = '-9999px';\n    containerElement.style.width = chartSize + 'px';\n    containerElement.style.height = chartSize + 'px';\n    return containerElement;\n}\n\nclass GalleryCharts extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.containerElement = createContainer(this.props.chartSize);\n        document.body.appendChild(this.containerElement);\n        this.scatterPlot = createScatterPlot(this.containerElement, window.ApplePaySession, false, false);\n        this.emptySet = new Set();\n\n    }\n\n    onChartSelected = (traceInfo) => {\n        this.props.handlePrimaryTraceKey(getTraceKey(traceInfo));\n        window.scrollTo(0, 0);\n    };\n\n    onSortEnd = (galleryTraces, e) => {\n        galleryTraces[e.oldIndex].sortIndex = e.newIndex;\n        galleryTraces[e.newIndex].sortIndex = e.oldIndex;\n        this.props.handleEmbeddingData(this.props.embeddingData.slice());\n    };\n\n\n    render() {\n        let {categoricalNames, chartSize, embeddingData, primaryChartSize, markerOpacity, unselectedMarkerOpacity, pointSize, chartOptions, selection} = this.props;\n        if (this.containerElement.style.width !== this.props.chartSize + 'px') {\n            document.body.removeChild(this.containerElement);\n            this.containerElement = createContainer(this.props.chartSize);\n            document.body.appendChild(this.containerElement);\n            this.scatterPlot = createScatterPlot(this.containerElement, window.ApplePaySession, false, false);\n        }\n        let galleryTraces = embeddingData.filter(traceInfo => traceInfo.active);\n\n        for (let i = 0; i < galleryTraces.length; i++) {\n            if (galleryTraces[i].sortIndex == null) {\n                galleryTraces[i].sortIndex = i;\n            }\n        }\n        galleryTraces.sort((a, b) => a.sortIndex - b.sortIndex);\n\n        // const DragHandle = sortableHandle(() => <span>::</span>);\n\n        const SortableItem = sortableElement(({traceInfo}) => <GalleryImage\n            traceInfo={traceInfo}\n            color={traceInfo.colors}\n            scatterPlot={this.scatterPlot}\n            markerOpacity={markerOpacity}\n            chartOptions={chartOptions}\n            pointSize={pointSize}\n            chartSize={chartSize}\n            categoricalNames={categoricalNames}\n            primaryChartSize={primaryChartSize}\n            unselectedMarkerOpacity={unselectedMarkerOpacity}\n            selection={selection}\n            containerElement={this.containerElement}\n            onSelect={this.onChartSelected}\n            key={getTraceKey(traceInfo)}/>);\n\n        const SortableList = sortableContainer(({items}) => {\n            return (\n                <ul style={{padding: 0}}>\n                    {items.map((traceInfo, index) => (\n                        <SortableItem key={getTraceKey(traceInfo)} index={index} traceInfo={traceInfo}/>\n                    ))}\n                </ul>\n            );\n        });\n\n        return (\n            <React.Fragment><Typography variant=\"subtitle1\">Gallery<Tooltip\n                title=\"Drag gallery charts to reorder. Click chart to set primary view.\"><HelpOutlineIcon\n                style={{verticalAlign: 'text-bottom'}}/></Tooltip></Typography>\n                <SortableList\n                    distance={2}\n                    axis=\"xy\" items={galleryTraces}\n                    onSortEnd={(e) => this.onSortEnd(galleryTraces, e)}/></React.Fragment>);\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        categoricalNames: state.categoricalNames,\n        embeddingData: state.embeddingData,\n        markerOpacity: state.markerOpacity,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacity,\n        selection: state.selection,\n        primaryTraceKey: state.primaryTraceKey,\n        pointSize: state.pointSize,\n        chartSize: state.chartSize,\n        primaryChartSize: state.primaryChartSize,\n        chartOptions: state.chartOptions\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handlePrimaryTraceKey: (value) => {\n            dispatch(setPrimaryTraceKey(value));\n        },\n        handleEmbeddingData: (value) => {\n            dispatch(setEmbeddingData(value));\n        }\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(GalleryCharts));\n\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setDialog} from './actions';\n\nclass HelpDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n        };\n    }\n\n    handleClose = () => {\n        this.props.handleClose();\n    };\n\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby=\"help-dataset-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"help-dataset-dialog-title\">Help</DialogTitle>\n                <DialogContent>\n                    <Typography variant=\"h6\">Primary Embedding Controls</Typography>\n                    <Typography variant=\"subtitle1\">3-d Plot</Typography>\n                    Rotate: Mouse left click.<br/>\n                    Pan: Mouse right click.<br/>\n                    Zoom: Mouse wheel.<br/>\n\n                    <Typography variant=\"subtitle1\">2-d Plot</Typography>\n                    Pan: Mouse left click.<br/>\n                    Zoom: Mouse wheel.<br/>\n                    <Divider/>\n                    <Typography variant=\"h6\">Gallery</Typography>\n                    Drag chart to reorder. Click plot to set primary view.\n                    <Divider/>\n                    <Typography variant=\"h6\">Dot Plot</Typography>\n                    Enter one or more categorical observations and one or more features.\n                    <Divider/>\n                    <Typography variant=\"h6\">Additional documentation is available <a target=\"_blank\"\n                                                                                      rel=\"noopener noreferrer\"\n                                                                                      href=\"http://cirrocumulus.readthedocs.io/\">here</a>.</Typography>\n                </DialogContent>\n\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {};\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n\n\n        handleClose: value => {\n            dispatch(setDialog(null));\n        },\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(HelpDialog));\n\n","import Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {setChartOptions, setDialog} from './actions';\n\n\nclass MoreOptionsDialog extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {labelFontSize: '', labelStrokeWidth: ''};\n    }\n\n    componentDidMount() {\n        this.setState({\n            labelFontSize: this.props.chartOptions.labelFontSize,\n            labelStrokeWidth: this.props.chartOptions.labelStrokeWidth\n        });\n    }\n\n    handleClose = () => {\n        this.props.handleClose();\n    };\n\n    onLabelFontSizeKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let value = parseFloat(event.target.value);\n            if (!isNaN(value) && value > 0) {\n                this.props.chartOptions.labelFontSize = value;\n                this.props.handleChartOptions(this.props.chartOptions);\n                this.setState({labelFontSize: value});\n            }\n        }\n    };\n\n    onLabelFontSize = (event) => {\n        this.setState({labelFontSize: event.target.value});\n    };\n\n    onLabelStrokeWidth = (event) => {\n        this.setState({labelStrokeWidth: event.target.value});\n    };\n\n    onLabelStrokeWidthKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let value = parseFloat(event.target.value);\n            if (!isNaN(value) && value >= 0) {\n                this.props.chartOptions.labelStrokeWidth = value;\n                this.props.handleChartOptions(this.props.chartOptions);\n                this.setState({labelStrokeWidth: value});\n            }\n        }\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"more-options-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"more-options-dialog-title\">More Options</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        value={this.state.labelFontSize}\n                        onChange={this.onLabelFontSize}\n                        onKeyPress={this.onLabelFontSizeKeyPress}\n                        margin=\"dense\"\n                        label=\"Label Font Size\"\n                        fullWidth\n                    />\n\n                    <TextField\n                        value={this.state.labelStrokeWidth}\n                        onChange={this.onLabelStrokeWidth}\n                        onKeyPress={this.onLabelStrokeWidthKeyPress}\n                        margin=\"dense\"\n                        label=\"Label Shadow Size\"\n                        fullWidth\n                    />\n\n                </DialogContent>\n\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        chartOptions: state.chartOptions,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleChartOptions: value => {\n            dispatch(setChartOptions(value));\n        },\n        handleClose: () => {\n            dispatch(setDialog(null));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(MoreOptionsDialog));\n\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {saveDatasetFilter, setDialog, setMessage} from './actions';\n\nclass SaveDatasetFilterDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            name: '',\n            notes: ''\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.savedFilter == null) {\n            this.setState({name: '', notes: '', create: true});\n        } else {\n            this.setState({name: this.props.savedFilter.name, notes: this.props.savedFilter.notes});\n        }\n    }\n\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n\n    onNotesChanged = (event) => {\n        this.setState({notes: event.target.value});\n    };\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        let name = this.state.name.trim();\n        let notes = this.state.notes;\n        if (notes != null) {\n            notes = notes.trim();\n        }\n        this.setState({loading: true});\n        this.props.handleSave({name: name, notes: notes});\n    };\n\n\n    render() {\n        let {name, notes, create} = this.state;\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-dataset-filter-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"edit-dataset-filter-dialog-title\">{create\n                    ? 'Create'\n                    : 'Edit'} Filter</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        required={true}\n                        value={name}\n                        autoComplete=\"off\"\n                        onChange={this.onNameChanged}\n                        margin=\"dense\"\n                        label=\"Name\"\n                        fullWidth\n                    />\n\n                    <TextField\n                        required={false}\n                        autoComplete=\"off\"\n                        value={notes}\n                        onChange={this.onNotesChanged}\n                        margin=\"dense\"\n                        label=\"Notes\"\n                        fullWidth\n                    />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={name.trim().length === 0} onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        savedFilter: state.savedDatasetFilter,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveDatasetFilter(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(SaveDatasetFilterDialog));\n\n","import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {saveFeatureSet, setDialog, setMessage} from './actions';\n\nclass SaveSetDialog extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true,\n            name: '',\n            category: ''\n        };\n    }\n\n\n    onNameChanged = (event) => {\n        this.setState({name: event.target.value});\n    };\n\n    onCategoryChanged = (event) => {\n        this.setState({category: event.target.value});\n    };\n\n    handleClose = () => {\n        this.props.handleCancel();\n    };\n\n    handleSave = () => {\n        let name = this.state.name.trim();\n        let category = this.state.category;\n        if (category != null) {\n            category = category.trim();\n        }\n        this.setState({loading: true});\n        this.props.handleSave({name: name, category: category});\n    };\n\n\n    render() {\n        let {name, category} = this.state;\n        return (\n            <Dialog\n                open={true}\n                onClose={this.handleClose}\n                aria-labelledby=\"edit-set-dialog-title\"\n                fullWidth={true}\n                maxWidth={'sm'}\n            >\n                <DialogTitle id=\"edit-set-dialog-title\">Create Set</DialogTitle>\n                <DialogContent>\n\n                    <TextField\n                        required={true}\n                        autoComplete=\"off\"\n                        value={name}\n                        onChange={this.onNameChanged}\n                        margin=\"dense\"\n                        label=\"Set Name\"\n                        fullWidth\n                    />\n\n                    <TextField\n                        required={true}\n                        autoComplete=\"off\"\n                        value={category}\n                        onChange={this.onCategoryChanged}\n                        margin=\"dense\"\n                        label=\"Set Category\"\n                        fullWidth\n                    />\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={name.trim().length === 0 || category.trim().length === 0}\n                            onClick={this.handleSave} color=\"primary\">\n                        Save\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        savedFilter: state.savedDatasetFilter,\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: value => {\n            dispatch(saveFeatureSet(value));\n        },\n        handleCancel: value => {\n            dispatch(setDialog(null));\n        },\n        handleError: value => {\n            dispatch(setMessage(value));\n        },\n\n    };\n};\n\nexport default (connect(\n    mapStateToProps, mapDispatchToProps,\n)(SaveSetDialog));\n\n","import {Typography} from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Autocomplete, {createFilterOptions} from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {VariableSizeList} from 'react-window';\n\nconst LISTBOX_PADDING = 0; // px\n\nfunction renderRow(props) {\n    const {data, index, style} = props;\n    return React.cloneElement(data[index], {\n        style: {\n            ...style,\n            top: style.top + LISTBOX_PADDING,\n        },\n    });\n}\n\nconst OuterElementContext = React.createContext({});\n\nconst OuterElementType = React.forwardRef((props, ref) => {\n    const outerProps = React.useContext(OuterElementContext);\n    return <div ref={ref} {...props} {...outerProps} />;\n});\n\n// Adapter for react-window\nconst ListboxComponent = React.forwardRef(function ListboxComponent(props, ref) {\n    const {children, ...other} = props;\n    const itemData = React.Children.toArray(children);\n    const theme = useTheme();\n    const smUp = useMediaQuery(theme.breakpoints.up('sm'), {noSsr: true});\n    const itemCount = itemData.length;\n    const itemSize = smUp ? 24 : 36;\n\n    const getChildSize = (child) => {\n        // if (React.isValidElement(child) && child.type === ListSubheader) {\n        //     return 48;\n        // }\n\n        return itemSize;\n    };\n\n    const getHeight = () => {\n        if (itemCount > 8) {\n            return 8 * itemSize;\n        }\n        return itemData.map(getChildSize).reduce((a, b) => a + b, 0);\n    };\n\n    return (\n        <div ref={ref}>\n            <OuterElementContext.Provider value={other}>\n                <VariableSizeList\n                    itemData={itemData}\n                    height={getHeight() + LISTBOX_PADDING}\n                    width=\"100%\"\n                    key={itemCount}\n                    outerElementType={OuterElementType}\n                    innerElementType=\"ul\"\n                    itemSize={(index) => getChildSize(itemData[index])}\n                    overscanCount={5}\n                    itemCount={itemCount}\n                >\n                    {renderRow}\n                </VariableSizeList>\n            </OuterElementContext.Provider>\n        </div>\n    );\n});\n\nListboxComponent.propTypes = {\n    children: PropTypes.node,\n};\n\n\nconst useStyles = makeStyles({\n    paper: {width: 230},\n    listbox: {\n        '& ul': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\n\nconst renderGroup = (params) => [\n    <ListSubheader disableGutters component=\"div\">\n        <Typography noWrap>{params.group}</Typography>\n    </ListSubheader>,\n    params.children,\n];\n\n\nexport default function AutocompleteVirtualized(props) {\n    const classes = useStyles();\n    const ref = React.createRef();\n\n    function onDrop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        let dt = event.dataTransfer;\n        let files = dt.files;\n        let reader = new FileReader();\n        reader.onload = function (event) {\n            let text = event.target.result;\n            let tokens = text.split(/[\\n,\\t]/);\n            enterTokens(event, tokens);\n        };\n\n        reader.onerror = function (event) {\n            alert(\"Unable to read file.\");\n        };\n\n        reader.readAsText(files[0]);\n        showDragIndicator(false);\n    };\n\n    function enterTokens(event, tokens) {\n        let results = [];\n        tokens.forEach(token => {\n            token = token.toLowerCase().trim().replace(/\"/g, '');\n            if (token !== '') {\n                for (let i = 0; i < props.options.length; i++) {\n                    if (props.options[i].toLowerCase() === token) {\n                        results.push(props.options[i]);\n                        break;\n                    }\n\n                }\n            }\n        });\n        props.onChange(event, results);\n    }\n\n    function onPaste(event) {\n        let text = event.clipboardData.getData('text/plain');\n        if (text != null && text.length > 0) {\n            event.preventDefault();\n            event.stopPropagation();\n            let tokens = text.split(/[\\n,\\t]/);\n            enterTokens(event, tokens);\n        }\n    };\n\n    function showDragIndicator(show) {\n        ref.current.style.background = show ? '#1976d2' : '';\n    }\n\n    function onDragOver(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        showDragIndicator(true);\n\n    };\n\n    function onDragEnd(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        showDragIndicator(false);\n    };\n\n    const filterOptions = createFilterOptions({matchFrom: 'start'});\n    const onClick = (event, option) => {\n        props.onChipClick(event, option);\n    };\n\n    let getOptionSelected = props.getOptionSelected;\n    if (getOptionSelected == null) {\n        getOptionSelected = props.groupBy ? (option, value) => option.id === value.id && option.group === value.group : (option, value) => option === value;\n    }\n    let getChipText = props.getChipText;\n    if (getChipText == null) {\n        getChipText = (option) => option;\n    }\n    return (\n        <Autocomplete\n            multiple\n            ref={ref}\n            filterOptions={filterOptions}\n            disableListWrap\n            classes={classes}\n            getOptionSelected={getOptionSelected}\n            value={props.value}\n            openOnFocus={true}\n            filterSelectedOptions={true}\n            getOptionLabel={props.groupBy ? (option) => option.text : (option) => option}\n            groupBy={props.groupBy ? (option) => option.group : null}\n            blurOnSelect={true}\n            ChipProps={{size: 'small'}}\n            ListboxComponent={ListboxComponent}\n            renderGroup={renderGroup}\n            options={props.options}\n            autoHighlight={true}\n            onChange={props.onChange}\n            renderTags={props.onChipClick == null ? null : (value, getTagProps) =>\n                value.map((option, index) => {\n                    return (\n                        <Chip\n                            variant=\"default\"\n                            onClick={event => onClick(event, option)}\n                            label={getChipText(option)}\n                            size=\"small\"\n                            {...getTagProps({index})}\n                        />);\n                })\n            }\n            renderInput={(params) => <TextField margin=\"dense\" {...params} label={props.label}\n                                                helperText={props.helperText}/>}\n            renderOption={props.groupBy ? (option) => <Typography title={option.text}\n                                                                  noWrap>{option.text}</Typography> : (option) =>\n                <Typography\n                    noWrap>{option}</Typography>}\n            onPaste={onPaste}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n            onDragEnd={onDragEnd}\n            onDragLeave={onDragEnd}\n        />\n    );\n}\n","import {InputLabel, Switch} from '@material-ui/core';\nimport MuiAccordionPanel from '@material-ui/core/Accordion';\nimport MuiAccordionPanelDetails from '@material-ui/core/AccordionDetails';\nimport MuiAccordionPanelSummary from '@material-ui/core/AccordionSummary';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport SaveIcon from '@material-ui/icons/Save';\nimport memoize from \"memoize-one\";\nimport natsort from 'natsort';\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    deleteDatasetFilter,\n    deleteFeatureSet,\n    downloadSelectedIds,\n    exportDatasetFilters,\n    getDatasetFilterArray,\n    getEmbeddingKey,\n    getTraceKey,\n    openDatasetFilter,\n    removeDatasetFilter,\n    SAVE_DATASET_FILTER_DIALOG,\n    SAVE_FEATURE_SET_DIALOG,\n    setBinSummary,\n    setBinValues,\n    setChartSize,\n    setCombineDatasetFilters,\n    setDialog,\n    setInterpolator,\n    setMarkerOpacity,\n    setMarkerOpacityUI,\n    setNumberOfBins,\n    setNumberOfBinsUI,\n    setPointSize,\n    setPrimaryTraceKey,\n    setSearchTokens,\n    setSelectedEmbedding,\n    setUnselectedMarkerOpacity,\n    setUnselectedMarkerOpacityUI\n} from './actions';\nimport AutocompleteVirtualized from './AutocompleteVirtualized';\nimport ColorSchemeSelector from './ColorSchemeSelector';\nimport {intFormat} from './formatters';\nimport {getFeatureSets, splitSearchTokens} from './util';\n\nconst sorter = natsort();\nconst pointSizeOptions = [{value: 0.1, label: '10%'}, {value: 0.25, label: '25%'}, {value: 0.5, label: '50%'}, {\n    value: 0.75,\n    label: '75%'\n}, {value: 1, label: '100%'}, {value: 1.5, label: '150%'}, {value: 2, label: '200%'}, {\n    value: 3,\n    label: '300%'\n}, {value: 4, label: '400%'}];\nconst gallerySizeOptions = [{value: 300, label: 'Small'}, {value: 500, label: 'Medium'}, {\n    value: 800,\n    label: 'Large'\n}];\nconst summaryOptions = [\n    {value: 'max', label: 'Maximum'},\n    {value: 'mean', label: 'Mean'},\n    {value: 'sum', label: 'Sum'}];\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        width: '100%',\n        flexDirection: 'column'\n    },\n    formControl: {\n        display: 'block',\n        minWidth: 200,\n        margin: theme.spacing(1),\n    },\n    select: {\n        minWidth: 200,\n    },\n});\n\nconst getEmbeddingKeys = memoize(\n    (embeddings) => {\n        const embeddingKeys = embeddings.map(e => getEmbeddingKey(e));\n        embeddingKeys.sort(sorter);\n        return embeddingKeys;\n    }\n);\n\nconst getAnnotationOptions = memoize(\n    (obs, obsCat) => {\n        const options = [];\n        obs.forEach(item => {\n            options.push({group: 'Continuous', text: item, id: item});\n        });\n        obsCat.forEach(item => {\n            options.push({group: 'Categorical', text: item, id: item});\n        });\n        options.sort((item1, item2) => {\n            const c = sorter(item1.group, item2.group);\n            if (c !== 0) {\n                return c;\n            }\n            return sorter(item1.text, item2.text);\n        });\n        return options;\n    }\n);\nconst getFeatureSetOptions = memoize((markers) => {\n        const options = markers.map(item => ({group: item.category, text: item.name, id: item.id}));\n        options.sort((item1, item2) => {\n            const c = sorter(item1.group, item2.group);\n            if (c !== 0) {\n                return c;\n            }\n            return sorter(item1.text, item2.text);\n        });\n        return options;\n    }\n);\nconst Accordion = withStyles({\n    root: {\n        border: '1px solid rgba(0, 0, 0, .125)',\n        boxShadow: 'none',\n        '&:not(:last-child)': {\n            borderBottom: 0,\n        },\n        '&:before': {\n            display: 'none',\n        },\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiAccordionPanel);\n\nconst AccordionPanelSummary = withStyles({\n    root: {\n        backgroundColor: 'rgba(0, 0, 0, .03)',\n        borderBottom: '1px solid rgba(0, 0, 0, .125)',\n        marginBottom: -1,\n        minHeight: 43,\n        '&$expanded': {\n            minHeight: 43,\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: 0,\n        },\n    },\n    expanded: {},\n})(MuiAccordionPanelSummary);\n\nconst AccordionPanelDetails = withStyles(theme => ({\n    root: {\n        padding: 0,\n    },\n}))(MuiAccordionPanelDetails);\n\n\nclass SideBar extends React.PureComponent {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {featureSetAnchorEl: null, readonly: false};\n    }\n\n    openDatasetFilter = (filterId) => {\n        this.props.handleOpenDatasetFilter(filterId);\n    };\n\n    deleteDatasetFilter = (filterId) => {\n        this.props.handleDeleteDatasetFilter(filterId);\n    };\n\n    onMarkerOpacityChange = (event) => {\n        this.props.handleMarkerOpacityUI(event.target.value);\n    };\n\n    onPointSizeChange = (event) => {\n        this.props.handlePointSize(event.target.value);\n    };\n\n    onFeaturesChange = (event, value) => {\n        this.props.handleSearchTokens(value, 'X');\n    };\n\n    onObservationsChange = (event, value) => {\n        let values = [];\n        value.forEach(val => {\n            if (val.text !== undefined) {\n                values.push(val.text);\n            } else {\n                values.push(val);\n            }\n        });\n        this.props.handleSearchTokens(values, 'obs');\n    };\n\n    onSaveFeatureList = () => {\n        this.props.handleDialog(SAVE_FEATURE_SET_DIALOG);\n    };\n\n    onFeatureSetsChange = (event, value) => {\n        let values = [];\n        value.forEach(val => {\n            if (val.id !== undefined) {\n                values.push(val.id);\n            } else {\n                values.push(val);\n            }\n        });\n        this.props.handleSearchTokens(values, 'featureSet');\n    };\n\n    onFeatureClick = (event, option) => {\n        const value = option.text !== undefined ? option.text : option;\n        let galleryTraces = this.props.embeddingData.filter(traceInfo => traceInfo.active);\n        for (let i = 0; i < galleryTraces.length; i++) {\n            if (galleryTraces[i].name == value) {\n                this.props.handlePrimaryTraceKey(getTraceKey(galleryTraces[i]));\n                break;\n            }\n        }\n    };\n    onFeatureSetClick = (event, option) => {\n        const id = option.id;\n        const target = event.target;\n        let markers = this.props.markers;\n        let isReadOnly = false;\n        let found = false;\n        for (let i = 0; i < markers.length; i++) {\n            if (markers[i].id === id) {\n                isReadOnly = markers[i].readonly;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            console.log(id + ' not found');\n        }\n        this.setState({featureSetAnchorEl: target, featureSetId: id, readonly: isReadOnly || !found});\n\n    };\n\n    onFeatureSetMenuClose = (event) => {\n        this.setState({featureSetAnchorEl: null, readonly: false});\n    };\n\n    onDeleteFeatureSet = (event) => {\n        event.stopPropagation();\n        let searchTokens = this.props.searchTokens;\n        let value = searchTokens.filter(token => token.type === 'featureSet' && token.value.id !== this.state.featureSetId);\n        this.props.handleSearchTokens(value, 'featureSet');\n        this.props.handleDeleteFeatureSet(this.state.featureSetId);\n        this.setState({featureSetAnchorEl: null, featureSetId: null, readonly: false});\n    };\n\n    onFilterChipClicked = (event) => {\n        this.onFeatureClick(event.target.innerText);\n    };\n\n    onMarkerOpacityKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let opacity = parseFloat(event.target.value);\n            if (opacity >= 0 && opacity <= 1) {\n                this.props.handleMarkerOpacity(opacity);\n            }\n        }\n    };\n\n    onUnselectedMarkerOpacityChange = (event) => {\n        this.props.handleUnselectedMarkerOpacityUI(event.target.value);\n    };\n\n    onUnselectedMarkerOpacityKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let opacity = parseFloat(event.target.value);\n            if (opacity >= 0 && opacity <= 1) {\n                this.props.handleUnselectedMarkerOpacity(opacity);\n            }\n        }\n    };\n\n    onNumberOfBinsChange = (event) => {\n        this.props.handleNumberOfBinsUI(event.target.value);\n    };\n\n    onNumberOfBinsKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            let value = parseInt(event.target.value);\n            if (value >= 0) {\n                this.props.handleNumberOfBins(event.target.value);\n                let embeddings = this.props.embeddings;\n                for (let i = 0; i < embeddings.length; i++) {\n                    if (!embeddings[i].precomputed) {\n                        embeddings[i] = Object.assign(embeddings[i], {nbins: value, _nbins: value});\n                    }\n                }\n                this.props.handleEmbeddings(embeddings.slice(0));\n            }\n        }\n    };\n\n    onChartSizeChange = (event) => {\n        const value = event.target.value;\n        this.props.handleChartSize(value);\n\n    };\n\n    onBinSummaryChange = (event) => {\n        const value = event.target.value;\n        this.props.handleBinSummary(value);\n        let embeddings = this.props.embeddings;\n        for (let i = 0; i < embeddings.length; i++) {\n            if (!embeddings[i].precomputed) {\n                embeddings[i] = Object.assign(embeddings[i], {agg: value});\n            }\n        }\n        this.props.handleEmbeddings(embeddings.slice(0));\n    };\n\n    handleBinValuesChange = (event) => {\n        const value = event.target.checked;\n        this.props.handleBinValues(value);\n        let embeddings = this.props.embeddings;\n        for (let i = 0; i < embeddings.length; i++) {\n            if (!embeddings[i].precomputed) {\n                embeddings[i] = Object.assign(embeddings[i], {bin: value});\n            }\n        }\n        this.props.handleEmbeddings(embeddings.slice(0));\n    };\n\n    handleEmbeddingsChange = (event) => {\n        const embeddings = event.target.value;\n        const selection = [];\n\n        embeddings.forEach(embedding => {\n            if (!embedding.precomputed) {\n                embedding = Object.assign(embedding, {\n                    bin: this.props.binValues,\n                    nbins: this.props.numberOfBins,\n                    _nbins: this.props.numberOfBinsUI,\n                    agg: this.props.binSummary\n                });\n            }\n            selection.push(embedding);\n        });\n\n\n        this.props.handleEmbeddings(selection);\n    };\n\n    handleSelectedCellsClick = (event) => {\n        event.preventDefault();\n        this.props.downloadSelectedIds();\n    };\n\n\n    onDatasetFilterChipDeleted = (name) => {\n        this.props.removeDatasetFilter(name);\n    };\n\n    onDatasetFilterCleared = () => {\n        this.props.removeDatasetFilter(null);\n    };\n\n    onDatasetFilterSaved = () => {\n        this.props.handleDialog(SAVE_DATASET_FILTER_DIALOG);\n    };\n\n    handleCombineDatasetFilters = (event) => {\n        this.props.handleCombineDatasetFilters(event.target.checked ? 'or' : 'and');\n    };\n\n\n    render() {\n        const {\n            chartSize, numberOfBinsUI, binValues, binSummary, embeddings, classes,\n            searchTokens, markerOpacity, datasetFilter, datasetFilters, interpolator, markers,\n            unselectedMarkerOpacity, dataset, pointSize, combineDatasetFilters, selection, serverInfo\n        } = this.props;\n\n        let currentDatasetFilters = getDatasetFilterArray(datasetFilter);\n\n        const datasetFilterKeys = [];\n        let isBrushing = false;\n        currentDatasetFilters.forEach(f => {\n            if (typeof f[0] === 'object') {\n                isBrushing = true;\n            } else {\n                datasetFilterKeys.push(f[0]);\n            }\n        });\n        datasetFilterKeys.sort((a, b) => {\n            a = a.toLowerCase();\n            b = b.toLowerCase();\n            return a < b ? -1 : (a === b ? 0 : 1);\n        });\n        if (isBrushing) {\n            datasetFilterKeys.push('selection');\n        }\n\n        // for filters we only need one embedding trace per feature\n        // const traceNames = new Set();\n        // const filterTraces = [];\n        // let primaryTraceName;\n        // embeddingData.forEach(trace => {\n        //     if (primaryTraceKey === getTraceKey(trace)) {\n        //         primaryTraceName = trace.name;\n        //     }\n        //     if (trace.active && trace.name !== '__count' && !traceNames.has(trace.name)) {\n        //         traceNames.add(trace.name);\n        //         filterTraces.push(trace);\n        //     }\n        // });\n        // // put active trace 1st\n        // filterTraces.sort((a, b) => {\n        //     if (a.name === primaryTraceName) {\n        //         return -1;\n        //     }\n        //     if (b.name === primaryTraceName) {\n        //         return 1;\n        //     }\n        //     a = a.name.toLowerCase();\n        //     b = b.name.toLowerCase();\n        //     return a < b ? -1 : (a === b ? 0 : 1);\n        // });\n\n\n        let savedDatasetFilter = this.props.savedDatasetFilter;\n        if (savedDatasetFilter == null) {\n            savedDatasetFilter = {};\n        }\n        const splitTokens = splitSearchTokens(searchTokens);\n        const featureSets = getFeatureSets(markers, splitTokens.featureSets);\n        const featureOptions = dataset.features;\n        const availableEmbeddings = dataset.embeddings;\n\n        const isSummarized = dataset.precomputed != null;\n        const obsCat = dataset.obsCat;\n        const obs = dataset.obs;\n        const embeddingKeys = getEmbeddingKeys(embeddings);\n        const annotationOptions = getAnnotationOptions(obs, obsCat);\n        const featureSetOptions = getFeatureSetOptions(markers);\n\n        const fancy = serverInfo.fancy;\n        const showBinPlot = false;\n        const featureSetAnchorEl = this.state.featureSetAnchorEl;\n        return (\n            <div className={classes.root}>\n                <Menu\n                    id=\"delete-set-menu\"\n                    anchorEl={featureSetAnchorEl}\n                    open={Boolean(featureSetAnchorEl)}\n                    onClose={this.onFeatureSetMenuClose}\n                >\n                    <MenuItem disabled={this.state.readonly} onClick={this.onDeleteFeatureSet}>Delete</MenuItem>\n\n                </Menu>\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"embedding-label\">Embeddings</InputLabel>\n                    <Select\n                        className={classes.select}\n                        labelId=\"embedding-label\"\n                        multiple\n                        value={embeddings}\n                        onChange={this.handleEmbeddingsChange}\n                        input={<Input/>}\n                        renderValue={selected => selected.map(e => e.name + (e.dimensions === 3 ? ' 3d' : '')).join(', ')}\n                    >\n                        {availableEmbeddings.map(embedding => (\n                            <MenuItem key={getEmbeddingKey(embedding)}\n                                      value={embedding}>\n                                <Checkbox checked={embeddingKeys.indexOf(getEmbeddingKey(embedding)) !== -1}/>\n                                <ListItemText primary={embedding.name + (embedding.dimensions === 3 ? ' 3d' : '')}/>\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.formControl}>\n\n                    {/*<AutocompleteSelect label=\"Features\" options={allOptions}*/}\n                    {/*                    defaultOptions={defaultOptions} value={featureValue}*/}\n                    {/*                    onChange={this.props.handleFeatures}*/}\n                    {/*                    helperText={'Enter or paste list'}*/}\n                    {/*                    isMulti={true}/>*/}\n                    <AutocompleteVirtualized onChipClick={this.onFeatureClick} label={\"Features/Genes\"}\n                                             options={featureOptions} value={splitTokens.X}\n                                             onChange={this.onFeaturesChange}\n                                             helperText={\"Enter or paste list\"}\n                    />\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n\n                    {/*<AutocompleteSelect label=\"Features\" options={allOptions}*/}\n                    {/*                    defaultOptions={defaultOptions} value={featureValue}*/}\n                    {/*                    onChange={this.props.handleFeatures}*/}\n                    {/*                    helperText={'Enter or paste list'}*/}\n                    {/*                    isMulti={true}/>*/}\n                    <AutocompleteVirtualized label={\"Cell Metadata\"}\n                                             options={annotationOptions}\n                                             value={splitTokens.obs.concat(splitTokens.obsCat)}\n                                             onChipClick={this.onFeatureClick}\n                                             groupBy={true}\n                                             getOptionSelected={(option, value) => option.id === value}\n                                             onChange={this.onObservationsChange}/>\n                </FormControl>\n\n                {(fancy || featureSetOptions.length > 0) && <FormControl className={classes.formControl}>\n\n                    <AutocompleteVirtualized label={\"Sets\"}\n                                             options={featureSetOptions}\n                                             value={featureSets}\n                                             onChipClick={this.onFeatureSetClick}\n                                             groupBy={true}\n                                             onChange={this.onFeatureSetsChange}\n                                             getOptionSelected={(option, value) => option.id === value.id}\n                                             getChipText={option => option.name}/>\n                    {fancy && splitTokens.X.length > 0 &&\n                    <Tooltip title={\"Save Current Feature List\"}>\n                        <IconButton size={'small'} onClick={this.onSaveFeatureList}>\n                            <SaveIcon/>\n                        </IconButton>\n                    </Tooltip>\n                    }\n                </FormControl>}\n\n                <Accordion defaultExpanded>\n                    <AccordionPanelSummary\n                        aria-controls=\"filter-content\"\n                        id=\"filter-header\"\n                    >\n                        <div>Filters</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails>\n                        <div style={{marginLeft: 10, maxHeight: 500}}>\n\n                            <Grid component=\"label\" alignContent={\"flex-start\"} container alignItems=\"center\"\n                                  spacing={0}>\n                                <Grid item><InputLabel shrink={true} variant={\"standard\"}>Combine\n                                    Filters</InputLabel></Grid>\n                                <Grid item>AND</Grid>\n                                <Grid item>\n                                    <Switch\n                                        size=\"small\"\n                                        checked={combineDatasetFilters === 'or'}\n                                        onChange={this.handleCombineDatasetFilters}\n                                    />\n                                </Grid>\n                                <Grid item>OR</Grid>\n                            </Grid>\n\n                            {datasetFilterKeys.length > 0 && !isNaN(selection.count) &&\n                            <React.Fragment>\n                                <div style={{marginBottom: 2}}>\n                                    {intFormat(selection.count) + \" / \" + intFormat(dataset.shape[0]) + \": \"}\n                                    {datasetFilterKeys.map(key => {\n                                        return <Chip\n                                            onDelete={() => {\n                                                this.onDatasetFilterChipDeleted(key);\n                                            }}\n                                            onClick={this.onFilterChipClicked} size={\"small\"} variant={\"default\"}\n                                            style={{marginRight: 2, verticalAlign: 'bottom'}}\n                                            key={key}\n                                            label={key}\n\n                                        />;\n                                    })}\n                                    <Divider/>\n                                    <Tooltip title={\"Clear All\"}>\n                                        <IconButton size={'small'} disabled={datasetFilterKeys.length === 0}\n                                                    onClick={this.onDatasetFilterCleared}><HighlightOffIcon/></IconButton>\n                                    </Tooltip>\n                                    {fancy && <Tooltip title={\"Save Filter\"}>\n                                        <IconButton size={'small'} disabled={datasetFilterKeys.length === 0}\n                                                    onClick={this.onDatasetFilterSaved}><SaveIcon/></IconButton>\n                                    </Tooltip>}\n                                    <Tooltip title={\"Download Selected IDs\"}>\n                                        <IconButton size={'small'} disabled={datasetFilterKeys.length === 0}\n                                                    onClick={this.handleSelectedCellsClick}><CloudDownloadIcon/></IconButton>\n                                    </Tooltip>\n                                    <Divider/>\n                                </div>\n                            </React.Fragment>\n                            }\n\n\n                        </div>\n                    </AccordionPanelDetails>\n                </Accordion>\n                <Accordion defaultExpanded>\n                    <AccordionPanelSummary\n                        aria-controls=\"view-options-content\"\n                        id=\"view-options-header\"\n                    >\n                        <div>View Options</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails>\n                        <div>\n\n\n                            {/*<TextField type=\"text\" onKeyPress={this.onMarkerSizeKeyPress}*/}\n                            {/*           onChange={this.onMarkerSizeChange} label=\"Marker Size\"*/}\n                            {/*           className={classes.formControl} value={markerSize}/>*/}\n                            {/*<TextField type=\"text\" onKeyPress={this.onUnselectedMarkerSizeKeyPress}*/}\n                            {/*           onChange={this.onUnselectedMarkerSizeChange} label=\"Unselected Marker Size\"*/}\n                            {/*           className={classes.formControl} value={unselectedMarkerSize}/>*/}\n                            <TextField type=\"text\" onKeyPress={this.onMarkerOpacityKeyPress}\n                                       onChange={this.onMarkerOpacityChange} label=\"Marker Opacity\"\n                                       className={classes.formControl} value={markerOpacity}/>\n                            <TextField type=\"text\"\n                                       onKeyPress={this.onUnselectedMarkerOpacityKeyPress}\n                                       onChange={this.onUnselectedMarkerOpacityChange} label=\"Filtered Marker Opacity\"\n                                       className={classes.formControl} value={unselectedMarkerOpacity}/>\n\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"point_size\">Marker Size</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    input={<Input id=\"point_size\"/>}\n                                    onChange={this.onPointSizeChange}\n                                    value={pointSize}\n                                    multiple={false}>\n                                    {pointSizeOptions.map(item => (\n                                        <MenuItem key={item.label} value={item.value}>\n                                            <ListItemText primary={item.label}/>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"chart_size\">Gallery Chart Size</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    input={<Input id=\"chart_size\"/>}\n                                    onChange={this.onChartSizeChange}\n                                    value={chartSize}\n                                    multiple={false}>\n                                    {gallerySizeOptions.map(item => (\n                                        <MenuItem key={item.label} value={item.value}>\n                                            <ListItemText primary={item.label}/>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n                            <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"color-scheme\">Color Scale</InputLabel>\n                                <ColorSchemeSelector handleInterpolator={this.props.handleInterpolator}\n                                                     interpolator={interpolator}/>\n                            </FormControl>\n\n                            {!isSummarized && showBinPlot && <div><FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={binValues}\n                                        value={'binPlot'}\n                                        onChange={this.handleBinValuesChange}\n                                    />\n                                }\n                                label=\"Bin Plot\"\n                            /></div>}\n\n                            {!isSummarized && binValues &&\n                            <TextField max=\"1000\" min=\"20\" step=\"100\" onKeyPress={this.onNumberOfBinsKeyPress}\n                                       value={numberOfBinsUI}\n                                       onChange={this.onNumberOfBinsChange} label=\"# Bins Per Axis\"\n                                       className={classes.formControl}/>}\n\n\n                            {!isSummarized && binValues && <FormControl className={classes.formControl}>\n                                <InputLabel htmlFor=\"summary\">Bin Summary</InputLabel>\n                                <Select\n                                    className={classes.select}\n                                    input={<Input id=\"summary\"/>}\n                                    onChange={this.onBinSummaryChange}\n                                    value={binSummary}\n                                >\n                                    {summaryOptions.map(c => (\n                                        <MenuItem key={c.value} value={c.value}>\n                                            <ListItemText primary={c.label}/>\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>}\n\n\n                            <Divider/>\n\n                            {/*<Typography*/}\n                            {/*    color=\"textSecondary\"*/}\n                            {/*    display=\"block\"*/}\n                            {/*    variant=\"caption\"*/}\n                            {/*>*/}\n                            {/*    Unselected Chart Properties*/}\n                            {/*</Typography>*/}\n\n\n                        </div>\n\n                    </AccordionPanelDetails>\n                </Accordion>\n                {fancy && <Accordion defaultExpanded>\n                    <AccordionPanelSummary\n                        aria-controls=\"filter-options-content\"\n                        id=\"filter-options-header\"\n                    >\n                        <div>Saved Filters</div>\n                    </AccordionPanelSummary>\n                    <AccordionPanelDetails>\n                        <div>\n                            {datasetFilters.length === 0 &&\n                            <Box color=\"text.secondary\" style={{paddingLeft:10}}>No saved filters</Box>}\n                            {datasetFilters.length > 0 && <div><List dense={true}>\n                                {datasetFilters.map(item => (\n                                    <ListItem key={item.id} data-key={item.id} button\n                                              selected={item.id === savedDatasetFilter.id}\n                                              onClick={e => this.openDatasetFilter(item.id)}>\n                                        <ListItemText primary={item.name}/>\n                                        <ListItemSecondaryAction onClick={e => this.deleteDatasetFilter(item.id)}>\n                                            <IconButton edge=\"end\" aria-label=\"delete\">\n                                                <DeleteIcon/>\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                ))}\n                            </List>\n                                <Button onClick={this.props.handleExportDatasetFilters}>Export Filters</Button>\n                            </div>}\n                        </div>\n                    </AccordionPanelDetails>\n                </Accordion>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        markers: state.markers,\n        binValues: state.binValues,\n        binSummary: state.binSummary,\n        numberOfBins: state.numberOfBins,\n        numberOfBinsUI: state.numberOfBinsUI,\n        embeddingData: state.embeddingData,\n        embeddingChartSize: state.embeddingChartSize,\n        interpolator: state.interpolator,\n        markerOpacity: state.markerOpacityUI,\n        pointSize: state.pointSize,\n        primaryTraceKey: state.primaryTraceKey,\n        savedDatasetFilter: state.savedDatasetFilter,\n        serverInfo: state.serverInfo,\n        embeddings: state.embeddings,\n        searchTokens: state.searchTokens,\n        unselectedMarkerOpacity: state.unselectedMarkerOpacityUI,\n        combineDatasetFilters: state.combineDatasetFilters,\n        datasetFilter: state.datasetFilter,\n        datasetFilters: state.datasetFilters,\n        selection: state.selection,\n        chartSize: state.chartSize\n    };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n        handlePrimaryTraceKey: (value) => {\n            dispatch(setPrimaryTraceKey(value));\n        },\n        handleInterpolator: value => {\n            dispatch(setInterpolator(value));\n        },\n        handleChartSize: (value) => {\n            dispatch(setChartSize(value));\n        },\n        handleCombineDatasetFilters: (value) => {\n            dispatch(setCombineDatasetFilters(value));\n        },\n        downloadSelectedIds: () => {\n            dispatch(downloadSelectedIds());\n        },\n        removeDatasetFilter: (filter) => {\n            dispatch(removeDatasetFilter(filter));\n        },\n        handleEmbeddings: value => {\n            dispatch(setSelectedEmbedding(value));\n        },\n\n        handleNumberOfBins: value => {\n            dispatch(setNumberOfBins(value));\n        },\n        handlePointSize: value => {\n            dispatch(setPointSize(value));\n        },\n        handleNumberOfBinsUI: value => {\n            dispatch(setNumberOfBinsUI(value));\n        },\n        handleMarkerOpacity: value => {\n            dispatch(setMarkerOpacity(value));\n        },\n        handleMarkerOpacityUI: value => {\n            dispatch(setMarkerOpacityUI(value));\n        },\n        handleUnselectedMarkerOpacity: value => {\n            dispatch(setUnselectedMarkerOpacity(value));\n        },\n        handleUnselectedMarkerOpacityUI: value => {\n            dispatch(setUnselectedMarkerOpacityUI(value));\n        },\n        handleBinSummary: value => {\n            dispatch(setBinSummary(value));\n        },\n        handleBinValues: value => {\n            dispatch(setBinValues(value));\n        },\n        handleSearchTokens: (value, type) => {\n            dispatch(setSearchTokens(value == null ? [] : value, type));\n        },\n        handleOpenDatasetFilter: value => {\n            dispatch(openDatasetFilter(value));\n        },\n        handleDeleteDatasetFilter: value => {\n            dispatch(deleteDatasetFilter(value));\n        },\n        handleExportDatasetFilters: () => {\n            dispatch(exportDatasetFilters());\n        },\n        handleDeleteFeatureSet: value => {\n            dispatch(deleteFeatureSet(value));\n        },\n\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(SideBar));\n\n\n","import {IconButton, Snackbar} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {createMuiTheme, withStyles} from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {ThemeProvider} from '@material-ui/styles';\nimport React, {PureComponent} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    DELETE_DATASET_DIALOG,\n    EDIT_DATASET_DIALOG,\n    HELP_DIALOG,\n    IMPORT_DATASET_DIALOG,\n    MORE_OPTIONS_DIALOG,\n    SAVE_DATASET_FILTER_DIALOG,\n    SAVE_FEATURE_SET_DIALOG,\n    setDialog,\n    setMessage,\n} from './actions';\nimport AppHeader from './AppHeader';\nimport DeleteDatasetDialog from './DeleteDatasetDialog';\nimport DotPlots from './DotPlots';\nimport EditDatasetDialog from './EditDatasetDialog';\nimport EmbeddingCharts from './EmbeddingCharts';\nimport GalleryCharts from './GalleryCharts';\nimport HelpDialog from './HelpDialog';\nimport MoreOptionsDialog from './MoreOptionsDialog';\nimport SaveDatasetFilterDialog from './SaveDatasetFilterDialog';\nimport SaveSetDialog from './SaveSetDialog';\nimport SideBar from './SideBar';\n\nconst lightTheme = createMuiTheme(\n    {\n        \"palette\": {\n            \"type\": \"light\"\n        }\n    }\n);\n\nconst darkTheme = createMuiTheme(\n    {\n        \"palette\": {\n            \"type\": \"dark\"\n        }\n    }\n);\nexport const drawerWidth = 240;\n\n\nconst styles = (theme) => {\n    return {\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        toolbar: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            paddingTop: theme.spacing(6.5),\n            paddingLeft: theme.spacing(1)\n        }\n    };\n};\n\nclass App extends PureComponent {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {tab: 'embedding'};\n        this.galleryRef = React.createRef();\n    }\n\n    handleMessageClose = () => {\n        this.props.setMessage(null);\n    };\n\n\n    onGallery = () => {\n        window.scrollTo(0, this.galleryRef.current.offsetTop);\n    };\n\n\n    render() {\n\n        // tabs: 1. embedding, 2. grouped table with kde per feature, dotplot\n        // need to add filter, selection\n        const {classes, chartOptions, dataset, dialog, loading, loadingApp, message, tab} = this.props;\n        const theme = !chartOptions.darkMode ? lightTheme : darkTheme;\n        const color = theme.palette.primary.main;\n        const bgcolor = chartOptions.darkMode ? 'black' : 'white';\n        return (<ThemeProvider theme={theme}>\n                <div className={classes.root}>\n                    {(dialog === EDIT_DATASET_DIALOG || dialog === IMPORT_DATASET_DIALOG) &&\n                    <EditDatasetDialog/>}\n                    {dialog === DELETE_DATASET_DIALOG && <DeleteDatasetDialog/>}\n                    {dialog === SAVE_DATASET_FILTER_DIALOG && <SaveDatasetFilterDialog/>}\n                    {dialog === HELP_DIALOG && <HelpDialog/>}\n                    {dialog === MORE_OPTIONS_DIALOG && <MoreOptionsDialog/>}\n                    {dialog === SAVE_FEATURE_SET_DIALOG && <SaveSetDialog/>}\n                    <AppHeader/>\n                    <Drawer\n                        className={classes.drawer}\n                        variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        anchor=\"left\"\n                    >\n                        {dataset != null && <SideBar key={dataset.id}/>}\n                    </Drawer>\n\n                    <main style={{backgroundColor: bgcolor, color: color}} className={classes.content}>\n                        {loadingApp.loading &&\n                        <div><h2>Loading<LinearProgress style={{width: '90%'}} variant=\"determinate\"\n                                                        value={loadingApp.progress}/></h2>\n                        </div>}\n\n                        {dataset != null && <React.Fragment>\n                            <div\n                                role=\"tabpanel\"\n                                hidden={tab !== 'embedding'}\n                            >\n                                <EmbeddingCharts onGallery={this.onGallery}/>\n                                <div ref={this.galleryRef}>\n                                    <GalleryCharts/>\n                                </div>\n\n                            </div>\n                            <div\n                                role=\"tabpanel\"\n                                hidden={tab !== 'dot_plot'}\n                            >\n                                <DotPlots/>\n                            </div>\n                        </React.Fragment>}\n\n\n                    </main>\n\n                    {loading && <Dialog aria-labelledby=\"loading-dialog-title\" open={true}>\n                        <DialogTitle id=\"loading-dialog-title\"><CircularProgress size={20}/> Loading...</DialogTitle>\n                    </Dialog>}\n\n\n                    {message != null && <Snackbar\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                        }}\n                        ContentProps={{\n                            'aria-describedby': 'message-id',\n                        }}\n                        onClose={this.handleMessageClose}\n                        open={true}\n                        autoHideDuration={6000}\n                        action={[\n                            <IconButton\n                                key=\"close\"\n                                aria-label=\"Close\"\n                                color=\"inherit\"\n                                onClick={this.handleMessageClose}\n                            >\n                                <CloseIcon/>\n                            </IconButton>,\n                        ]}\n                        message={<span id=\"message-id\">{message instanceof Error\n                            ? message.message\n                            : message}</span>}\n                    />}\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        dataset: state.dataset,\n        dialog: state.dialog,\n        loading: state.loading,\n        loadingApp: state.loadingApp,\n        message: state.message,\n        tab: state.tab,\n        chartOptions: state.chartOptions\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDialog: (value) => {\n            dispatch(setDialog(value));\n        },\n\n        setMessage: (value) => {\n            dispatch(setMessage(value));\n        }\n    };\n};\n\nexport default withStyles(styles)(connect(\n    mapStateToProps, mapDispatchToProps,\n)(App));\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {initGapi} from './actions';\nimport App from './App';\nimport rootReducer from './reducers';\n// import * as serviceWorker from './serviceWorker';\n\n\nconst logger = store => next => action => {\n    console.log(action);\n    let result = next(action);\n    return result;\n};\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware\n    ),\n);\n\nfunction main() {\n    render(\n        <Provider store={store}>\n            {/*<React.StrictMode>*/}\n            <App/>\n            {/*</React.StrictMode>*/}\n        </Provider>,\n        document.getElementById('root'),\n    );\n}\n\n// if (module.hot) {\n//   if (process.env.NODE_ENV !== 'production' && module.hot) {\n//     module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\n//   }\n//   if (process.env.NODE_ENV !== 'production' && module.hot) {\n//     module.hot.accept('./App', main);\n//   }\n// }\nstore.dispatch(initGapi());\nmain();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}